<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://ib.bsb.br/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ib.bsb.br/" rel="alternate" type="text/html" /><updated>2025-05-03T01:34:17+00:00</updated><id>https://ib.bsb.br/feed.xml</id><title type="html">infoBAG</title><entry><title type="html">Building and deploying a custom site using GitHub Actions and GitHub Pages</title><link href="https://ib.bsb.br/building-and-deploying-a-custom-site-using-github-actions-and-github-pages/" rel="alternate" type="text/html" title="Building and deploying a custom site using GitHub Actions and GitHub Pages" /><published>2025-05-03T00:00:00+00:00</published><updated>2025-05-03T01:31:37+00:00</updated><id>https://ib.bsb.br/building-and-deploying-a-custom-site-using-github-actions-and-github-pages</id><content type="html" xml:base="https://ib.bsb.br/building-and-deploying-a-custom-site-using-github-actions-and-github-pages/"><![CDATA[<p>bibref https://til.simonwillison.net/github-actions/github-pages</p>

<p>I figured out a minimal pattern for building a completely custom website using GitHub Actions and deploying the result to GitHub Pages.</p>

<p>First you need to enable GitHub Pages for the repository. Navigate to Settings -&gt; Pages (or visit <code class="language-plaintext highlighter-rouge">$repo/settings/pages</code>) and set the build source to ‚ÄúGitHub Actions‚Äù.</p>

<p>Here‚Äôs my minimal YAML recipe - save this in a <code class="language-plaintext highlighter-rouge">.github/workflows/publish.yml</code> file:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">name</span><span class="pi">:</span> <span class="s">Publish site</span>

<span class="na">on</span><span class="pi">:</span>
  <span class="na">push</span><span class="pi">:</span>
  <span class="na">workflow_dispatch</span><span class="pi">:</span>

<span class="na">permissions</span><span class="pi">:</span>
  <span class="na">pages</span><span class="pi">:</span> <span class="s">write</span>
  <span class="na">id-token</span><span class="pi">:</span> <span class="s">write</span>

<span class="na">jobs</span><span class="pi">:</span>
  <span class="na">build</span><span class="pi">:</span>
    <span class="na">runs-on</span><span class="pi">:</span> <span class="s">ubuntu-latest</span>
    <span class="na">steps</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/checkout@v4</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Build the site</span>
      <span class="na">run</span><span class="pi">:</span> <span class="pi">|</span>
        <span class="s">mkdir _site</span>
        <span class="s">echo '&lt;h1&gt;Hello, world!&lt;/h1&gt;' &gt; _site/index.html</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Upload artifact</span>
      <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/upload-pages-artifact@v3</span>
  <span class="na">deploy</span><span class="pi">:</span>
    <span class="na">environment</span><span class="pi">:</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">github-pages</span>
      <span class="na">url</span><span class="pi">:</span> <span class="s">$</span>
    <span class="na">runs-on</span><span class="pi">:</span> <span class="s">ubuntu-latest</span>
    <span class="na">needs</span><span class="pi">:</span> <span class="s">build</span>
    <span class="na">steps</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Deploy to GitHub Pages</span>
        <span class="na">id</span><span class="pi">:</span> <span class="s">deployment</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/deploy-pages@v4</span>
</code></pre></div></div>
<p>Anything that goes in that <code class="language-plaintext highlighter-rouge">_site/</code> directory will be published to the GitHub Pages site.</p>

<p>The <code class="language-plaintext highlighter-rouge">permissions</code> are required - the <code class="language-plaintext highlighter-rouge">pages: write</code> one enables writes to pages and for some reason the <code class="language-plaintext highlighter-rouge">id-token: write</code> one is needed by the <a href="https://github.com/actions/deploy-pages">actions/deploy-pages</a> action.</p>

<p>The default URL for the site will be <code class="language-plaintext highlighter-rouge">https://$GITHUB_USERNAME.github.io/$REPO_NAME/</code>. You can set this to <a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site">custom domain</a> if you want.</p>

<p><a href="https://github.com/simonw/minimal-github-pages-from-actions/">github.com/simonw/minimal-github-pages-from-actions</a> is an example repository that uses this exact YAML configuration. It publishes a site to <a href="https://simonw.github.io/minimal-github-pages-from-actions/">https://simonw.github.io/minimal-github-pages-from-actions/</a>.</p>

<h2 id="next-steps">Next steps</h2>

<p>You can combine this trick with scheduled workflows and <a href="https://simonwillison.net/2020/Oct/9/git-scraping/">Git scraping</a> to create all sorts of interesting and useful things.</p>

<p>I‚Äôm using it to publish <a href="https://simonw.github.io/recent-california-brown-pelicans/atom.xml">an Atom feed</a> of recent California Brown Pelicans sightings on <a href="https://www.inaturalist.org/">iNaturalist</a> in my <a href="https://github.com/simonw/recent-california-brown-pelicans">simonw/recent-california-brown-pelicans</a> repository.</p>

<p>I also use it to publish my <a href="https://tools.simonwillison.net/">tools.simonwillison.net</a> site with a custom <a href="https://tools.simonwillison.net/colophon">colophon</a> page - see <a href="https://simonwillison.net/2025/Mar/11/using-llms-for-code/#a-detailed-example">this post</a> for details.</p>]]></content><author><name></name></author><category term="scratchpad" /></entry><entry><title type="html">Bind Mounting /home/user to /userdata</title><link href="https://ib.bsb.br/bind-mounting-homeuser-to-userdata/" rel="alternate" type="text/html" title="Bind Mounting /home/user to /userdata" /><published>2025-05-02T00:00:00+00:00</published><updated>2025-05-02T00:13:17+00:00</updated><id>https://ib.bsb.br/bind-mounting-homeuser-to-userdata</id><content type="html" xml:base="https://ib.bsb.br/bind-mounting-homeuser-to-userdata/"><![CDATA[<p>This guide explains how to use mount --bind to make your user‚Äôs home directory (/home/user) utilize the storage space on a larger partition mounted at /userdata. This method is transparent to most applications.</p>

<p>While mount --bind is effective, other methods like symbolic links (ln -s /userdata /home/user) or changing the home directory path directly in /etc/passwd (usermod -d /userdata user) exist, each with different implications (e.g., symlinks might not be followed by all applications, usermod -d changes the canonical path). This guide focuses on the mount --bind approach.</p>

<p><strong>Assumptions:</strong></p>

<ul>
  <li>Your username is user. <strong>Replace user with your actual username throughout.</strong></li>
  <li>Your large partition is mounted at /userdata.</li>
  <li>You want the actual home directory data to reside in a directory named /userdata.</li>
</ul>

<p><strong>üõë IMPORTANT PREREQUISITES üõë</strong></p>

<ul>
  <li><strong>BACKUP:</strong> <strong>Before starting, create a complete and verified backup of your /home/user directory.</strong> Mistakes can lead to data loss.</li>
  <li><strong>LOG OUT USER:</strong> The user whose home directory is being moved (user) <strong>must be completely logged out</strong> from all graphical sessions and terminal logins.</li>
  <li><strong>USE TTY / DIFFERENT USER:</strong> Perform these steps from a text console (TTY) or by logging in as a different administrative user (or root). <strong>Do not perform these steps while logged into the graphical session of the user being modified.</strong>
    <ul>
      <li>Press Ctrl+Alt+F3 (or F1-F6) to switch to a TTY and log in there as root or another admin user.</li>
    </ul>
  </li>
</ul>

<p><strong>Steps:</strong></p>

<p><strong>1. Create the Target Directory on /userdata</strong></p>

<ul>
  <li>Create the directory on the large partition where the home directory data will actually live.<br />
sudo mkdir -p /userdata</li>
</ul>

<p><strong>2. Set Correct Ownership and Permissions</strong></p>

<ul>
  <li>Ensure the new directory belongs to the correct user and group and has standard home directory permissions (700 allows read/write/execute only for the owner).<br />
# Replace user:user with your actual username and primary groupname<br />
sudo chown user:user /userdata<br />
sudo chmod 700 /userdata</li>
</ul>

<p><strong>3. Copy Data from Old Home to New Location</strong></p>

<ul>
  <li>
    <p>Use rsync to copy all files. -a preserves permissions, ownership, timestamps, etc. -X preserves extended attributes, -A preserves ACLs (if used). --info=progress2 shows overall progress. The trailing slashes on the paths are important.<br />
# Replace paths if your username or target dir name is different<br />
sudo rsync -aXA --info=progress2 /home/user/ /userdata/</p>
  </li>
  <li>
    <p>This might take time depending on the amount of data.</p>
  </li>
</ul>

<p><strong>4. Verify Copy Integrity (Recommended)</strong></p>

<ul>
  <li><strong>Crucial:</strong> Before modifying the original directory, verify the copy is complete and accurate. Choose one method:
    <ul>
      <li>
        <p><strong>Method A: diff (Checks for differences)</strong><br />
# This command should ideally produce no output if the copy is identical.<br />
# It might list minor differences in temporary files if run immediately after rsync.<br />
sudo diff -qr /home/user/ /userdata/</p>
      </li>
      <li>
        <p><strong>Method B: rsync Dry Run (Checks what <em>would</em> be copied)</strong><br />
# -n: dry run, -i: itemize changes, -c: checksum (slower but thorough)<br />
# This should ideally report ‚Äúsending incremental file list‚Äù and nothing else.<br />
sudo rsync -naic /home/user/ /userdata/</p>
      </li>
    </ul>
  </li>
  <li>Investigate any significant reported differences before proceeding.</li>
</ul>

<p><strong>5. Rename the Original Home Directory (Safety Backup)</strong></p>

<ul>
  <li>
    <p>Rename the original directory. This acts as a temporary backup and frees up the /home/user path for the mount point.<br />
sudo mv /home/user /home/user.bak</p>
  </li>
  <li>
    <p><strong>Troubleshooting ‚ÄúDevice or resource busy‚Äù:</strong> If you get this error, ensure user is fully logged out. Use these commands to find processes still using the old directory:<br />
# Option 1: List open files in the directory<br />
sudo lsof /home/user.bak<br />
# Option 2: List processes using the filesystem/directory<br />
sudo fuser -vm /home/user.bak<br />
# Option 3: General process check for the user<br />
ps aux | grep user</p>

    <p>Identify and terminate any remaining processes belonging to user (e.g., sudo kill &lt;PID&gt;).</p>
  </li>
</ul>

<p><strong>6. Create the Empty Mount Point</strong></p>

<ul>
  <li>Recreate the original directory path. This empty directory will serve as the mount point.<br />
sudo mkdir /home/user</li>
</ul>

<p><strong>7. Set Ownership of the Empty Mount Point</strong></p>

<ul>
  <li><strong>Crucial:</strong> Ensure this <em>new, empty</em> /home/user directory has the correct ownership <em>before</em> mounting.<br />
sudo chown user:user /home/user</li>
</ul>

<p><strong>8. Test the Bind Mount Manually</strong></p>

<ul>
  <li>Perform the bind mount temporarily to check if it works.<br />
sudo mount --bind /userdata /home/user</li>
</ul>

<p><strong>9. Verify the Manual Mount</strong></p>

<ul>
  <li>
    <p>Check the contents of /home/user. It should now show the files from /userdata.<br />
ls -la /home/user</p>
  </li>
  <li>
    <p>Check the system‚Äôs mount list to confirm the bind mount is active.<br />
mount | grep /home/user</p>

    <p>You should see a line like /userdata on /home/user type none (rw,bind).</p>
  </li>
</ul>

<p><strong>10. Make the Bind Mount Persistent (Choose ONE method)</strong></p>

<ul>
  <li><strong>Method A: Using /etc/fstab (Traditional)</strong>
    <ul>
      <li>
        <p>Edit /etc/fstab with a text editor like nano:<br />
sudo nano /etc/fstab</p>
      </li>
      <li>
        <p>Add the following line at the end. Use tabs or spaces consistently.<br />
# Bind mount user home directory to userdata partition<br />
/userdata  /home/user  none  bind  0  0</p>
      </li>
      <li><strong>Warning:</strong> If /userdata is not available early during boot (e.g., requires drivers/services not yet started), this /etc/fstab entry might cause boot delays or failures. Systemd mount units (Method B) handle dependencies better. Adding the nofail option (bind,nofail) allows booting even if the mount fails, but /home/user might be empty, potentially preventing login or causing application issues. Use nofail with caution for home directories.</li>
      <li>Save and close the file (Ctrl+O, Enter, Ctrl+X in nano).</li>
      <li>
        <p><strong>Test fstab Entry:</strong><br />
sudo umount /home/user  # Unmount the temporary manual mount<br />
sudo mount -a           # Mount all entries in fstab<br />
mount | grep /home/user # Verify it mounted correctly via fstab</p>

        <p>If mount -a gives errors, double-check your /etc/fstab syntax.</p>
      </li>
    </ul>
  </li>
  <li><strong>Method B: Using Systemd Mount Unit (Modern, Recommended)</strong>
    <ul>
      <li>Systemd handles dependencies better, ensuring /userdata is likely ready before attempting the bind mount.</li>
      <li>
        <p>Create a systemd mount unit file. The filename should reflect the mount point path. Convert slashes (/) to dashes (-) and escape dashes properly. For /home/user, a good name is home-user.mount.<br />
sudo nano /etc/systemd/system/home-user.mount</p>
      </li>
      <li>
        <p>Paste the following content into the file, adjusting paths if needed:<br />
[Unit]<br />
Description=Bind mount /home/user to /userdata<br />
RequiresMountsFor=/userdata<br />
After=local-fs.target</p>

        <p>[Mount]<br />
What=/userdata<br />
Where=/home/user<br />
Type=none<br />
Options=bind</p>

        <p>[Install]<br />
WantedBy=local-fs.target</p>

        <ul>
          <li>RequiresMountsFor= helps ensure the source is ready.</li>
          <li>After= and WantedBy= integrate it into the boot process.</li>
        </ul>
      </li>
      <li>Save and close the file.</li>
      <li>
        <p><strong>Enable and Test the Systemd Unit:</strong><br />
sudo umount /home/user  # Unmount the temporary manual mount if still active<br />
# Enable the unit to start on boot and start it now<br />
sudo systemctl enable --now home-user.mount<br />
# Check the status<br />
systemctl status home-user.mount<br />
mount | grep /home/user # Verify it mounted correctly</p>

        <p>If there are errors, check the unit file syntax (systemctl status or journalctl -u home-user.mount might give clues).</p>
      </li>
    </ul>
  </li>
</ul>

<p><strong>11. Log In and Test Thoroughly</strong></p>

<ul>
  <li>Log out from the TTY (exit or logout).</li>
  <li>Switch back to the graphical login screen (e.g., Ctrl+Alt+F1 or Ctrl+Alt+F7).</li>
  <li>Log in as the user user.</li>
  <li>Test various applications (browser, file manager, terminal), check file access, create/delete test files, and ensure everything works as expected.</li>
  <li>Open a terminal within the user‚Äôs session and run df -h /home/user. The output should show the disk space statistics for the /userdata partition, confirming the redirection is working.</li>
  <li><strong>Reboot the system</strong> and log in again to ensure the persistent mount (fstab or systemd) works correctly after a full restart.</li>
</ul>

<p><strong>12. Clean Up (Optional - Use Caution!)</strong></p>

<ul>
  <li><strong>Only after extensive testing (including reboots)</strong> and confirming everything works perfectly, you can remove the backup directory.</li>
  <li><strong>üõë Double-check you are deleting the correct directory (.bak)! üõë</strong><br />
# Perform this from a TTY logged in as root or another admin user<br />
sudo rm -rf /home/user.bak</li>
</ul>

<p>You have now successfully redirected your /home/user directory to use the storage space on /userdata using a persistent bind mount.</p>]]></content><author><name></name></author><category term="aid&gt;linux" /></entry><entry><title type="html">Code Fixer</title><link href="https://ib.bsb.br/code-fixer/" rel="alternate" type="text/html" title="Code Fixer" /><published>2025-05-01T00:00:00+00:00</published><updated>2025-05-01T14:24:29+00:00</updated><id>https://ib.bsb.br/code-fixer</id><content type="html" xml:base="https://ib.bsb.br/code-fixer/"><![CDATA[<section class="code-block-container" role="group" aria-label=" Code Block" data-filename="_code_block.txt" data-code="&lt;prompt&gt;
  &lt;purpose&gt;
    You are a specialized code validator and fixer. Your task is to transform code with errors into fully functional, compliant scripts. Success means identifying and correcting 100% of syntax errors, indentation problems, and formatting issues without changing the intended functionality. You will output only the complete, corrected code with no explanatory text.
  &lt;/purpose&gt;
  
  &lt;persona&gt;
    You are a meticulous, efficient code expert who focuses exclusively on code correctness and proper formatting. You prioritize making the code work as intended while adhering to code best practices. You communicate through code only, not explanations.
  &lt;/persona&gt;
  
  &lt;context&gt;
      &lt;key_guidelines&gt;
        &lt;guideline&gt;verify indentation level&lt;/guideline&gt;
        &lt;guideline&gt;UTF-8 file encoding&lt;/guideline&gt;
      &lt;/key_guidelines&gt;
    &lt;error_categories&gt;
      &lt;category&gt;
        &lt;name&gt;Syntax errors&lt;/name&gt;
        &lt;examples&gt;
          &lt;example&gt;Missing colons after function/class declarations or control flow statements&lt;/example&gt;
          &lt;example&gt;Unclosed parentheses, brackets, quotes&lt;/example&gt;
          &lt;example&gt;Invalid assignment operators&lt;/example&gt;
          &lt;example&gt;Incorrect function calls&lt;/example&gt;
        &lt;/examples&gt;
      &lt;/category&gt;
      &lt;category&gt;
        &lt;name&gt;Indentation errors&lt;/name&gt;
        &lt;examples&gt;
          &lt;example&gt;Inconsistent indentation levels&lt;/example&gt;
          &lt;example&gt;Mixing tabs and spaces&lt;/example&gt;
          &lt;example&gt;Incorrect block indentation&lt;/example&gt;
        &lt;/examples&gt;
      &lt;/category&gt;
      &lt;category&gt;
        &lt;name&gt;Format errors&lt;/name&gt;
        &lt;examples&gt;
          &lt;example&gt;Improper spacing around operators&lt;/example&gt;
          &lt;example&gt;Incorrect line breaks&lt;/example&gt;
          &lt;example&gt;Non-compliant naming conventions&lt;/example&gt;
        &lt;/examples&gt;
      &lt;/category&gt;
      &lt;category&gt;
        &lt;name&gt;Reference errors&lt;/name&gt;
        &lt;examples&gt;
          &lt;example&gt;Undefined variables&lt;/example&gt;
          &lt;example&gt;Incorrect attribute references&lt;/example&gt;
          &lt;example&gt;Improper function calls&lt;/example&gt;
        &lt;/examples&gt;
      &lt;/category&gt;
    &lt;/error_categories&gt;
  &lt;/context&gt;
  
  &lt;constraints&gt;
    &lt;constraint&gt;Preserve the original code&#39;s intended functionality and logic.&lt;/constraint&gt;
    &lt;constraint&gt;Maintain all meaningful comments from the original code.&lt;/constraint&gt;
    &lt;constraint&gt;Do not add explanatory comments about fixes made.&lt;/constraint&gt;
    &lt;constraint&gt;Do not use placeholders in the output.&lt;/constraint&gt;
    &lt;constraint&gt;Do not include any text before or after the fixed code.&lt;/constraint&gt;
    &lt;constraint&gt;Do not explain your changes or reasoning; output only the corrected code.&lt;/constraint&gt;
    &lt;constraint&gt;When multiple valid fixes exist, choose the most codeic approach per PEP 8.&lt;/constraint&gt;
    &lt;constraint&gt;All syntax errors must be fixed, even if minimal.&lt;/constraint&gt;
  &lt;/constraints&gt;
  
  &lt;instructions&gt;
    &lt;instruction&gt;Think step-by-step about each part of the code script in [[code_script]].&lt;/instruction&gt;
    &lt;instruction&gt;First, scan the entire script to identify all error types present.&lt;/instruction&gt;
    &lt;instruction&gt;Fix syntax errors by adding missing colons, parentheses, quotes, and other required syntax elements.&lt;/instruction&gt;
    &lt;instruction&gt;Correct indentation by ensuring consistent use of indentation and proper nesting of code blocks.&lt;/instruction&gt;
    &lt;instruction&gt;Fix variable reference errors by ensuring all variables are properly defined and used.&lt;/instruction&gt;
    &lt;instruction&gt;Correct import statements by fixing their format and order.&lt;/instruction&gt;
    &lt;instruction&gt;Verify function calls to ensure they use parentheses correctly.&lt;/instruction&gt;
    &lt;instruction&gt;Check class definitions for proper syntax and indentation.&lt;/instruction&gt;
    &lt;instruction&gt;Ensure list, dictionary, and set literals are properly formatted.&lt;/instruction&gt;
    &lt;instruction&gt;Verify string formatting and concatenation operations.&lt;/instruction&gt;
    &lt;instruction&gt;After making all corrections, review the entire script once more to ensure no errors remain.&lt;/instruction&gt;
    &lt;instruction&gt;Return ONLY the complete, corrected code script.&lt;/instruction&gt;
    &lt;meta_instruction&gt;For each line of code, ask: &quot;Is this correct code syntax?&quot;&lt;/meta_instruction&gt;
    &lt;meta_instruction&gt;After each fix, mentally verify that the code&#39;s functionality remains unchanged.&lt;/meta_instruction&gt;
  &lt;/instructions&gt;
  
  &lt;input_data&gt;
    &lt;code_script&gt;
```
[[code_script]]
```
    &lt;/code_script&gt;
  &lt;/input_data&gt;
  
  &lt;output_format_specification&gt;
    &lt;format&gt;Complete, working code script with all errors fixed&lt;/format&gt;
    &lt;rules&gt;
      &lt;rule&gt;Output must start directly with the code (no introductory text)&lt;/rule&gt;
      &lt;rule&gt;Output must end with the code code (no concluding remarks)&lt;/rule&gt;
      &lt;rule&gt;Preserve original docstrings and comments&lt;/rule&gt;
      &lt;rule&gt;Use consistent quotation marks throughout&lt;/rule&gt;
    &lt;/rules&gt;
  &lt;/output_format_specification&gt;

  &lt;evaluation_criteria&gt;
    &lt;criterion&gt;All syntax errors are fixed (100% required)&lt;/criterion&gt;
    &lt;criterion&gt;All indentation errors are fixed (100% required)&lt;/criterion&gt;
    &lt;criterion&gt;Code functionality is preserved&lt;/criterion&gt;
    &lt;criterion&gt;Output contains only the corrected code&lt;/criterion&gt;
    &lt;criterion&gt;No explanation or commentary is included&lt;/criterion&gt;
  &lt;/evaluation_criteria&gt;
  
  &lt;testing_methodology&gt;
    &lt;test&gt;Run the corrected script to verify it executes without syntax errors&lt;/test&gt;
    &lt;test&gt;Compare input/output behavior of original intent with corrected script&lt;/test&gt;
    &lt;test&gt;Check edge cases (empty functions, complex nested structures)&lt;/test&gt;
  &lt;/testing_methodology&gt;
&lt;/prompt&gt;" data-download-link="" data-download-label="Download ">
  <code class="language-">&lt;prompt&gt;
  &lt;purpose&gt;
    You are a specialized code validator and fixer. Your task is to transform code with errors into fully functional, compliant scripts. Success means identifying and correcting 100% of syntax errors, indentation problems, and formatting issues without changing the intended functionality. You will output only the complete, corrected code with no explanatory text.
  &lt;/purpose&gt;
  
  &lt;persona&gt;
    You are a meticulous, efficient code expert who focuses exclusively on code correctness and proper formatting. You prioritize making the code work as intended while adhering to code best practices. You communicate through code only, not explanations.
  &lt;/persona&gt;
  
  &lt;context&gt;
      &lt;key_guidelines&gt;
        &lt;guideline&gt;verify indentation level&lt;/guideline&gt;
        &lt;guideline&gt;UTF-8 file encoding&lt;/guideline&gt;
      &lt;/key_guidelines&gt;
    &lt;error_categories&gt;
      &lt;category&gt;
        &lt;name&gt;Syntax errors&lt;/name&gt;
        &lt;examples&gt;
          &lt;example&gt;Missing colons after function/class declarations or control flow statements&lt;/example&gt;
          &lt;example&gt;Unclosed parentheses, brackets, quotes&lt;/example&gt;
          &lt;example&gt;Invalid assignment operators&lt;/example&gt;
          &lt;example&gt;Incorrect function calls&lt;/example&gt;
        &lt;/examples&gt;
      &lt;/category&gt;
      &lt;category&gt;
        &lt;name&gt;Indentation errors&lt;/name&gt;
        &lt;examples&gt;
          &lt;example&gt;Inconsistent indentation levels&lt;/example&gt;
          &lt;example&gt;Mixing tabs and spaces&lt;/example&gt;
          &lt;example&gt;Incorrect block indentation&lt;/example&gt;
        &lt;/examples&gt;
      &lt;/category&gt;
      &lt;category&gt;
        &lt;name&gt;Format errors&lt;/name&gt;
        &lt;examples&gt;
          &lt;example&gt;Improper spacing around operators&lt;/example&gt;
          &lt;example&gt;Incorrect line breaks&lt;/example&gt;
          &lt;example&gt;Non-compliant naming conventions&lt;/example&gt;
        &lt;/examples&gt;
      &lt;/category&gt;
      &lt;category&gt;
        &lt;name&gt;Reference errors&lt;/name&gt;
        &lt;examples&gt;
          &lt;example&gt;Undefined variables&lt;/example&gt;
          &lt;example&gt;Incorrect attribute references&lt;/example&gt;
          &lt;example&gt;Improper function calls&lt;/example&gt;
        &lt;/examples&gt;
      &lt;/category&gt;
    &lt;/error_categories&gt;
  &lt;/context&gt;
  
  &lt;constraints&gt;
    &lt;constraint&gt;Preserve the original code&#39;s intended functionality and logic.&lt;/constraint&gt;
    &lt;constraint&gt;Maintain all meaningful comments from the original code.&lt;/constraint&gt;
    &lt;constraint&gt;Do not add explanatory comments about fixes made.&lt;/constraint&gt;
    &lt;constraint&gt;Do not use placeholders in the output.&lt;/constraint&gt;
    &lt;constraint&gt;Do not include any text before or after the fixed code.&lt;/constraint&gt;
    &lt;constraint&gt;Do not explain your changes or reasoning; output only the corrected code.&lt;/constraint&gt;
    &lt;constraint&gt;When multiple valid fixes exist, choose the most codeic approach per PEP 8.&lt;/constraint&gt;
    &lt;constraint&gt;All syntax errors must be fixed, even if minimal.&lt;/constraint&gt;
  &lt;/constraints&gt;
  
  &lt;instructions&gt;
    &lt;instruction&gt;Think step-by-step about each part of the code script in [[code_script]].&lt;/instruction&gt;
    &lt;instruction&gt;First, scan the entire script to identify all error types present.&lt;/instruction&gt;
    &lt;instruction&gt;Fix syntax errors by adding missing colons, parentheses, quotes, and other required syntax elements.&lt;/instruction&gt;
    &lt;instruction&gt;Correct indentation by ensuring consistent use of indentation and proper nesting of code blocks.&lt;/instruction&gt;
    &lt;instruction&gt;Fix variable reference errors by ensuring all variables are properly defined and used.&lt;/instruction&gt;
    &lt;instruction&gt;Correct import statements by fixing their format and order.&lt;/instruction&gt;
    &lt;instruction&gt;Verify function calls to ensure they use parentheses correctly.&lt;/instruction&gt;
    &lt;instruction&gt;Check class definitions for proper syntax and indentation.&lt;/instruction&gt;
    &lt;instruction&gt;Ensure list, dictionary, and set literals are properly formatted.&lt;/instruction&gt;
    &lt;instruction&gt;Verify string formatting and concatenation operations.&lt;/instruction&gt;
    &lt;instruction&gt;After making all corrections, review the entire script once more to ensure no errors remain.&lt;/instruction&gt;
    &lt;instruction&gt;Return ONLY the complete, corrected code script.&lt;/instruction&gt;
    &lt;meta_instruction&gt;For each line of code, ask: &quot;Is this correct code syntax?&quot;&lt;/meta_instruction&gt;
    &lt;meta_instruction&gt;After each fix, mentally verify that the code&#39;s functionality remains unchanged.&lt;/meta_instruction&gt;
  &lt;/instructions&gt;
  
  &lt;input_data&gt;
    &lt;code_script&gt;
```
[[code_script]]
```
    &lt;/code_script&gt;
  &lt;/input_data&gt;
  
  &lt;output_format_specification&gt;
    &lt;format&gt;Complete, working code script with all errors fixed&lt;/format&gt;
    &lt;rules&gt;
      &lt;rule&gt;Output must start directly with the code (no introductory text)&lt;/rule&gt;
      &lt;rule&gt;Output must end with the code code (no concluding remarks)&lt;/rule&gt;
      &lt;rule&gt;Preserve original docstrings and comments&lt;/rule&gt;
      &lt;rule&gt;Use consistent quotation marks throughout&lt;/rule&gt;
    &lt;/rules&gt;
  &lt;/output_format_specification&gt;

  &lt;evaluation_criteria&gt;
    &lt;criterion&gt;All syntax errors are fixed (100% required)&lt;/criterion&gt;
    &lt;criterion&gt;All indentation errors are fixed (100% required)&lt;/criterion&gt;
    &lt;criterion&gt;Code functionality is preserved&lt;/criterion&gt;
    &lt;criterion&gt;Output contains only the corrected code&lt;/criterion&gt;
    &lt;criterion&gt;No explanation or commentary is included&lt;/criterion&gt;
  &lt;/evaluation_criteria&gt;
  
  &lt;testing_methodology&gt;
    &lt;test&gt;Run the corrected script to verify it executes without syntax errors&lt;/test&gt;
    &lt;test&gt;Compare input/output behavior of original intent with corrected script&lt;/test&gt;
    &lt;test&gt;Check edge cases (empty functions, complex nested structures)&lt;/test&gt;
  &lt;/testing_methodology&gt;
&lt;/prompt&gt;</code>
</section>]]></content><author><name></name></author><category term="AI&gt;prompt" /></entry><entry><title type="html">4-node NethServer 8 homelab</title><link href="https://ib.bsb.br/4-node-nethserver-8-homelab/" rel="alternate" type="text/html" title="4-node NethServer 8 homelab" /><published>2025-04-30T00:00:00+00:00</published><updated>2025-04-30T10:34:34+00:00</updated><id>https://ib.bsb.br/4-node-nethserver-8-homelab</id><content type="html" xml:base="https://ib.bsb.br/4-node-nethserver-8-homelab/"><![CDATA[<p>NethServer 8 (NS8) marks a significant evolution from its predecessors, embracing a modern <strong>Container Orchestrator</strong> architecture. Instead of a monolithic system, NS8 focuses on managing containerized Apps, offering flexibility but requiring a different deployment mindset compared to NethServer 7 (NS7).</p>

<p>This guide provides a practical example of deploying a multi-node NS8 environment based on community discussions and official documentation (particularly the NS7 vs NS8 comparison [1], which users should note was marked ‚ÄúWork In Progress‚Äù and details may evolve). It outlines a 4-node setup designed to separate core services for clarity and potential scalability, using only features and concepts described in the source material.</p>

<p><strong>Key Architectural Concepts &amp; Assumptions (Based on Provided Sources):</strong></p>

<ul>
  <li><strong>NS8 Architecture:</strong> NethServer 8 operates primarily as a <strong>Container Orchestrator</strong>. Most core services and third-party applications run as containerized <strong>Apps</strong>. NS8‚Äôs main role is managing the lifecycle and configuration of these Apps [1].</li>
  <li><strong>NethSecurity Role:</strong> Advanced gateway and firewall features (like complex rules, Quality of Service (QoS), network zones, integrated VPN servers with account provider integration, Multi-WAN) are <em>not</em> part of NS8‚Äôs core. These functions are handled by the separate <strong>NethSecurity</strong> project (<a href="https://nethsecurity.org/">https://nethsecurity.org/</a>) [1]. This guide assumes NethSecurity is <strong>not</strong> deployed unless explicitly mentioned.</li>
  <li><strong>Operating System:</strong> This guide assumes <strong>Rocky Linux 9</strong> (or a similar RHEL 9 derivative or Debian 12) as the base OS for all nodes.</li>
  <li><strong>Network:</strong> We assume a simple, flat network topology (e.g., <code class="language-plaintext highlighter-rouge">192.168.1.0/24</code>).</li>
</ul>

<hr />

<h2 id="node-1-reverse-proxy--host-firewall">Node 1: Reverse Proxy &amp; Host Firewall</h2>

<ul>
  <li><strong>IP Example:</strong> <code class="language-plaintext highlighter-rouge">192.168.1.10</code></li>
  <li><strong>Goal:</strong> Act as the entry point for web traffic using the built-in Traefik reverse proxy, manage basic host-level firewall rules, and potentially host a simple VPN solution.</li>
</ul>

<ol>
  <li><strong>Install Base OS:</strong> Start with a minimal installation of Rocky Linux 9.</li>
  <li><strong>Set Static IP:</strong> Configure a static IP address using <code class="language-plaintext highlighter-rouge">nmtui</code> or <code class="language-plaintext highlighter-rouge">nmcli</code>.
    <ul>
      <li>Example: IP <code class="language-plaintext highlighter-rouge">192.168.1.10/24</code>, Gateway <code class="language-plaintext highlighter-rouge">192.168.1.1</code>, DNS <code class="language-plaintext highlighter-rouge">192.168.1.11</code> (pointing to Node 2 once it‚Äôs up) [2].</li>
    </ul>
  </li>
  <li><strong>Install NS8 Core:</strong> Download and run the official installation script. <strong>Always obtain the current script URL from the official NS8 documentation [3]</strong>. The command format is generally:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Example format - get current URL from docs!</span>
curl &lt;official-install-script-url&gt; | <span class="nb">sudo </span>bash
</code></pre></div>    </div>
  </li>
  <li><strong>Initial Cluster Creation:</strong> Access the web UI at <code class="language-plaintext highlighter-rouge">https://192.168.1.10/cluster-admin/</code>. Follow the prompts to <strong>create the initial cluster</strong>. Set the cluster FQDN (e.g., <code class="language-plaintext highlighter-rouge">cluster.lab.local</code>), confirm the network CIDR, and set the administrator password [3]. This node becomes the first member of the cluster.</li>
  <li><strong>Configure Host Firewall (Basic):</strong> NS8 uses a <strong>‚ÄúMinimal: Firewalld‚Äù</strong> approach for host protection [1]. Open necessary ports using <code class="language-plaintext highlighter-rouge">firewall-cmd</code> or the Cockpit interface (usually accessible via <code class="language-plaintext highlighter-rouge">https://&lt;IP&gt;:9090</code>). For web traffic proxied through this node:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>firewall-cmd <span class="nt">--add-service</span><span class="o">=</span>http <span class="nt">--permanent</span>
<span class="nb">sudo </span>firewall-cmd <span class="nt">--add-service</span><span class="o">=</span>https <span class="nt">--permanent</span>
<span class="nb">sudo </span>firewall-cmd <span class="nt">--reload</span>
</code></pre></div>    </div>
    <p><em>Note:</em> Remember, complex firewalling requires <strong>NethSecurity</strong> [1].</p>
  </li>
  <li><strong>Configure Reverse Proxy (Traefik):</strong> NS8 utilizes Traefik, configured primarily via <strong>‚ÄúHTTP Routes‚Äù</strong> defined within the NS8 UI, typically under App settings or a dedicated Proxy section [1, 4]. Routes are automatically managed for most installed NS8 Apps.
<em>Note:</em> Proxying external services (e.g., custom containers, services on other machines) typically requires manual Traefik configuration files (e.g., <code class="language-plaintext highlighter-rouge">.yaml</code> or <code class="language-plaintext highlighter-rouge">.toml</code> placed in a designated directory), bypassing the standard NS8 UI management [1]. This is considered an advanced topic.</li>
  <li><strong>Configure VPN (Limited Options):</strong> NS8 Core does not include integrated VPN servers like OpenVPN or WireGuard out-of-the-box. Manual OS-level VPN setups are generally unsupported via the UI [1]. Based on the NS7/NS8 comparison [1], options include:
    <ul>
      <li><strong><code class="language-plaintext highlighter-rouge">wg-easy</code> App:</strong> Install this third-party WireGuard App from the Software Center. <em>Limitation:</em> It lacks integration with NS8 Account Providers (users must be managed separately within the app).</li>
      <li><strong>NethSecurity:</strong> Deploying NethSecurity provides robust <strong>OpenVPN Roadwarrior</strong> capabilities fully integrated with account providers.</li>
      <li><strong>(Manual Container):</strong> Advanced users could deploy and manage their own VPN solution in a container, but this falls outside standard NS8 App management.</li>
    </ul>
  </li>
</ol>

<p>‚Äî</p>

<h2 id="node-2-active-directory-dns--dhcp">Node 2: Active Directory, DNS &amp; DHCP</h2>

<ul>
  <li><strong>IP Example:</strong> <code class="language-plaintext highlighter-rouge">192.168.1.11</code></li>
  <li><strong>Goal:</strong> Provide Active Directory (AD) authentication services, internal DNS resolution, and optionally DHCP services using NS8 Apps.</li>
</ul>

<ol>
  <li><strong>Install Base OS &amp; Set Static IP:</strong> Follow the same steps as Node 1 (Steps 1 &amp; 2). Set a static IP (e.g., <code class="language-plaintext highlighter-rouge">192.168.1.11/24</code>). Initially, point its DNS to your router (e.g., <code class="language-plaintext highlighter-rouge">192.168.1.1</code>) or an external resolver.</li>
  <li><strong>Install NS8 Core:</strong> Follow the same step as Node 1 (Step 3) to install the core components.</li>
  <li><strong>Join Existing Cluster:</strong> Access this node‚Äôs web UI at <code class="language-plaintext highlighter-rouge">https://192.168.1.11/</code>. Instead of creating a new cluster, choose the option to <strong>join an existing cluster</strong>. You will likely need to provide the address of an existing cluster member (e.g., Node 1‚Äôs IP or FQDN) and the cluster administrator credentials set during Node 1‚Äôs setup [3].</li>
  <li><strong>Install Account Provider (Active Directory):</strong> From the NS8 Software Center, install the <strong>‚ÄùSamba Active Directory‚Äù</strong> App. During setup, configure your AD domain name (e.g., <code class="language-plaintext highlighter-rouge">ad.lab.local</code>) and administrator password [5].
    <ul>
      <li><em>Important Limitations [1]:</em>
        <ul>
          <li>AD Replication: Joining multiple instances of this App for replication <strong>does not automatically synchronize SysVol or Group Policies (GPOs)</strong> between them. This is a significant limitation compared to traditional AD replication and impacts high availability strategies for GPOs and logon scripts. Manual procedures might be required for full redundancy.</li>
          <li>Local OpenLDAP Alternative: If you choose the local OpenLDAP provider instead of AD, be aware it‚Äôs typically <strong>not accessible to services outside the NS8 cluster</strong> [1].</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>Configure DNS:</strong> DNS resolution for your internal network can be provided by:
    <ul>
      <li>The <strong>‚ÄùAD Account Provider‚Äù App</strong> itself (integrates AD zones automatically).</li>
      <li>A separate <strong>‚ÄùDNSMasq‚Äù App</strong> [1].
Configure clients and other NS8 nodes to use this node‚Äôs IP (<code class="language-plaintext highlighter-rouge">192.168.1.11</code>) for DNS. (Alternatively, NethSecurity also offers DNS services [1]).</li>
    </ul>
  </li>
  <li><strong>Configure DHCP:</strong> If needed, install the <strong>‚ÄùDNSMasq‚Äù App</strong> [1] to provide DHCP services. Configure the DHCP scope, lease times, default gateway (e.g., <code class="language-plaintext highlighter-rouge">192.168.1.1</code>), and DNS server (this node‚Äôs IP, <code class="language-plaintext highlighter-rouge">192.168.1.11</code>) within the App‚Äôs UI. Remember to disable any other DHCP server (like on your router) on the network segment. (Alternatively, NethSecurity also offers DHCP services [1]). Consult the specific App‚Äôs documentation for detailed configuration steps.</li>
</ol>

<p>‚Äî</p>

<h2 id="node-3-file-sharing--collaboration">Node 3: File Sharing &amp; Collaboration</h2>

<ul>
  <li><strong>IP Example:</strong> <code class="language-plaintext highlighter-rouge">192.168.1.12</code></li>
  <li><strong>Goal:</strong> Host Nextcloud for collaboration and standard SMB/CIFS file shares, integrating with the AD on Node 2.</li>
</ul>

<ol>
  <li><strong>Install Base OS &amp; Set Static IP:</strong> Follow Steps 1 &amp; 2 from Node 1. Set a static IP (e.g., <code class="language-plaintext highlighter-rouge">192.168.1.12/24</code>). Configure its DNS to point to Node 2 (<code class="language-plaintext highlighter-rouge">192.168.1.11</code>).</li>
  <li><strong>Install NS8 Core:</strong> Follow Step 3 from Node 1.</li>
  <li><strong>Join Existing Cluster:</strong> Follow Step 3 from Node 2 to join this node to the cluster.</li>
  <li><strong>Install Nextcloud App:</strong> Install the official <strong>‚ÄùNextcloud‚Äù</strong> App from the Software Center. During configuration, connect it to the external Active Directory account provider running on Node 2 [6]. In the App‚Äôs Proxy settings [4, 6], define the FQDN for accessing Nextcloud (e.g., <code class="language-plaintext highlighter-rouge">cloud.lab.local</code>). Ensure a DNS A record exists (on Node 2) pointing <code class="language-plaintext highlighter-rouge">cloud.lab.local</code> to the IP of the Reverse Proxy (Node 1: <code class="language-plaintext highlighter-rouge">192.168.1.10</code>).
<em>Note:</em> Automatic configuration/discovery for CalDAV and CardDAV clients <strong>is unconfirmed</strong> in the NS8 context according to the comparison document [1]; manual client configuration might be necessary. Consult the Nextcloud App‚Äôs documentation for specifics.</li>
  <li><strong>Install File Server App (SMB):</strong> Install the <strong>‚ÄùFile Server‚Äù</strong> App to provide SMBv2/v3 shares integrated with the AD account provider [1]. Configure shared folders and permissions through the App‚Äôs UI. Consult the specific App‚Äôs documentation for detailed configuration steps.
    <ul>
      <li><em>Limitations [1]:</em>
        <ul>
          <li><strong>Recycle Bin:</strong> Enabling the recycle bin feature for shares requires <strong>Command Line Interface (CLI)</strong> configuration. Refer to community guides linked in the source comparison [1].</li>
          <li><strong>Access Control Lists (ACLs):</strong> UI-based permission management is primarily <strong>‚Äùlimited to a group‚Äù</strong>. Applying fine-grained ACLs typically requires using <strong>‚Äù3rd-party tools‚Äù</strong> on the command line (e.g., <code class="language-plaintext highlighter-rouge">setfacl</code>) [1].</li>
        </ul>
      </li>
    </ul>
  </li>
</ol>

<p>‚Äî</p>

<h2 id="node-4-business-applications-platform">Node 4: Business Applications Platform</h2>

<ul>
  <li><strong>IP Example:</strong> <code class="language-plaintext highlighter-rouge">192.168.1.13</code></li>
  <li><strong>Goal:</strong> Host various web-based business applications (e.g., Typo3 CMS, Redmine project management) leveraging NS8‚Äôs container orchestration capabilities.</li>
</ul>

<ol>
  <li><strong>Install Base OS &amp; Set Static IP:</strong> Follow Steps 1 &amp; 2 from Node 1. Set a static IP (e.g., <code class="language-plaintext highlighter-rouge">192.168.1.13/24</code>). Configure its DNS to point to Node 2 (<code class="language-plaintext highlighter-rouge">192.168.1.11</code>).</li>
  <li><strong>Install NS8 Core:</strong> Follow Step 3 from Node 1.</li>
  <li><strong>Join Existing Cluster:</strong> Follow Step 3 from Node 2 to join this node to the cluster.</li>
  <li><strong>Install Web Server (LEMP App):</strong> Since NS8 is a <strong>‚ÄùContainer Orchestrator‚Äù</strong> [1], you install a containerized web stack as an App. Look for a suitable <strong>‚ÄùLEMP‚Äù App</strong> (Linux, Nginx, MariaDB/MySQL, PHP) or similar stack in the Software Center (this might be from NethForge or other third-party repositories) [1]. <strong>Verify availability and specific features in the Software Center</strong>. Install the chosen App and configure PHP versions, Nginx virtual hosts, database settings, etc., <em>within</em> this App according to its specific documentation [1].</li>
  <li><strong>Deploy Applications:</strong>
    <ul>
      <li>Place your application code (Typo3, Redmine) into the appropriate web root directory exposed as a volume by the LEMP App.</li>
      <li>Configure databases for your applications within the MariaDB/MySQL instance running inside the LEMP App container.</li>
      <li>Follow the specific documentation for the chosen LEMP App and your applications [1].</li>
      <li><em>Container Focus [1]:</em> For complex applications, deploying them using their official Docker images might be preferable. However, integrating and managing custom containers seamlessly within the NS8 UI/API framework isn‚Äôt explicitly detailed in the source material [1] and may require manual Docker/Podman commands or custom orchestration configurations.</li>
    </ul>
  </li>
  <li><strong>Configure SFTP Access (SFTPGo App):</strong> For secure file transfers, install the <strong><code class="language-plaintext highlighter-rouge">SFTPGo</code> App</strong> [1]. Configure users, permissions, storage backends, and restrictions within the SFTPGo App‚Äôs interface for granular control [1]. Consult the specific App‚Äôs documentation for detailed configuration steps.</li>
  <li><strong>Configure Firewall (Host):</strong> Only open ports directly on Node 4‚Äôs host firewall (<code class="language-plaintext highlighter-rouge">firewall-cmd</code> or Cockpit) if services need direct external access <em>not</em> going through the Node 1 reverse proxy. Most web traffic should be directed to Node 1.</li>
  <li><strong>Integrate with AD (Manual/App-Specific):</strong> Configure individual applications (e.g., within Typo3‚Äôs backend or Redmine‚Äôs administration settings) to use LDAP authentication against the Active Directory server on Node 2, if the application supports it. This typically requires providing the LDAP server address (<code class="language-plaintext highlighter-rouge">192.168.1.11</code>), base DN, and potentially installing LDAP client tools within the application‚Äôs container environment.</li>
  <li><strong>Reverse Proxy Access (Configure on Node 1):</strong> On Node 1 (the Reverse Proxy), configure <strong>‚ÄùHTTP Routes‚Äù</strong> [4] via the NS8 UI. Point specific FQDNs (e.g., <code class="language-plaintext highlighter-rouge">typo3.lab.local</code>, <code class="language-plaintext highlighter-rouge">redmine.lab.local</code>) to the internal services running on Node 4 (e.g., <code class="language-plaintext highlighter-rouge">http://192.168.1.13:&lt;LEMP_App_Port&gt;</code>). As noted earlier, managing routes for non-NS8 managed containers/services might require manual Traefik configuration [1]. Ensure DNS A records exist (on Node 2) pointing these FQDNs to the IP of Node 1 (<code class="language-plaintext highlighter-rouge">192.168.1.10</code>).</li>
</ol>

<p>‚Äî</p>

<h2 id="summary">Summary</h2>

<p>This multi-node setup illustrates how NethServer 8‚Äôs container-based, App-centric architecture can be used to build a modular server environment based on the provided scenario. It leverages specific Apps for core functionalities, relies on Traefik (via HTTP Routes) for proxied access, utilizes minimal host firewalls, and clearly distinguishes its role from the more comprehensive network security features offered by the NethSecurity project. Understanding these architectural differences [1] and the specific limitations noted is key to successfully deploying and managing NS8.</p>

<p>Always refer to the official NethServer 8 documentation and community resources for the latest information, detailed App configurations, and potential updates to features and limitations, especially considering that some source information [1] was marked as work-in-progress.</p>

<p><strong>References:</strong></p>

<p>[1] NS7 vs NS8 Feature Comparison (Work In Progress): <a href="https://community.nethserver.org/t/wip-ns7-vs-ns8-feature-comparison/23258">https://community.nethserver.org/t/wip-ns7-vs-ns8-feature-comparison/23258</a> <br />
[2] OS Network Setup Documentation: <a href="https://docs.nethserver.org/projects/ns8/en/latest/os_network.html">https://docs.nethserver.org/projects/ns8/en/latest/os_network.html</a> <br />
[3] NS8 Installation Guide: <a href="https://docs.nethserver.org/projects/ns8/en/latest/install.html">https://docs.nethserver.org/projects/ns8/en/latest/install.html</a> <br />
[4] NS8 Proxy App Documentation: <a href="https://docs.nethserver.org/projects/ns8/en/latest/proxy.html">https://docs.nethserver.org/projects/ns8/en/latest/proxy.html</a> <br />
[5] NS8 User Domains Documentation: <a href="https://docs.nethserver.org/projects/ns8/en/latest/user_domains.html">https://docs.nethserver.org/projects/ns8/en/latest/user_domains.html</a> <br />
[6] NS8 Nextcloud App Documentation: <a href="https://docs.nethserver.org/projects/ns8/en/latest/nextcloud.html">https://docs.nethserver.org/projects/ns8/en/latest/nextcloud.html</a></p>]]></content><author><name></name></author><category term="scratchpad" /></entry><entry><title type="html">sbnb/scripts/install-linux.sh</title><link href="https://ib.bsb.br/sbnbscriptsinstall-linuxsh/" rel="alternate" type="text/html" title="sbnb/scripts/install-linux.sh" /><published>2025-04-30T00:00:00+00:00</published><updated>2025-04-30T08:32:47+00:00</updated><id>https://ib.bsb.br/sbnbscriptsinstall-linuxsh</id><content type="html" xml:base="https://ib.bsb.br/sbnbscriptsinstall-linuxsh/"><![CDATA[<section class="code-block-container" role="group" aria-label="Bash Code Block" data-filename="bash_code_block.sh" data-code="#!/bin/bash

# ==============================================================================
# Sbnb Linux Bootable USB/Disk Creation Script (Local Mode)
# ==============================================================================
#
# Description:
#   This script automates the creation of a bootable Sbnb Linux drive on Linux.
#   It uses an existing &#39;sbnb.raw&#39; disk image file located in the same
#   directory as this script.
#
# Features:
#   - Uses local &#39;sbnb.raw&#39; file (required).
#   - Uses local &#39;sbnb-tskey.txt&#39; file if present (optional Tailscale key).
#   - Prompts for a custom script (&#39;sbnb-cmds.sh&#39;) to run at boot (optional).
#   - Lists all detected disk-like devices for selection.
#   - Performs necessary unmounting before writing.
#   - Writes the image using &#39;dd&#39; with progress display.
#   - Mounts the ESP partition to copy optional files.
#   - Includes robust cleanup via &#39;trap&#39;.
#
# Requirements:
#   - Bash shell
#   - Core utilities: lsblk, grep, sed, awk, mktemp, mount, umount, cp, tee, sync
#   - &#39;sudo&#39; privileges for disk operations (dd, mount, umount, partprobe).
#   - GNU &#39;dd&#39; (for status=progress).
#   - &#39;partprobe&#39; utility (recommended, for partition table re-scan).
#   - &#39;sbnb.raw&#39; file in the same directory as the script.
#
# More info: https://github.com/sbnb-io/sbnb
#
# WARNING: THIS SCRIPT WILL COMPLETELY OVERWRITE THE SELECTED DISK.
#          ALL DATA ON THE SELECTED DISK WILL BE PERMANENTLY LOST.
#          DOUBLE-CHECK YOUR SELECTION BEFORE CONFIRMING.
#
# ==============================================================================

# Exit immediately if a command exits with a non-zero status
set -e

# --- Configuration ---
SBNB_RAW_FILE=&quot;sbnb.raw&quot;
SBNB_TSKEY_FILE=&quot;sbnb-tskey.txt&quot;
SBNB_CMDS_FILE=&quot;sbnb-cmds.sh&quot; # Target name on ESP for custom script

# --- Color Codes ---
RED=&#39;\033[0;31m&#39;
GREEN=&#39;\033[0;32m&#39;
YELLOW=&#39;\033[1;33m&#39;
BLUE=&#39;\033[0;34m&#39;
NC=&#39;\033[0m&#39; # No Color

# --- Helper Functions ---
info() { echo -e &quot;${GREEN}[INFO]${NC} $1&quot;; }
warn() { echo -e &quot;${YELLOW}[WARN]${NC} $1&quot;; }
error() { echo -e &quot;${RED}[ERROR]${NC} $1&quot;; }
prompt() { read -p &quot;$(echo -e &quot;${BLUE}[PROMPT]${NC} $1&quot;)&quot; &quot;$2&quot;; }

# --- Initial Checks ---
info &quot;Starting Sbnb Linux Bootable Drive Creation Script.&quot;

# Check for root privileges (needed for sudo operations)
if [[ $EUID -eq 0 ]]; then
   error &quot;This script should not be run as root. It uses &#39;sudo&#39; where needed.&quot;
   exit 1
fi
if ! command -v sudo &amp;&gt; /dev/null; then
    error &quot;&#39;sudo&#39; command not found. Please install it.&quot;
    exit 1
fi
# Test sudo privileges early
if ! sudo -v; then
    error &quot;Failed to obtain sudo privileges. Please check your sudo configuration.&quot;
    exit 1
fi

# Check for required local sbnb.raw file
SbnbRawPath=&quot;./${SBNB_RAW_FILE}&quot;
if [ ! -r &quot;$SbnbRawPath&quot; ]; then
  error &quot;&#39;$SBNB_RAW_FILE&#39; not found or not readable in the current directory (${PWD}).&quot;
  exit 1
fi
info &quot;Found required file: $SbnbRawPath&quot;

# Check for optional local sbnb-tskey.txt file
localTsKeyPath=&quot;./${SBNB_TSKEY_FILE}&quot;
if [ -r &quot;$localTsKeyPath&quot; ]; then
  info &quot;Found optional Tailscale key file: $localTsKeyPath&quot;
  useLocalTsKey=true
else
  warn &quot;Optional Tailscale key file (&#39;$SBNB_TSKEY_FILE&#39;) not found or not readable. Skipping.&quot;
  useLocalTsKey=false
fi

# --- Disk Selection ---
info &quot;Enumerating available block devices (disks, USB drives, etc.)...&quot;
# Use lsblk: -d (devices only), -p (full paths), -o (columns), -n (no header)
# Filter for type &#39;disk&#39; or &#39;rom&#39;. Exclude loop devices explicitly.
mapfile -t devices &lt; &lt;(lsblk -dpno NAME,SIZE,MODEL,TYPE | grep -E &#39;disk|rom&#39; | grep -v &#39;loop&#39;)

if [ ${#devices[@]} -eq 0 ]; then
    error &quot;No suitable disk devices found.&quot;
    exit 1
fi

echo -e &quot;${YELLOW}Available Devices:${NC}&quot;
echo &quot;--------------------------------------------------&quot;
for i in &quot;${!devices[@]}&quot;; do
  printf &quot;%3d) %s\n&quot; $((i+1)) &quot;${devices[$i]}&quot;
done
echo &quot;--------------------------------------------------&quot;

selectedDiskIndex=&quot;&quot;
while true; do
    prompt &quot;Enter the index number of the target device: &quot; selectedDiskIndex
    if [[ &quot;$selectedDiskIndex&quot; =~ ^[0-9]+$ ]] &amp;&amp; [ &quot;$selectedDiskIndex&quot; -ge 1 ] &amp;&amp; [ &quot;$selectedDiskIndex&quot; -le ${#devices[@]} ]; then
        selectedDrive=$(echo &quot;${devices[$((selectedDiskIndex-1))]}&quot; | awk &#39;{print $1}&#39;)
        info &quot;You selected index $selectedDiskIndex: $selectedDrive&quot;
        break
    else
        warn &quot;Invalid input. Please enter a number between 1 and ${#devices[@]}.&quot;
    fi
done

# --- Confirmation ---
echo -e &quot;${RED}====================== WARNING ======================${NC}&quot;
echo -e &quot;${RED}You have selected device: $selectedDrive${NC}&quot;
echo -e &quot;${RED}ALL DATA ON THIS DEVICE WILL BE PERMANENTLY DESTROYED!${NC}&quot;
echo -e &quot;${RED}=====================================================${NC}&quot;
prompt &quot;Are you absolutely sure you want to proceed? (yes/no): &quot; confirmation
if [[ &quot;$confirmation&quot; != &quot;yes&quot; ]]; then
  error &quot;Operation cancelled by user.&quot;
  exit 1
fi

# --- Unmount Partitions ---
info &quot;Checking for and unmounting partitions on $selectedDrive...&quot;
# Use lsblk -lnpo NAME to get full paths of partitions, suppress errors if none exist
mounted_count=0
for partition_path in $(lsblk -lnpo NAME &quot;$selectedDrive&quot; 2&gt;/dev/null || true); do
    # Check if the partition is currently mounted
    if mount | grep -q &quot;^$partition_path &quot;; then # Check for exact match followed by space
        info &quot;Unmounting partition $partition_path...&quot;
        sudo umount &quot;$partition_path&quot;
        mounted_count=$((mounted_count + 1))
    fi
done
if [ $mounted_count -gt 0 ]; then
    info &quot;Finished unmounting partitions.&quot;
else
    info &quot;No mounted partitions found on $selectedDrive.&quot;
fi

# --- Write Image ---
info &quot;Writing &#39;$SBNB_RAW_FILE&#39; to $selectedDrive...&quot;
warn &quot;This may take a while. Please wait...&quot;
# Use bs=4M (often faster), status=progress (GNU dd), conv=fsync (sync data+metadata at end)
if ! sudo dd if=&quot;$SbnbRawPath&quot; of=&quot;$selectedDrive&quot; bs=4M status=progress conv=fsync; then
    error &quot;Failed to write image to $selectedDrive using dd.&quot;
    exit 1
fi
info &quot;Image write completed successfully.&quot;

# --- Partition Recognition ---
info &quot;Ensuring partition table is recognized...&quot;
sync # Ensure all buffers are flushed
# Attempt to re-read partition table. partprobe is common.
if command -v partprobe &amp;&gt; /dev/null; then
    info &quot;Running &#39;partprobe&#39; to update partition table...&quot;
    sudo partprobe &quot;$selectedDrive&quot; || warn &quot;&#39;partprobe&#39; failed, but continuing...&quot;
else
    warn &quot;&#39;partprobe&#39; command not found. The system might take longer to recognize partitions.&quot;
fi
sleep 3 # Give the system a moment

# --- Mount ESP Partition ---
info &quot;Attempting to identify and mount the first partition (ESP)...&quot;
# Determine expected partition name (handles common schemes like sda1, nvme0n1p1, mmcblk0p1)
firstPartition=&quot;&quot;
# Check for pattern like /dev/sda1, /dev/hda1
if [ -b &quot;${selectedDrive}1&quot; ]; then
    firstPartition=&quot;${selectedDrive}1&quot;
# Check for pattern like /dev/nvme0n1p1, /dev/mmcblk0p1
elif [ -b &quot;${selectedDrive}p1&quot; ]; then
    firstPartition=&quot;${selectedDrive}p1&quot;
else
    # Poll briefly in case detection was slow
    warn &quot;First partition not immediately found, polling for 5 seconds...&quot;
    found=false
    for _ in {1..5}; do
        sleep 1
        if [ -b &quot;${selectedDrive}1&quot; ]; then firstPartition=&quot;${selectedDrive}1&quot;; found=true; break; fi
        if [ -b &quot;${selectedDrive}p1&quot; ]; then firstPartition=&quot;${selectedDrive}p1&quot;; found=true; break; fi
    done
    if ! $found; then
        error &quot;Could not find the first partition device node (${selectedDrive}1 or ${selectedDrive}p1).&quot;
        error &quot;Cannot proceed with copying files to ESP.&quot;
        exit 1
    fi
fi
info &quot;Identified first partition as: $firstPartition&quot;

# Create temporary mount point
tempMountDir=$(mktemp -d -t sbnb-esp-XXXXXX)

# Setup trap for cleanup BEFORE attempting mount
trap &#39;cleanup&#39; EXIT HUP INT TERM
cleanup() {
    info &quot;Cleaning up...&quot;
    # Check if mount point exists and is mounted before trying to unmount
    if [ -d &quot;$tempMountDir&quot; ] &amp;&amp; mountpoint -q &quot;$tempMountDir&quot;; then
        sudo umount &quot;$tempMountDir&quot; 2&gt;/dev/null || warn &quot;Failed to unmount $tempMountDir during cleanup.&quot;
    fi
    if [ -d &quot;$tempMountDir&quot; ]; then
        rmdir &quot;$tempMountDir&quot; 2&gt;/dev/null || warn &quot;Failed to remove temporary directory $tempMountDir during cleanup.&quot;
    fi
}

# Mount the partition
info &quot;Mounting $firstPartition to $tempMountDir...&quot;
if ! sudo mount &quot;$firstPartition&quot; &quot;$tempMountDir&quot;; then
    error &quot;Failed to mount ESP partition $firstPartition at $tempMountDir.&quot;
    # Trap will handle cleanup
    exit 1
fi
info &quot;ESP partition successfully mounted at $tempMountDir&quot;
espPath=&quot;$tempMountDir&quot;

# --- Copy Files to ESP ---

# Copy Tailscale key if local file exists
if [ &quot;$useLocalTsKey&quot; = true ]; then
  targetTsKeyPath=&quot;$espPath/$SBNB_TSKEY_FILE&quot;
  info &quot;Copying local &#39;$SBNB_TSKEY_FILE&#39; to $targetTsKeyPath...&quot;
  if ! sudo cp &quot;$localTsKeyPath&quot; &quot;$targetTsKeyPath&quot;; then
      error &quot;Failed to copy Tailscale key to ESP.&quot;
      # Trap will handle cleanup
      exit 1
  fi
  # Note: FAT32 doesn&#39;t store standard Linux permissions well. Ownership/perms might not be critical here.
  info &quot;Tailscale key copied successfully.&quot;
fi

# Ask for and copy custom script if provided
customScriptPath=&quot;&quot;
prompt &quot;Enter path to custom script file (optional, saved as &#39;$SBNB_CMDS_FILE&#39; on drive, runs at boot) [Press Enter to skip]: &quot; customScriptPath

if [ -n &quot;$customScriptPath&quot; ]; then
  if [ -f &quot;$customScriptPath&quot; ] &amp;&amp; [ -r &quot;$customScriptPath&quot; ]; then
    targetScriptPath=&quot;$espPath/$SBNB_CMDS_FILE&quot;
    info &quot;Copying custom script &#39;$customScriptPath&#39; to $targetScriptPath...&quot;
    if ! sudo cp &quot;$customScriptPath&quot; &quot;$targetScriptPath&quot;; then
        error &quot;Failed to copy custom script to ESP.&quot;
        # Trap will handle cleanup
        exit 1
    fi
    # Optional: Make executable if needed, though FAT32 might ignore it. Boot process might source it instead.
    # sudo chmod +x &quot;$targetScriptPath&quot;
    info &quot;Custom script copied successfully.&quot;
  else
    warn &quot;Custom script file &#39;$customScriptPath&#39; not found or not readable. Skipping.&quot;
  fi
else
  info &quot;No custom script path provided. Skipping.&quot;
fi

# --- Final Steps ---
info &quot;File copying complete.&quot;
# Unmounting and cleanup is handled by the trap on exit

echo -e &quot;${BLUE}=========================================${NC}&quot;
echo -e &quot;${GREEN} Operation completed successfully! ${NC}&quot;
echo -e &quot;${GREEN} You can now safely remove the device: $selectedDrive ${NC}&quot;
echo -e &quot;${GREEN} Remember to adjust BIOS/UEFI settings to boot from it. ${NC}&quot;
echo -e &quot;${BLUE}=========================================${NC}&quot;

# Explicitly disable trap before normal exit to avoid double cleanup message
trap - EXIT HUP INT TERM
cleanup # Perform cleanup explicitly on successful exit

exit 0" data-download-link="" data-download-label="Download Bash">
  <code class="language-bash">#!/bin/bash

# ==============================================================================
# Sbnb Linux Bootable USB/Disk Creation Script (Local Mode)
# ==============================================================================
#
# Description:
#   This script automates the creation of a bootable Sbnb Linux drive on Linux.
#   It uses an existing &#39;sbnb.raw&#39; disk image file located in the same
#   directory as this script.
#
# Features:
#   - Uses local &#39;sbnb.raw&#39; file (required).
#   - Uses local &#39;sbnb-tskey.txt&#39; file if present (optional Tailscale key).
#   - Prompts for a custom script (&#39;sbnb-cmds.sh&#39;) to run at boot (optional).
#   - Lists all detected disk-like devices for selection.
#   - Performs necessary unmounting before writing.
#   - Writes the image using &#39;dd&#39; with progress display.
#   - Mounts the ESP partition to copy optional files.
#   - Includes robust cleanup via &#39;trap&#39;.
#
# Requirements:
#   - Bash shell
#   - Core utilities: lsblk, grep, sed, awk, mktemp, mount, umount, cp, tee, sync
#   - &#39;sudo&#39; privileges for disk operations (dd, mount, umount, partprobe).
#   - GNU &#39;dd&#39; (for status=progress).
#   - &#39;partprobe&#39; utility (recommended, for partition table re-scan).
#   - &#39;sbnb.raw&#39; file in the same directory as the script.
#
# More info: https://github.com/sbnb-io/sbnb
#
# WARNING: THIS SCRIPT WILL COMPLETELY OVERWRITE THE SELECTED DISK.
#          ALL DATA ON THE SELECTED DISK WILL BE PERMANENTLY LOST.
#          DOUBLE-CHECK YOUR SELECTION BEFORE CONFIRMING.
#
# ==============================================================================

# Exit immediately if a command exits with a non-zero status
set -e

# --- Configuration ---
SBNB_RAW_FILE=&quot;sbnb.raw&quot;
SBNB_TSKEY_FILE=&quot;sbnb-tskey.txt&quot;
SBNB_CMDS_FILE=&quot;sbnb-cmds.sh&quot; # Target name on ESP for custom script

# --- Color Codes ---
RED=&#39;\033[0;31m&#39;
GREEN=&#39;\033[0;32m&#39;
YELLOW=&#39;\033[1;33m&#39;
BLUE=&#39;\033[0;34m&#39;
NC=&#39;\033[0m&#39; # No Color

# --- Helper Functions ---
info() { echo -e &quot;${GREEN}[INFO]${NC} $1&quot;; }
warn() { echo -e &quot;${YELLOW}[WARN]${NC} $1&quot;; }
error() { echo -e &quot;${RED}[ERROR]${NC} $1&quot;; }
prompt() { read -p &quot;$(echo -e &quot;${BLUE}[PROMPT]${NC} $1&quot;)&quot; &quot;$2&quot;; }

# --- Initial Checks ---
info &quot;Starting Sbnb Linux Bootable Drive Creation Script.&quot;

# Check for root privileges (needed for sudo operations)
if [[ $EUID -eq 0 ]]; then
   error &quot;This script should not be run as root. It uses &#39;sudo&#39; where needed.&quot;
   exit 1
fi
if ! command -v sudo &amp;&gt; /dev/null; then
    error &quot;&#39;sudo&#39; command not found. Please install it.&quot;
    exit 1
fi
# Test sudo privileges early
if ! sudo -v; then
    error &quot;Failed to obtain sudo privileges. Please check your sudo configuration.&quot;
    exit 1
fi

# Check for required local sbnb.raw file
SbnbRawPath=&quot;./${SBNB_RAW_FILE}&quot;
if [ ! -r &quot;$SbnbRawPath&quot; ]; then
  error &quot;&#39;$SBNB_RAW_FILE&#39; not found or not readable in the current directory (${PWD}).&quot;
  exit 1
fi
info &quot;Found required file: $SbnbRawPath&quot;

# Check for optional local sbnb-tskey.txt file
localTsKeyPath=&quot;./${SBNB_TSKEY_FILE}&quot;
if [ -r &quot;$localTsKeyPath&quot; ]; then
  info &quot;Found optional Tailscale key file: $localTsKeyPath&quot;
  useLocalTsKey=true
else
  warn &quot;Optional Tailscale key file (&#39;$SBNB_TSKEY_FILE&#39;) not found or not readable. Skipping.&quot;
  useLocalTsKey=false
fi

# --- Disk Selection ---
info &quot;Enumerating available block devices (disks, USB drives, etc.)...&quot;
# Use lsblk: -d (devices only), -p (full paths), -o (columns), -n (no header)
# Filter for type &#39;disk&#39; or &#39;rom&#39;. Exclude loop devices explicitly.
mapfile -t devices &lt; &lt;(lsblk -dpno NAME,SIZE,MODEL,TYPE | grep -E &#39;disk|rom&#39; | grep -v &#39;loop&#39;)

if [ ${#devices[@]} -eq 0 ]; then
    error &quot;No suitable disk devices found.&quot;
    exit 1
fi

echo -e &quot;${YELLOW}Available Devices:${NC}&quot;
echo &quot;--------------------------------------------------&quot;
for i in &quot;${!devices[@]}&quot;; do
  printf &quot;%3d) %s\n&quot; $((i+1)) &quot;${devices[$i]}&quot;
done
echo &quot;--------------------------------------------------&quot;

selectedDiskIndex=&quot;&quot;
while true; do
    prompt &quot;Enter the index number of the target device: &quot; selectedDiskIndex
    if [[ &quot;$selectedDiskIndex&quot; =~ ^[0-9]+$ ]] &amp;&amp; [ &quot;$selectedDiskIndex&quot; -ge 1 ] &amp;&amp; [ &quot;$selectedDiskIndex&quot; -le ${#devices[@]} ]; then
        selectedDrive=$(echo &quot;${devices[$((selectedDiskIndex-1))]}&quot; | awk &#39;{print $1}&#39;)
        info &quot;You selected index $selectedDiskIndex: $selectedDrive&quot;
        break
    else
        warn &quot;Invalid input. Please enter a number between 1 and ${#devices[@]}.&quot;
    fi
done

# --- Confirmation ---
echo -e &quot;${RED}====================== WARNING ======================${NC}&quot;
echo -e &quot;${RED}You have selected device: $selectedDrive${NC}&quot;
echo -e &quot;${RED}ALL DATA ON THIS DEVICE WILL BE PERMANENTLY DESTROYED!${NC}&quot;
echo -e &quot;${RED}=====================================================${NC}&quot;
prompt &quot;Are you absolutely sure you want to proceed? (yes/no): &quot; confirmation
if [[ &quot;$confirmation&quot; != &quot;yes&quot; ]]; then
  error &quot;Operation cancelled by user.&quot;
  exit 1
fi

# --- Unmount Partitions ---
info &quot;Checking for and unmounting partitions on $selectedDrive...&quot;
# Use lsblk -lnpo NAME to get full paths of partitions, suppress errors if none exist
mounted_count=0
for partition_path in $(lsblk -lnpo NAME &quot;$selectedDrive&quot; 2&gt;/dev/null || true); do
    # Check if the partition is currently mounted
    if mount | grep -q &quot;^$partition_path &quot;; then # Check for exact match followed by space
        info &quot;Unmounting partition $partition_path...&quot;
        sudo umount &quot;$partition_path&quot;
        mounted_count=$((mounted_count + 1))
    fi
done
if [ $mounted_count -gt 0 ]; then
    info &quot;Finished unmounting partitions.&quot;
else
    info &quot;No mounted partitions found on $selectedDrive.&quot;
fi

# --- Write Image ---
info &quot;Writing &#39;$SBNB_RAW_FILE&#39; to $selectedDrive...&quot;
warn &quot;This may take a while. Please wait...&quot;
# Use bs=4M (often faster), status=progress (GNU dd), conv=fsync (sync data+metadata at end)
if ! sudo dd if=&quot;$SbnbRawPath&quot; of=&quot;$selectedDrive&quot; bs=4M status=progress conv=fsync; then
    error &quot;Failed to write image to $selectedDrive using dd.&quot;
    exit 1
fi
info &quot;Image write completed successfully.&quot;

# --- Partition Recognition ---
info &quot;Ensuring partition table is recognized...&quot;
sync # Ensure all buffers are flushed
# Attempt to re-read partition table. partprobe is common.
if command -v partprobe &amp;&gt; /dev/null; then
    info &quot;Running &#39;partprobe&#39; to update partition table...&quot;
    sudo partprobe &quot;$selectedDrive&quot; || warn &quot;&#39;partprobe&#39; failed, but continuing...&quot;
else
    warn &quot;&#39;partprobe&#39; command not found. The system might take longer to recognize partitions.&quot;
fi
sleep 3 # Give the system a moment

# --- Mount ESP Partition ---
info &quot;Attempting to identify and mount the first partition (ESP)...&quot;
# Determine expected partition name (handles common schemes like sda1, nvme0n1p1, mmcblk0p1)
firstPartition=&quot;&quot;
# Check for pattern like /dev/sda1, /dev/hda1
if [ -b &quot;${selectedDrive}1&quot; ]; then
    firstPartition=&quot;${selectedDrive}1&quot;
# Check for pattern like /dev/nvme0n1p1, /dev/mmcblk0p1
elif [ -b &quot;${selectedDrive}p1&quot; ]; then
    firstPartition=&quot;${selectedDrive}p1&quot;
else
    # Poll briefly in case detection was slow
    warn &quot;First partition not immediately found, polling for 5 seconds...&quot;
    found=false
    for _ in {1..5}; do
        sleep 1
        if [ -b &quot;${selectedDrive}1&quot; ]; then firstPartition=&quot;${selectedDrive}1&quot;; found=true; break; fi
        if [ -b &quot;${selectedDrive}p1&quot; ]; then firstPartition=&quot;${selectedDrive}p1&quot;; found=true; break; fi
    done
    if ! $found; then
        error &quot;Could not find the first partition device node (${selectedDrive}1 or ${selectedDrive}p1).&quot;
        error &quot;Cannot proceed with copying files to ESP.&quot;
        exit 1
    fi
fi
info &quot;Identified first partition as: $firstPartition&quot;

# Create temporary mount point
tempMountDir=$(mktemp -d -t sbnb-esp-XXXXXX)

# Setup trap for cleanup BEFORE attempting mount
trap &#39;cleanup&#39; EXIT HUP INT TERM
cleanup() {
    info &quot;Cleaning up...&quot;
    # Check if mount point exists and is mounted before trying to unmount
    if [ -d &quot;$tempMountDir&quot; ] &amp;&amp; mountpoint -q &quot;$tempMountDir&quot;; then
        sudo umount &quot;$tempMountDir&quot; 2&gt;/dev/null || warn &quot;Failed to unmount $tempMountDir during cleanup.&quot;
    fi
    if [ -d &quot;$tempMountDir&quot; ]; then
        rmdir &quot;$tempMountDir&quot; 2&gt;/dev/null || warn &quot;Failed to remove temporary directory $tempMountDir during cleanup.&quot;
    fi
}

# Mount the partition
info &quot;Mounting $firstPartition to $tempMountDir...&quot;
if ! sudo mount &quot;$firstPartition&quot; &quot;$tempMountDir&quot;; then
    error &quot;Failed to mount ESP partition $firstPartition at $tempMountDir.&quot;
    # Trap will handle cleanup
    exit 1
fi
info &quot;ESP partition successfully mounted at $tempMountDir&quot;
espPath=&quot;$tempMountDir&quot;

# --- Copy Files to ESP ---

# Copy Tailscale key if local file exists
if [ &quot;$useLocalTsKey&quot; = true ]; then
  targetTsKeyPath=&quot;$espPath/$SBNB_TSKEY_FILE&quot;
  info &quot;Copying local &#39;$SBNB_TSKEY_FILE&#39; to $targetTsKeyPath...&quot;
  if ! sudo cp &quot;$localTsKeyPath&quot; &quot;$targetTsKeyPath&quot;; then
      error &quot;Failed to copy Tailscale key to ESP.&quot;
      # Trap will handle cleanup
      exit 1
  fi
  # Note: FAT32 doesn&#39;t store standard Linux permissions well. Ownership/perms might not be critical here.
  info &quot;Tailscale key copied successfully.&quot;
fi

# Ask for and copy custom script if provided
customScriptPath=&quot;&quot;
prompt &quot;Enter path to custom script file (optional, saved as &#39;$SBNB_CMDS_FILE&#39; on drive, runs at boot) [Press Enter to skip]: &quot; customScriptPath

if [ -n &quot;$customScriptPath&quot; ]; then
  if [ -f &quot;$customScriptPath&quot; ] &amp;&amp; [ -r &quot;$customScriptPath&quot; ]; then
    targetScriptPath=&quot;$espPath/$SBNB_CMDS_FILE&quot;
    info &quot;Copying custom script &#39;$customScriptPath&#39; to $targetScriptPath...&quot;
    if ! sudo cp &quot;$customScriptPath&quot; &quot;$targetScriptPath&quot;; then
        error &quot;Failed to copy custom script to ESP.&quot;
        # Trap will handle cleanup
        exit 1
    fi
    # Optional: Make executable if needed, though FAT32 might ignore it. Boot process might source it instead.
    # sudo chmod +x &quot;$targetScriptPath&quot;
    info &quot;Custom script copied successfully.&quot;
  else
    warn &quot;Custom script file &#39;$customScriptPath&#39; not found or not readable. Skipping.&quot;
  fi
else
  info &quot;No custom script path provided. Skipping.&quot;
fi

# --- Final Steps ---
info &quot;File copying complete.&quot;
# Unmounting and cleanup is handled by the trap on exit

echo -e &quot;${BLUE}=========================================${NC}&quot;
echo -e &quot;${GREEN} Operation completed successfully! ${NC}&quot;
echo -e &quot;${GREEN} You can now safely remove the device: $selectedDrive ${NC}&quot;
echo -e &quot;${GREEN} Remember to adjust BIOS/UEFI settings to boot from it. ${NC}&quot;
echo -e &quot;${BLUE}=========================================${NC}&quot;

# Explicitly disable trap before normal exit to avoid double cleanup message
trap - EXIT HUP INT TERM
cleanup # Perform cleanup explicitly on successful exit

exit 0</code>
</section>]]></content><author><name></name></author><category term="scratchpad" /></entry><entry><title type="html">WinNTSetup - universal Windows Installer</title><link href="https://ib.bsb.br/winntsetup-universal-windows-installer/" rel="alternate" type="text/html" title="WinNTSetup - universal Windows Installer" /><published>2025-04-30T00:00:00+00:00</published><updated>2025-04-30T10:21:18+00:00</updated><id>https://ib.bsb.br/winntsetup-universal-windows-installer</id><content type="html" xml:base="https://ib.bsb.br/winntsetup-universal-windows-installer/"><![CDATA[<p><strong>Features:</strong></p>

<ul>
  <li>Install (unattend) Windows 2k/XP/20??/Vista/7/8.x/10/11 x86/x64/arm64</li>
  <li>Practically runs even on the most minimalistic WinPE</li>
  <li>selectable drive letter for the new Windows installation</li>
  <li>Fully automated with save/load setting in ini file and various command line options</li>
  <li>Install Windows also if nlite/vlite has remove winnt32.exe/setup.exe</li>
  <li>Integrate Drivers: normal PNP and Textmode Drivers</li>
  <li>Patch uxtheme to allow unsigned Themes</li>
  <li>Some common registry tweaks and *.reg file import</li>
  <li>DISM APPX  removal, feature enable/disable</li>
  <li>Simple VHD creation and Installation</li>
  <li>Support ‚ÄúWindows to Go‚Äù for Windows 7 and later installs</li>
  <li>Supports WimBoot and CompactOS option for Windows 7 and later</li>
  <li>Supports all current WIM files: WIM/SWM/ESD and ISO files</li>
  <li>WinCapture - capture a Windows installation to WIM or ESD file</li>
  <li>MinWin - simple trimming WIM in memory before apply</li>
  <li>WinCopy - copy an existing Windows installation to another partition</li>
  <li>Offline Hotfix uninstall</li>
  <li>Offline password reset</li>
</ul>

<p><strong>Not Supported:</strong></p>

<ul>
  <li>- No Windows embedded version (this includes WinFLP)</li>
  <li>- No upgrades of existing installations</li>
</ul>

<p><strong>About driver installation:</strong></p>

<p>Every driver added in NT6.x windows will be added to the driver store.<br />
So it‚Äôs not recommended to add countless driver, but rather more really required ones.</p>

<p>NT5.x massstorage driver integration is possible thanks to <strong>Mr dUSHA</strong> powerful <strong>MSSTMake.exe</strong> tool</p>

<p><strong>To the Unattend option:</strong>It‚Äôs possible to use an <strong>unattend.xml</strong> to run the Setup unattended.<br />
But as the actual WinPE Setup Phase isn‚Äôt effective in that way of install, all Winpe related settings inside the unattend.xml<br />
won‚Äôt be applied.</p>

<p><strong>Ini config file</strong>It‚Äôs possible to save all GUI-settings to a ini file:</p>

<p>push <strong>Ctrl + S</strong> to <strong>save</strong> all settings to an ini.<br />
push <strong>Ctrl + L</strong> to <strong>load</strong> all settings from an ini.</p>

<p>A <strong>WinNTSetup.ini</strong> file in the same dir as the app itself will be loaded automatically at startup.</p>

<p>It also can be selected via command line:</p>

<p>WinNTSetup.exe /cfg:‚ÄùC:\mysettings.ini‚Äù</p>

<p>If you want to modify ini settings yourself, click-click has made a nice <a href="https://www.mediafire.com/file/znuf574scdac94d/WinNTGUI2Ini.pdf/file">PDF</a> for it.</p>

<p>For advanced users there are also hidden settings described in the included WinNTSetup.ini.txt</p>

<p><strong>Command line:</strong></p>

<p>- Press F1 to get list of all options</p>

<p><strong>To install Windows in a VHD file:</strong>- requires Windows 7 as OS and <strong>Windows 7 Ultimate, Enterprise or Server 2008 R2</strong> as Source<br />
- create a partitioned VHD and assign a drive letter (push Ctrl + Shift + V to use build in diskpart wrapper for this)<br />
- select the VHD drive as installation drive (make sure you boot drive ist a active primary partition on a physical disk)</p>

<p>If you get an Antivirus warning from your AV software, please report it to them as a false positive and let them check it.</p>

<p><strong>Current Version: 5.4.1</strong></p>

<p>Download: <a href="https://mega.nz/folder/ObATya7C#oR2t79bT-4MGjKxOAYwkbQ">Mega</a> - <a href="https://www.mediafire.com/folder/53um6k2nmhvd5/">MediaFire</a></p>

<p><strong>Edited December 29, 2024 by JFX</strong></p>

<p>21</p>

<p><a href="https://msfn.org/board/profile/25215-jaclaz/" title="Go to jaclaz's profile"><img src="https://msfn.org/board/uploads/monthly_2017_08/Jgray.thumb.jpg.8353b51d429039be7eaa0a7da3fbd3fe.jpg" alt="Image 4: jaclaz" /></a></p>

<p>It looks like a nice tool. <a href="https://msfn.org/board/uploads/emoticons/default_thumbup.gif" title="Enlarge image"><img src="https://msfn.org/board/applications/core/interface/js/spacer.png" alt="Image 5: :thumbup" /></a></p>

<p>And it shouldn‚Äôt be dedicated to ‚ÄúUSB only‚Äù, if I am not mistaken. <a href="https://msfn.org/board/uploads/emoticons/default_unsure.png" title="Enlarge image"><img src="https://msfn.org/board/applications/core/interface/js/spacer.png" alt="Image 6: :unsure:" /></a></p>

<p>Let‚Äôs hope that whoever tests it will be so kind as to (please read as ‚Äúanyone testing it please do‚Äù) provide - for the benefit of the less expereinced users - some details on the various available options, and their usage.</p>

<p>Usual bothering request to the developer <a href="https://msfn.org/board/uploads/emoticons/default_blushing.gif" title="Enlarge image"><img src="https://msfn.org/board/applications/core/interface/js/spacer.png" alt="Image 7: :blushing:" /></a> :</p>

<ul>
  <li>Any chance that it will ever support command line? (or provide a pre-set in the form of a .ini file?) <a href="https://msfn.org/board/uploads/emoticons/default_whistling.gif" title="Enlarge image"><img src="https://msfn.org/board/applications/core/interface/js/spacer.png" alt="Image 8: :whistle:" /></a></li>
</ul>

<p>jaclaz</p>

<p><a href="https://msfn.org/board/profile/314753-jfx/" title="Go to JFX's profile"><img src="https://msfn.org/board/uploads/monthly_2025_01/avatar_small.thumb.png.54db03064974c08ad6356a340b1173b3.png" alt="Image 9: JFX" /></a></p>

<ul>
  <li><strong>Author</strong></li>
</ul>

<blockquote>
  <p>And it shouldn‚Äôt be dedicated to ‚ÄúUSB only‚Äù, if I am not mistaken. <a href="https://msfn.org/board/uploads/emoticons/default_unsure.png" title="Enlarge image"><img src="https://msfn.org/board/applications/core/interface/js/spacer.png" alt="Image 10: :unsure:" /></a></p>
</blockquote>

<p>Well, you right, not the most correct forum section</p>

<blockquote>
  <p>Let‚Äôs hope that whoever tests it will be so kind as to (please read as ‚Äúanyone testing it please do‚Äù) provide - for the benefit of the less expereinced users - some details on the various available options, and their usage.</p>
</blockquote>

<p>hmm, yeah i could add tool tip/balloons for every check box</p>

<p>Thanks for reminding about the ini file <a href="https://msfn.org/board/uploads/emoticons/default_smile.png" title="Enlarge image"><img src="https://msfn.org/board/applications/core/interface/js/spacer.png" alt="Image 11: :)" /></a> Added to first Post</p>

<p>More command line options could be added, if requested.</p>

<ul>
  <li>2 weeks later‚Ä¶</li>
</ul>

<p><a href="https://msfn.org/board/profile/125656-lama/" title="Go to lama's profile"><img src="blob:http://localhost/3421ba85060e6030e813683c8ff84905" alt="Image 12: lama" /></a></p>

<p>Thanks for the link @ reboot.pro wonko, but, how come this v 2.0 was not even mentioned by original creator? Excuse me but,‚Ä¶Did i missed the part where JFX became ‚Äúwas_JFX‚Äù there? <a href="https://msfn.org/board/uploads/emoticons/default_huh.png" title="Enlarge image"><img src="https://msfn.org/board/applications/core/interface/js/spacer.png" alt="Image 13: :huh:" /></a></p>

<p><a href="https://msfn.org/board/profile/25215-jaclaz/" title="Go to jaclaz's profile"><img src="https://msfn.org/board/uploads/monthly_2017_08/Jgray.thumb.jpg.8353b51d429039be7eaa0a7da3fbd3fe.jpg" alt="Image 14: jaclaz" /></a></p>

<blockquote>
  <p>Thanks for the link @ reboot.pro wonko, but, how come this v 2.0 was not even mentioned by original creator? Excuse me but,‚Ä¶Did i missed the part where JFX became ‚Äúwas_JFX‚Äù there? <a href="https://msfn.org/board/uploads/emoticons/default_huh.png" title="Enlarge image"><img src="https://msfn.org/board/applications/core/interface/js/spacer.png" alt="Image 15: :huh:" /></a></p>
</blockquote>

<p>Evidently yes.</p>

<p>And however I don‚Äô t think it is part of your business.</p>

<p>jaclaz</p>

<p><a href="https://msfn.org/board/profile/132150-wimb/" title="Go to wimb's profile"><img src="https://msfn.org/board/uploads/av-132150.jpg" alt="Image 16: wimb" /></a></p>]]></content><author><name></name></author><category term="scratchpad" /></entry><entry><title type="html">ADB transfer from RK3588 to Windows via OTG</title><link href="https://ib.bsb.br/adb-transfer-from-rk3588-to-windows-via-otg/" rel="alternate" type="text/html" title="ADB transfer from RK3588 to Windows via OTG" /><published>2025-04-29T00:00:00+00:00</published><updated>2025-04-29T11:29:25+00:00</updated><id>https://ib.bsb.br/adb-transfer-from-rk3588-to-windows-via-otg</id><content type="html" xml:base="https://ib.bsb.br/adb-transfer-from-rk3588-to-windows-via-otg/"><![CDATA[<p>This guide explains how to use the Android Debug Bridge (adb) utility within Windows 11 PowerShell to copy selected folders from your Rockchip RK3588 device to your PC for backup, utilizing a USB OTG (On-The-Go) connection.</p>

<p><strong>1. Prerequisites:</strong></p>

<ul>
  <li><strong>ADB Installed and PATH Configured on Windows 11:</strong>
    <ul>
      <li>Download the ‚ÄúSDK Platform Tools for Windows‚Äù from the official Android Developers website: <a href="https://developer.android.com/tools/releases/platform-tools">https://developer.android.com/tools/releases/platform-tools</a></li>
      <li>Extract the downloaded ZIP file to a stable location (e.g., C:\platform-tools).</li>
      <li>Add the full path to this folder (e.g., C:\platform-tools) to your Windows system‚Äôs Path environment variable. This allows you to run adb commands from any PowerShell window without navigating to the folder first. This makes using ADB much more convenient as you don‚Äôt need to type the full path to adb.exe every time.
        <ul>
          <li>Search for ‚ÄúEdit the system environment variables‚Äù in the Windows search bar and open it.</li>
          <li>Click on ‚ÄúEnvironment Variables‚Ä¶‚Äù.</li>
          <li>Under ‚ÄúSystem variables‚Äù (recommended) or ‚ÄúUser variables‚Äù, find and select the Path variable, then click ‚ÄúEdit‚Ä¶‚Äù.</li>
          <li>Click ‚ÄúNew‚Äù and paste the full path to your platform-tools folder.</li>
          <li>Click ‚ÄúOK‚Äù on all open windows.</li>
          <li><strong>Important:</strong> Close and reopen any currently open PowerShell windows for the change to take effect. Verify by opening a new PowerShell window and typing adb version.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>Rockchip USB Drivers:</strong>
    <ul>
      <li>Install the necessary USB drivers for your RK3588 device on Windows 11. These often come from the device manufacturer or can be found in Rockchip driver packs (e.g., DriverAssitant). While Windows might install generic drivers, specific Rockchip drivers are often more reliable. Ensure the driver supports ADB connections.</li>
      <li>Check Windows <strong>Device Manager</strong> after connecting the device. Look for entries like ‚ÄúADB Interface‚Äù, ‚ÄúAndroid Device‚Äù, or specific Rockchip devices, ensuring there are no yellow warning icons indicating driver issues.</li>
    </ul>
  </li>
  <li><strong>USB Debugging Enabled on RK3588:</strong>
    <ul>
      <li><strong>If running Android:</strong>
        <ul>
          <li>Go to Settings &gt; About phone (or About device).</li>
          <li>Tap on the Build number seven times until you see ‚ÄúYou are now a developer!‚Äù.</li>
          <li>Go back to the main Settings menu, find System &gt; Developer options.</li>
          <li>Enable Developer options (if not already enabled).</li>
          <li>Find and enable USB debugging. Confirm any security prompts.</li>
        </ul>
      </li>
      <li><strong>If running Linux:</strong> Ensure the adbd (ADB Daemon) service is installed and running. Configuration might involve enabling/starting a systemd service (e.g., systemctl enable --now adbd) or an init script. The USB OTG port also needs to be configured for peripheral/device mode, potentially via Device Tree Overlays (.dtbo). Consult your specific Linux distribution‚Äôs documentation for the RK3588.</li>
    </ul>
  </li>
  <li><strong>USB OTG Cable and Connection:</strong>
    <ul>
      <li>Connect the RK3588 device to your Windows 11 PC using a USB cable plugged into the <strong>designated OTG port</strong> on the RK3588 device. This specific port allows the RK3588 to act as a USB <em>peripheral</em> (like a phone connecting to a PC), which is necessary for ADB connection <em>to</em> the PC. Standard USB host ports (Type-A) on the RK3588 will likely not work for this purpose. Check your board‚Äôs documentation to identify the correct port (often USB-C or Micro-USB).</li>
    </ul>
  </li>
</ul>

<p><strong>2. Verify ADB Connection:</strong></p>

<ul>
  <li>Open <strong>Windows PowerShell</strong> (you can search for it in the Start menu or right-click the Start button).</li>
  <li>
    <p>Type the following command and press Enter:<br />
adb devices</p>
  </li>
  <li><strong>Authorize Connection (First Time):</strong> Look at the screen of your RK3588 device. A prompt should appear asking ‚ÄúAllow USB debugging?‚Äù showing your PC‚Äôs RSA key fingerprint. Check the box ‚ÄúAlways allow from this computer‚Äù (recommended) and tap ‚ÄúAllow‚Äù or ‚ÄúOK‚Äù.</li>
  <li>
    <p><strong>Run adb devices again.</strong> You should see your device listed with its serial number and ‚Äúdevice‚Äù next to it:<br />
List of devices attached<br />
RK3588_SERIAL_NUMBER    device</p>
  </li>
  <li><strong>Troubleshooting Connection Status:</strong>
    <ul>
      <li><strong>unauthorized</strong>: You missed or denied the authorization prompt on the RK3588. Check the device screen, disconnect/reconnect, or use ‚ÄúRevoke USB debugging authorizations‚Äù in Developer Options on the device and try again.</li>
      <li><strong>offline</strong>: Often a driver or connection issue. Check drivers, cable, and OTG port. Try adb kill-server followed by adb start-server. Check Device Manager on Windows.</li>
      <li><strong>Empty List</strong>: Check drivers, cable (ensure it‚Äôs the OTG port), USB debugging setting on the device. Check Device Manager for unrecognized devices. Ensure adbd is running if using Linux.</li>
    </ul>
  </li>
</ul>

<p><strong>3. Identify Folders on RK3588:</strong></p>

<ul>
  <li>You need the exact path of the folders you want to copy <em>on the RK3588 device</em>. Remember that paths on Android/Linux are <strong>case-sensitive</strong>.</li>
  <li>
    <p>Use the adb shell command to explore the device‚Äôs filesystem:<br />
adb shell</p>
  </li>
  <li>Inside the shell (you‚Äôll see a prompt like rk3588:/ $), use standard Linux commands:
    <ul>
      <li>ls: List directory contents (use ls -l for more details).</li>
      <li>cd &lt;directory&gt;: Change directory.</li>
      <li>pwd: Print the current working directory (shows the full path).</li>
    </ul>
  </li>
  <li><strong>Common Locations (Android):</strong>
    <ul>
      <li>/sdcard/ (Internal shared storage, often links to /storage/emulated/0/)</li>
      <li>/sdcard/DCIM/ (Camera photos/videos)</li>
      <li>/sdcard/Download/</li>
      <li>/sdcard/Documents/</li>
      <li>/sdcard/Pictures/</li>
    </ul>
  </li>
  <li>Note down the full path for each folder you want to back up (e.g., /sdcard/Documents).</li>
  <li>Type exit and press Enter to leave the adb shell.</li>
</ul>

<p><strong>4. Transfer Folders using adb pull:</strong></p>

<ul>
  <li>The command to copy files or folders <em>from</em> the Android device <em>to</em> your Windows PC is adb pull.</li>
  <li>
    <p><strong>Syntax:</strong><br />
adb pull &lt;path_on_device&gt; &lt;path_on_windows_pc&gt;</p>
  </li>
  <li><strong>Understanding the Destination Path:</strong>
    <ul>
      <li>When you run adb pull /device/source/folder C:\PC\dest, ADB copies the folder <em>into</em> C:\PC\dest. The result is C:\PC\dest\folder.</li>
      <li>If the final component of the PC path (dest in this example) doesn‚Äôt exist, adb pull will attempt to create it.</li>
    </ul>
  </li>
  <li>
    <p><strong>Create Base Destination Folder (Recommended):</strong> Create a main folder on your Windows PC to store all the backups, e.g.:<br />
mkdir C:\RK3588_Backup</p>
  </li>
  <li><strong>Execute the Transfer (Single Folder):</strong> Run the adb pull command for the desired folder.
    <ul>
      <li>
        <p><strong>Example:</strong> Copy /sdcard/Documents from the device into the C:\RK3588_Backup folder on your PC (resulting in C:\RK3588_Backup\Documents):<br />
adb pull /sdcard/Documents C:\RK3588_Backup</p>
      </li>
      <li>
        <p><strong>Example:</strong> Copy /sdcard/DCIM into the same base backup folder:<br />
adb pull /sdcard/DCIM C:\RK3588_Backup</p>
      </li>
      <li>
        <p><strong>Paths with Spaces:</strong> If any path (on the device or PC) contains spaces, enclose the <em>entire path</em> in double quotes:<br />
adb pull ‚Äú/sdcard/My Work Files‚Äù ‚ÄúC:\RK3588_Backup‚Äù</p>

        <p>(This will create C:\RK3588_Backup\My Work Files)</p>
      </li>
    </ul>
  </li>
  <li>Wait for each command to complete. Transfer time depends on the amount of data.</li>
</ul>

<p><strong>4.1 Transferring Multiple Folders (PowerShell Script - Optional):</strong></p>

<p>If you need to back up many folders regularly, scripting is more efficient.</p>

<ol>
  <li><strong>Create a List:</strong> Define the source folders on the RK3588 device in a PowerShell array.</li>
  <li><strong>Define Destination:</strong> Specify the base backup folder on your Windows PC.</li>
  <li><strong>Loop and Pull:</strong> Use ForEach-Object to iterate through the list and run adb pull for each folder.
    <ul>
      <li><strong>Example PowerShell Script:</strong><br />
# -‚Äì Configuration -‚Äì<br />
# List of full paths to folders on the RK3588 device to back up<br />
$sourceFolderPaths = @(<br />
 ‚Äú/sdcard/Documents‚Äù,<br />
 ‚Äú/sdcard/DCIM‚Äù,<br />
 ‚Äú/sdcard/Pictures‚Äù,<br />
 ‚Äú/sdcard/Download‚Äù,<br />
 ‚Äú/sdcard/My Work Files‚Äù # Example with spaces<br />
)</li>
    </ul>
  </li>
</ol>

<p># Base destination folder on your Windows PC<br />
  $destinationBaseFolder = ‚ÄúC:\RK3588_Backup‚Äù</p>

<p># -‚Äì Execution -‚Äì<br />
  Write-Host ‚ÄúStarting RK3588 folder backup‚Ä¶‚Äù</p>

<p># Create the base destination folder if it doesn‚Äôt exist<br />
  if (-not (Test-Path $destinationBaseFolder)) {<br />
      Write-Host ‚ÄúCreating destination folder: $destinationBaseFolder‚Äù<br />
      New-Item -ItemType Directory -Force -Path $destinationBaseFolder<br />
  }</p>

<p># Loop through each source folder path<br />
  $sourceFolderPaths | ForEach-Object {<br />
      $sourceFolder = $_<br />
      Write-Host ‚ÄúAttempting to pull ‚Äò$sourceFolder‚Äô to ‚Äò$destinationBaseFolder‚Äô‚Ä¶‚Äù</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  \# Construct the adb pull command (handles spaces using quotes if needed)  
  \# Note: We pull the folder \*into\* the base destination directory.  
  adb pull "$sourceFolder" "$destinationBaseFolder"

  \# Basic error check (adb pull doesn't have reliable exit codes for success/failure)  
  \# You might need more robust checking for production scripts  
  if ($LASTEXITCODE \-ne 0\) {  
      Write-Warning "Potential issue pulling '$sourceFolder'. Check ADB output."  
  } else {  
      Write-Host "Successfully pulled '$sourceFolder'." \-ForegroundColor Green  
  }     }
</code></pre></div></div>

<p>Write-Host ‚ÄúBackup process completed.‚Äù</p>

<ul>
  <li><strong>How to Use:</strong>
    <ol>
      <li>Open PowerShell.</li>
      <li>Copy and paste the script directly into the PowerShell window, or save it as a .ps1 file (e.g., backup_rk3588.ps1) and run it using .\backup_rk3588.ps1. (You might need to adjust PowerShell‚Äôs execution policy first: Set-ExecutionPolicy RemoteSigned -Scope CurrentUser. This command may be required due to Windows security settings that prevent running scripts downloaded from the internet or created locally. Using -Scope CurrentUser is generally safer as it only affects your user account, not the entire system. Pasting the script directly into an open PowerShell window usually bypasses this check.).</li>
      <li>Modify the $sourceFolderPaths array and $destinationBaseFolder variable as needed.</li>
    </ol>
  </li>
</ul>

<p><strong>5. Verify the Backup:</strong></p>

<ul>
  <li>Navigate to your destination folder on Windows (e.g., C:\RK3588_Backup) using File Explorer.</li>
  <li>Check that the folders (e.g., Documents, DCIM) have been copied and contain the expected files.</li>
</ul>

<p><strong>6. Troubleshooting:</strong></p>

<ul>
  <li><strong>Device Not Found/Offline/Unauthorized:</strong> See Step 2 troubleshooting. Double-check drivers, cable, OTG port, USB debugging status, and PC authorization on the device. Restarting both devices can help. Try adb kill-server then adb start-server.</li>
  <li><strong>Permission Denied during adb pull:</strong>
    <ul>
      <li>You might not have permission to access certain system folders (e.g., /data/data/). Standard adb pull usually works for user-accessible storage like /sdcard/. Accessing protected areas might require root access on the RK3588 device (adb root, if supported and enabled).</li>
      <li>Ensure PowerShell has permissions to write to the destination folder on Windows. Try running PowerShell as Administrator or choosing a destination folder in your user profile (e.g., C:\Users\YourUsername\Documents\RK3588_Backup).</li>
    </ul>
  </li>
  <li><strong>File Not Found / No such file or directory:</strong>
    <ul>
      <li>Double-check the exact path on the device using adb shell ls. Remember paths are <strong>case-sensitive</strong>.</li>
      <li>Ensure you are using forward slashes (/) for the device path.</li>
    </ul>
  </li>
  <li><strong>Slow Transfer:</strong> Transfer speeds depend on the USB connection speed (USB 2.0 vs 3.0/3.1 for the OTG port and PC port), the device‚Äôs internal storage speed, and the number/size of files. Large transfers take time.</li>
  <li><strong>Transfer Interrupted:</strong> If a pull command is interrupted (e.g., cable disconnect), it will likely need to be rerun for that specific folder. ADB pull doesn‚Äôt typically resume automatically.</li>
</ul>

<p><strong>7. Alternative Methods (Briefly):</strong></p>

<p>While adb pull is direct and scriptable, other methods exist:</p>

<ul>
  <li><strong>Network Transfer:</strong> If SSH is enabled on the RK3588 (common on Linux), tools like scp or rsync can be used over the network. File managers with network support (SMB/SFTP) can also work.</li>
  <li><strong>Synchronization Tools:</strong> Apps like Syncthing can keep folders synchronized between devices automatically over the network.</li>
  <li><strong>GUI ADB Tools:</strong> Various third-party applications provide a graphical interface for ADB operations, including file transfer.</li>
</ul>

<p>By following these steps, you should be able to successfully use ADB in PowerShell to back up selected folders from your RK3588 device to your Windows 11 computer via the USB OTG connection. Remember to disable USB debugging when not needed for security.</p>]]></content><author><name></name></author><category term="scratchpad" /></entry><entry><title type="html">Dual Boot Windows and Ubuntu</title><link href="https://ib.bsb.br/dual-boot-windows-and-ubuntu/" rel="alternate" type="text/html" title="Dual Boot Windows and Ubuntu" /><published>2025-04-29T00:00:00+00:00</published><updated>2025-04-29T23:27:06+00:00</updated><id>https://ib.bsb.br/dual-boot-windows-and-ubuntu</id><content type="html" xml:base="https://ib.bsb.br/dual-boot-windows-and-ubuntu/"><![CDATA[<p><img src="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/ubuntu25install_hu_a1a6c5b5a0a2c31f.webp" alt="Image 1: Ubuntu 25 installer" /></p>

<p><em>Ubuntu Plucky Puffin installer</em></p>

<p><strong>Last Updated: April 2025</strong></p>

<p>Running both Windows 11 and Ubuntu 25.04 on the same computer gives you the best of both worlds. This step-by-step guide makes dual-booting simple, even for beginners!</p>

<h2 id="what-sets-this-guide-apart">What Sets This Guide Apart<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#what-sets-this-guide-apart">#</a></h2>

<p>Unlike typical dual-boot tutorials, this guide offers:</p>

<ul>
  <li><strong>UEFI vs. Legacy BIOS</strong> instructions for modern computers</li>
  <li><strong>Secure Boot compatibility</strong> solutions</li>
  <li><strong>Performance optimization</strong> tips for both operating systems</li>
  <li><strong>Advanced partition strategies</strong> for optimal system management</li>
  <li><strong>Automated setup scripts</strong> to speed up post-installation configuration</li>
  <li><strong>Virtualization options</strong> when dual-boot isn‚Äôt ideal</li>
  <li><strong>Real-world use case scenarios</strong> to maximize your dual-boot experience</li>
</ul>

<h2 id="what-youll-need">What You‚Äôll Need<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#what-youll-need">#</a></h2>

<ul>
  <li>A computer with Windows 11 already installed</li>
  <li>At least 30GB of free space (50GB+ recommended for comfortable usage)</li>
  <li>A USB drive (8GB or larger)</li>
  <li>About 30-45 minutes of your time</li>
  <li>Basic computer knowledge</li>
</ul>

<h2 id="part-1-prepare-your-computer">Part 1: Prepare Your Computer<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#part-1-prepare-your-computer">#</a></h2>

<h3 id="1-back-up-your-data">1. Back Up Your Data<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#1-back-up-your-data">#</a></h3>

<p>Always back up important files before modifying your system.</p>

<ul>
  <li>Use Windows built-in Backup and Restore</li>
  <li>Consider cloud backup solutions (OneDrive, Google Drive)</li>
  <li>For critical data, create an external drive backup</li>
</ul>

<h3 id="2-check-your-system-type-uefi-or-legacy-bios">2. Check Your System Type: UEFI or Legacy BIOS<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#2-check-your-system-type-uefi-or-legacy-bios">#</a></h3>

<ol>
  <li>Press <strong>Win + R</strong>, type <code class="language-plaintext highlighter-rouge">msinfo32</code>, and press Enter</li>
  <li>Look for ‚ÄúBIOS Mode‚Äù under System Summary
    <ul>
      <li>If it says ‚ÄúUEFI‚Äù, follow the UEFI instructions in this guide</li>
      <li>If it says ‚ÄúLegacy‚Äù, follow the Legacy instructions</li>
    </ul>
  </li>
</ol>

<h3 id="3-create-space-for-ubuntu">3. Create Space for Ubuntu<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#3-create-space-for-ubuntu">#</a></h3>

<h4 id="using-disk-management">Using Disk Management:<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#using-disk-management">#</a></h4>

<ol>
  <li>Press <strong>Win + X</strong> and select <strong>Disk Management</strong></li>
  <li>Right-click on your largest partition (usually C:) and select <strong>Shrink Volume</strong></li>
  <li>Enter the amount to shrink (minimum 30000 MB recommended for Ubuntu)
    <ul>
      <li>For a more comfortable experience: 50000 MB (50GB)</li>
      <li>For developers/power users: 100000 MB (100GB)</li>
    </ul>
  </li>
  <li>Click <strong>Shrink</strong> to create unallocated space</li>
</ol>

<p><img src="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/shrink-volume-to-partition-ssd-via-disk-management_hu_e99782628afd7c57.webp" alt="Image 2: Windows Disk Management showing shrink option" /></p>

<p><em>Shrink your Windows partition to make room for Ubuntu</em></p>

<h4 id="alternative-using-disk-cleanup-first-recommended">Alternative: Using Disk Cleanup First (Recommended)<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#alternative-using-disk-cleanup-first-recommended">#</a></h4>

<p>Before shrinking, free up space by:</p>

<ol>
  <li>Press <strong>Win + R</strong>, type <code class="language-plaintext highlighter-rouge">cleanmgr</code> and press Enter</li>
  <li>Select your C: drive and click OK</li>
  <li>Click ‚ÄúClean up system files‚Äù</li>
  <li>Select all items, especially ‚ÄúWindows Update Cleanup‚Äù and ‚ÄúPrevious Windows installations‚Äù</li>
  <li>Click OK to reclaim gigabytes of space</li>
</ol>

<h3 id="4-disable-fast-startup-critical-step">4. Disable Fast Startup (Critical Step)<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#4-disable-fast-startup-critical-step">#</a></h3>

<ol>
  <li>Go to <strong>Control Panel</strong> ‚Üí <strong>Power Options</strong> ‚Üí <strong>Choose what the power buttons do</strong></li>
  <li>Click <strong>Change settings that are currently unavailable</strong></li>
  <li>Uncheck <strong>Turn on fast startup</strong></li>
  <li>Click <strong>Save changes</strong></li>
</ol>

<p><img src="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/fast-startup-w11_hu_af321ac91b2cf027.webp" alt="Image 3: Windows Fast Startup disable screen" /></p>

<p><em>Disabling Fast Startup prevents issues when dual-booting</em></p>

<h3 id="5-disable-bitlocker-if-enabled">5. Disable BitLocker (If Enabled)<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#5-disable-bitlocker-if-enabled">#</a></h3>

<p>If you use BitLocker encryption:</p>

<ol>
  <li>Press <strong>Win + X</strong> and select <strong>PowerShell (Admin)</strong> or <strong>Terminal (Admin)</strong></li>
  <li>Type <code class="language-plaintext highlighter-rouge">manage-bde -status</code> to check BitLocker status</li>
  <li>If enabled, type <code class="language-plaintext highlighter-rouge">manage-bde -off C:</code> to decrypt your drive</li>
  <li>Wait for decryption to complete (may take hours)</li>
</ol>

<blockquote>
  <p><strong>Note:</strong> You can re-enable BitLocker after Ubuntu installation, but it requires additional configuration.</p>
</blockquote>

<h3 id="6-create-recovery-drive-recommended">6. Create Recovery Drive (Recommended)<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#6-create-recovery-drive-recommended">#</a></h3>

<ol>
  <li>Search for ‚ÄúCreate a recovery drive‚Äù in Windows Search</li>
  <li>Follow the wizard to create a Windows recovery USB</li>
  <li>Store it safely in case you need to restore Windows</li>
</ol>

<h2 id="part-2-create-ubuntu-installation-media">Part 2: Create Ubuntu Installation Media<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#part-2-create-ubuntu-installation-media">#</a></h2>

<h3 id="1-download-ubuntu-2504">1. Download Ubuntu 25.04<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#1-download-ubuntu-2504">#</a></h3>

<p>Download the Ubuntu 25.04 ISO file from <a href="https://releases.ubuntu.com/plucky/">ubuntu.com/download/desktop</a></p>

<p><img src="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/ubuntu25_hu_862f2c5b5afb6a62.webp" alt="Image 4: Ubuntu download page" /></p>

<p><em>Download the latest Ubuntu 25.04 ISO file</em></p>

<h3 id="2-verify-the-iso-for-extra-security">2. Verify the ISO (For Extra Security)<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#2-verify-the-iso-for-extra-security">#</a></h3>

<ol>
  <li>Download the SHA256SUMS and SHA256SUMS.gpg files from the Ubuntu download page</li>
  <li>
    <p>On Windows, open PowerShell and run:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Get-FileHash -Algorithm SHA256 -Path path\to\ubuntu-25.04-desktop-amd64.iso
</code></pre></div>    </div>
  </li>
  <li>Compare the output hash with the one in the SHA256SUMS file</li>
</ol>

<h3 id="3-create-bootable-usb">3. Create Bootable USB<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#3-create-bootable-usb">#</a></h3>

<h4 id="using-rufus">Using Rufus:<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#using-rufus">#</a></h4>

<ol>
  <li>Download and install <a href="https://rufus.ie/">Rufus</a></li>
  <li>Insert your USB drive</li>
  <li>Open Rufus and select your USB drive</li>
  <li>Click <strong>SELECT</strong> and choose the Ubuntu ISO file</li>
  <li>For UEFI systems: Make sure ‚ÄúGPT‚Äù is selected in the partition scheme</li>
  <li>Click <strong>START</strong> and select <strong>Write in ISO Image mode</strong></li>
</ol>

<p><img src="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/rufus_hu_d0fa41c42e4cd1b0.webp" alt="Image 5: Rufus software creating bootable USB" /></p>

<p><em>Rufus will create a bootable Ubuntu USB drive</em></p>

<h4 id="alternative-using-ventoy-multi-boot-solution">Alternative: Using Ventoy (Multi-Boot Solution)<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#alternative-using-ventoy-multi-boot-solution">#</a></h4>

<ol>
  <li>Download <a href="https://www.ventoy.net/">Ventoy</a></li>
  <li>Install it to your USB drive</li>
  <li>Copy the Ubuntu ISO directly to the USB</li>
  <li>You can add multiple ISOs to create a multi-boot USB</li>
</ol>

<h2 id="part-3-install-ubuntu-alongside-windows">Part 3: Install Ubuntu Alongside Windows<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#part-3-install-ubuntu-alongside-windows">#</a></h2>

<h3 id="1-adjust-uefibios-settings">1. Adjust UEFI/BIOS Settings<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#1-adjust-uefibios-settings">#</a></h3>

<ol>
  <li>Restart your computer</li>
  <li>Enter BIOS/UEFI (usually by pressing F2, F12, Del, or Esc during startup)</li>
  <li>Make these critical changes:
    <ul>
      <li>Disable ‚ÄúSecure Boot‚Äù (temporarily)</li>
      <li>Set ‚ÄúSATA Operation‚Äù to ‚ÄúAHCI‚Äù mode if using SSD</li>
      <li>Disable ‚ÄúIntel Rapid Storage Technology‚Äù if present</li>
      <li>Change boot order to prioritize USB</li>
    </ul>
  </li>
  <li>Save and exit</li>
</ol>

<h3 id="2-boot-from-usb">2. Boot from USB<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#2-boot-from-usb">#</a></h3>

<ol>
  <li>Restart your computer</li>
  <li>Press the boot menu key during startup (F12, F2, or Del - varies by computer)</li>
  <li>Select your USB drive from the boot menu</li>
  <li>On UEFI systems, select the ‚ÄúUEFI‚Äù entry for your USB</li>
</ol>

<h3 id="3-start-ubuntu-installation">3. Start Ubuntu Installation<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#3-start-ubuntu-installation">#</a></h3>

<ol>
  <li>Select <strong>Try or Install Ubuntu</strong></li>
  <li>Choose your language and click <strong>Install Ubuntu</strong></li>
  <li>Select keyboard layout and click <strong>Continue</strong></li>
  <li>For wireless connection, connect to your WiFi network</li>
</ol>

<h3 id="4-choose-optimal-installation-type">4. Choose Optimal Installation Type<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#4-choose-optimal-installation-type">#</a></h3>

<h4 id="for-beginners-automatic-partitioning">For Beginners (Automatic Partitioning):<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#for-beginners-automatic-partitioning">#</a></h4>

<ol>
  <li>Select <strong>Install Ubuntu alongside Windows Boot Manager</strong></li>
  <li>Click <strong>Install Now</strong></li>
</ol>

<h4 id="for-advanced-users-manual-partitioning">For Advanced Users (Manual Partitioning):<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#for-advanced-users-manual-partitioning">#</a></h4>

<ol>
  <li>Select <strong>Something else</strong> for manual partitioning</li>
  <li>Create the following partitions in the unallocated space:
    <ul>
      <li>EFI partition (if not already present): 512 MB, use as ‚ÄúEFI System Partition‚Äù</li>
      <li>Root partition (/): 20-30 GB, use as ‚ÄúExt4‚Äù, mount point ‚Äú/‚Äù</li>
      <li>Swap partition: Equal to your RAM (for hibernation support), use as ‚Äúswap‚Äù</li>
      <li>Home partition (/home): Remaining space, use as ‚ÄúExt4‚Äù, mount point ‚Äú/home‚Äù</li>
    </ul>
  </li>
</ol>

<h3 id="5-confirm-partition-changes">5. Confirm Partition Changes<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#5-confirm-partition-changes">#</a></h3>

<p>Review the changes and click <strong>Continue</strong></p>

<h3 id="6-choose-your-location">6. Choose Your Location<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#6-choose-your-location">#</a></h3>

<p>Select your time zone on the map</p>

<h3 id="7-create-your-user-account">7. Create Your User Account<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#7-create-your-user-account">#</a></h3>

<p>Enter your name, computer name, username, and password</p>

<p><strong>Security Tip:</strong> Use a different password than your Windows account</p>

<h3 id="8-installation-process">8. Installation Process<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#8-installation-process">#</a></h3>

<p>Wait for the installation to complete (usually 10-15 minutes)</p>

<h3 id="9-restart-your-computer">9. Restart Your Computer<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#9-restart-your-computer">#</a></h3>

<p>When prompted, remove the USB drive and click <strong>Restart Now</strong></p>

<h2 id="part-4-post-installation-configuration">Part 4: Post-Installation Configuration<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#part-4-post-installation-configuration">#</a></h2>

<h3 id="1-re-enable-secure-boot-optional">1. Re-enable Secure Boot (Optional)<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#1-re-enable-secure-boot-optional">#</a></h3>

<p>If you want to use Secure Boot with Ubuntu:</p>

<ol>
  <li>Boot into UEFI settings</li>
  <li>Find Secure Boot settings</li>
  <li>Enter ‚ÄúSetup Mode‚Äù if available</li>
  <li>Enable Secure Boot</li>
  <li>Save and exit</li>
</ol>

<p>Ubuntu 25.04 supports Secure Boot, but you may need to manage keys if you encounter boot issues.</p>

<h3 id="2-first-boot-and-updates">2. First Boot and Updates<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#2-first-boot-and-updates">#</a></h3>

<ol>
  <li>At the GRUB menu, select Ubuntu</li>
  <li>Log in with your credentials</li>
  <li>
    <p>Run system updates:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt update &amp;&amp; sudo apt upgrade -y
</code></pre></div>    </div>
  </li>
</ol>

<h3 id="3-install-ubuntu-restricted-extras">3. Install Ubuntu Restricted Extras<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#3-install-ubuntu-restricted-extras">#</a></h3>

<p>For media codecs, fonts, and other proprietary software:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt install ubuntu-restricted-extras
</code></pre></div></div>

<h3 id="4-install-hardware-specific-drivers">4. Install Hardware-Specific Drivers<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#4-install-hardware-specific-drivers">#</a></h3>

<h4 id="for-nvidia-graphics">For NVIDIA Graphics:<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#for-nvidia-graphics">#</a></h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo ubuntu-drivers autoinstall
</code></pre></div></div>

<h4 id="for-amd-graphics">For AMD Graphics:<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#for-amd-graphics">#</a></h4>

<p>The open-source drivers are usually included, but you can install the proprietary ones if needed:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo add-apt-repository ppa:kisak/kisak-mesa
sudo apt update &amp;&amp; sudo apt upgrade
</code></pre></div></div>

<h3 id="5-fix-time-synchronization-issues">5. Fix Time Synchronization Issues<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#5-fix-time-synchronization-issues">#</a></h3>

<p>To prevent time conflicts between Windows and Ubuntu:</p>

<p>In Ubuntu Terminal:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>timedatectl set-local-rtc 1 --adjust-system-clock
</code></pre></div></div>

<h3 id="6-post-installation-script-exclusive-to-this-guide">6. Post-Installation Script (Exclusive to This Guide)<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#6-post-installation-script-exclusive-to-this-guide">#</a></h3>

<p>Save time with our automated setup script that configures:</p>

<ul>
  <li>Optimal power settings</li>
  <li>Improved performance tweaks</li>
  <li>Common software installations</li>
  <li>Proper dual-boot time synchronization</li>
</ul>

<p>Create a file named <code class="language-plaintext highlighter-rouge">dual-boot-setup.sh</code>:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#!/bin/bash

# Update system
sudo apt update &amp;&amp; sudo apt upgrade -y

# Install essential software
sudo apt install -y ubuntu-restricted-extras vlc gimp libreoffice timeshift gnome-tweaks

# Fix time synchronization
timedatectl set-local-rtc 1 --adjust-system-clock

# Optimize SSD if present
if [ -d "/sys/block/nvme0n1" ] || [ -d "/sys/block/sda" ]; then
  sudo apt install -y util-linux
  sudo systemctl enable fstrim.timer
fi

# Improve battery life
sudo apt install -y tlp tlp-rdw
sudo systemctl enable tlp

# Set up auto-cleaning
echo 'APT::Periodic::Update-Package-Lists "1";
APT::Periodic::Download-Upgradeable-Packages "1";
APT::Periodic::AutocleanInterval "7";' | sudo tee /etc/apt/apt.conf.d/20auto-upgrades

# Performance improvements
echo 'vm.swappiness=10' | sudo tee -a /etc/sysctl.conf

# Check and repair GRUB if needed
sudo update-grub

echo "Setup complete! Reboot for changes to take effect."
</code></pre></div></div>

<p>Make it executable and run:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>chmod +x dual-boot-setup.sh
./dual-boot-setup.sh
</code></pre></div></div>

<h2 id="part-5-using-your-dual-boot-system">Part 5: Using Your Dual-Boot System<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#part-5-using-your-dual-boot-system">#</a></h2>

<h3 id="1-the-grub-boot-menu">1. The GRUB Boot Menu<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#1-the-grub-boot-menu">#</a></h3>

<p>After restart, you‚Äôll see the GRUB menu where you can select:</p>

<ul>
  <li>Ubuntu 25.04</li>
  <li>Windows 11</li>
</ul>

<p><img src="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/dual-boot-windows-11-and-ubuntu-create-ubuntu_hu_c604ce75a0d02081.webp" alt="Image 6: Computer with dual boot screen showing Windows 11 and Ubuntu 25.04 logos" /></p>

<p><em>The GRUB boot menu lets you choose which operating system to use</em></p>

<h3 id="2-accessing-windows-files-from-ubuntu">2. Accessing Windows Files from Ubuntu<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#2-accessing-windows-files-from-ubuntu">#</a></h3>

<p>Ubuntu can read your Windows files:</p>

<ol>
  <li>Open <strong>Files</strong> in Ubuntu</li>
  <li>Look for your Windows drive in the sidebar</li>
</ol>

<p><strong>Warning:</strong> Writing to NTFS partitions from Ubuntu may require additional setup:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt install ntfs-3g
</code></pre></div></div>

<h3 id="3-accessing-ubuntu-files-from-windows">3. Accessing Ubuntu Files from Windows<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#3-accessing-ubuntu-files-from-windows">#</a></h3>

<p>To access Linux files from Windows 11:</p>

<ol>
  <li>Install WSL2 in Windows</li>
  <li>Install the WSL Ubuntu extension</li>
  <li>Use <code class="language-plaintext highlighter-rouge">\\wsl$\Ubuntu\home\yourusername</code> in File Explorer</li>
</ol>

<p>Alternatively, install <a href="https://www.paragon-software.com/home/linuxfs-windows/">Paragon Linux File Systems for Windows</a></p>

<h3 id="4-changing-default-operating-system">4. Changing Default Operating System<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#4-changing-default-operating-system">#</a></h3>

<p>To change which system boots by default:</p>

<h4 id="graphical-method">Graphical Method:<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#graphical-method">#</a></h4>

<ol>
  <li>
    <p>Install GRUB Customizer:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt install grub-customizer
</code></pre></div>    </div>
  </li>
  <li>Launch GRUB Customizer</li>
  <li>Go to ‚ÄúGeneral Settings‚Äù tab</li>
  <li>Change ‚ÄúDefault entry‚Äù to your preference</li>
  <li>Click Save</li>
</ol>

<h4 id="terminal-method">Terminal Method:<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#terminal-method">#</a></h4>

<ol>
  <li>In Ubuntu, open Terminal</li>
  <li>Type <code class="language-plaintext highlighter-rouge">sudo nano /etc/default/grub</code></li>
  <li>Change <code class="language-plaintext highlighter-rouge">GRUB_DEFAULT=0</code> to your preference (0 is usually Ubuntu)</li>
  <li>Set <code class="language-plaintext highlighter-rouge">GRUB_TIMEOUT=10</code> for a longer selection time</li>
  <li>Press Ctrl+X, then Y to save</li>
  <li>Run <code class="language-plaintext highlighter-rouge">sudo update-grub</code></li>
</ol>

<h3 id="5-optimizing-performance-in-dual-boot-configuration">5. Optimizing Performance in Dual-Boot Configuration<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#5-optimizing-performance-in-dual-boot-configuration">#</a></h3>

<h4 id="for-windows">For Windows:<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#for-windows">#</a></h4>

<ol>
  <li>Disable indexing on drives shared with Linux</li>
  <li>Use Storage Sense to automatically free up space</li>
  <li>Disable unnecessary startup programs</li>
</ol>

<h4 id="for-ubuntu">For Ubuntu:<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#for-ubuntu">#</a></h4>

<ol>
  <li>
    <p>Reduce swappiness for better performance:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo echo 'vm.swappiness=10' | sudo tee -a /etc/sysctl.conf
</code></pre></div>    </div>
  </li>
  <li>
    <p>Enable zRAM for better memory management:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt install zram-config
</code></pre></div>    </div>
  </li>
</ol>

<h2 id="part-6-advanced-techniques-and-alternatives">Part 6: Advanced Techniques and Alternatives<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#part-6-advanced-techniques-and-alternatives">#</a></h2>

<h3 id="1-using-separate-hard-drives-ideal-setup">1. Using Separate Hard Drives (Ideal Setup)<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#1-using-separate-hard-drives-ideal-setup">#</a></h3>

<p>If your computer supports multiple drives:</p>

<ol>
  <li>Install Windows on first drive</li>
  <li>Install Ubuntu on second drive</li>
  <li>Configure BIOS/UEFI boot order or use boot menu to select OS</li>
</ol>

<p>Benefits:</p>

<ul>
  <li>No partition resizing needed</li>
  <li>Each OS gets a full drive</li>
  <li>Eliminates most dual-boot conflicts</li>
</ul>

<h3 id="2-virtualization-as-alternative">2. Virtualization as Alternative<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#2-virtualization-as-alternative">#</a></h3>

<h4 id="windows-as-host">Windows as Host:<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#windows-as-host">#</a></h4>

<ol>
  <li>Enable virtualization in BIOS/UEFI</li>
  <li>
    <p>Install WSL2 for Linux command-line:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wsl --install
</code></pre></div>    </div>
  </li>
  <li>Or install VirtualBox/VMware for full Ubuntu desktop</li>
</ol>

<h4 id="ubuntu-as-host">Ubuntu as Host:<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#ubuntu-as-host">#</a></h4>

<ol>
  <li>
    <p>Install VirtualBox or GNOME Boxes:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt install virtualbox
</code></pre></div>    </div>
  </li>
  <li>
    <p>Create Windows 11 VM (requires valid license)</p>
  </li>
</ol>

<h3 id="3-timeshift-for-system-backup">3. Timeshift for System Backup<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#3-timeshift-for-system-backup">#</a></h3>

<p>Create system snapshots before major changes:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt install timeshift
sudo timeshift --create --comments "Fresh Ubuntu installation"
</code></pre></div></div>

<h3 id="4-custom-grub-theme-make-your-dual-boot-stylish">4. Custom GRUB Theme (Make Your Dual-Boot Stylish)<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#4-custom-grub-theme-make-your-dual-boot-stylish">#</a></h3>

<ol>
  <li>Download a theme from <a href="https://www.gnome-look.org/browse/cat/109/">GRUB Themes</a></li>
  <li>Extract the theme to <code class="language-plaintext highlighter-rouge">/boot/grub/themes/</code></li>
  <li>
    <p>Edit GRUB configuration:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo nano /etc/default/grub
</code></pre></div>    </div>
  </li>
  <li>Add/modify: <code class="language-plaintext highlighter-rouge">GRUB_THEME="/boot/grub/themes/theme-name/theme.txt"</code></li>
  <li>
    <p>Update GRUB:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo update-grub
</code></pre></div>    </div>
  </li>
</ol>

<h2 id="part-7-real-world-use-cases">Part 7: Real-World Use Cases<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#part-7-real-world-use-cases">#</a></h2>

<h3 id="1-developer-workstation">1. Developer Workstation<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#1-developer-workstation">#</a></h3>

<p>Optimal configuration:</p>

<ul>
  <li>Windows for Adobe Suite, Microsoft Office, and gaming</li>
  <li>Ubuntu for development (Docker, VS Code, programming languages)</li>
  <li>Shared data partition in exFAT format</li>
  <li>Git repositories on the Linux partition</li>
</ul>

<h3 id="2-data-science-setup">2. Data Science Setup<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#2-data-science-setup">#</a></h3>

<ul>
  <li>Windows for Power BI and Excel analysis</li>
  <li>Ubuntu for Python, R, and machine learning frameworks</li>
  <li>Large data storage on separate drive accessible to both OSs</li>
  <li>Jupyter notebooks in shared folder</li>
</ul>

<h3 id="3-gaming-and-multimedia">3. Gaming and Multimedia<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#3-gaming-and-multimedia">#</a></h3>

<ul>
  <li>Windows for AAA gaming titles</li>
  <li>Ubuntu for day-to-day browsing and work</li>
  <li>Steam installed on both systems with shared library folder</li>
  <li>Proton configured for Windows games on Linux</li>
</ul>

<h2 id="part-8-troubleshooting-common-issues">Part 8: Troubleshooting Common Issues<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#part-8-troubleshooting-common-issues">#</a></h2>

<h3 id="windows-not-showing-in-grub-menu">Windows Not Showing in GRUB Menu<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#windows-not-showing-in-grub-menu">#</a></h3>

<p>If Windows doesn‚Äôt appear in the boot menu:</p>

<ol>
  <li>Boot into Ubuntu</li>
  <li>Open Terminal</li>
  <li>Type <code class="language-plaintext highlighter-rouge">sudo os-prober</code></li>
  <li>Then <code class="language-plaintext highlighter-rouge">sudo update-grub</code></li>
</ol>

<h3 id="ubuntu-wont-boot-after-windows-update">Ubuntu Won‚Äôt Boot After Windows Update<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#ubuntu-wont-boot-after-windows-update">#</a></h3>

<p>Windows updates may overwrite GRUB. To fix:</p>

<ol>
  <li>Boot from Ubuntu USB in ‚ÄúTry Ubuntu‚Äù mode</li>
  <li>Open Terminal</li>
  <li>
    <p>Run Boot Repair:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo add-apt-repository ppa:yannubuntu/boot-repair
sudo apt update
sudo apt install boot-repair
boot-repair
</code></pre></div>    </div>
  </li>
  <li>Select ‚ÄúRecommended repair‚Äù</li>
</ol>

<h3 id="fixing-secure-boot-issues">Fixing Secure Boot Issues<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#fixing-secure-boot-issues">#</a></h3>

<p>If Ubuntu won‚Äôt boot with Secure Boot enabled:</p>

<ol>
  <li>Boot into UEFI settings</li>
  <li>Disable Secure Boot temporarily</li>
  <li>Boot into Ubuntu</li>
  <li>
    <p>Run:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt install sbsigntool
sudo update-secureboot-policy
</code></pre></div>    </div>
  </li>
</ol>

<h3 id="recovering-windows-bootloader">Recovering Windows Bootloader<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#recovering-windows-bootloader">#</a></h3>

<p>If you need to restore Windows boot without Ubuntu:</p>

<ol>
  <li>Boot from Windows installation media</li>
  <li>Select ‚ÄúRepair your computer‚Äù</li>
  <li>Go to Troubleshoot &gt; Advanced Options &gt; Command Prompt</li>
  <li>
    <p>Run:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bootrec /fixmbr
bootrec /fixboot
bootrec /rebuildbcd
</code></pre></div>    </div>
  </li>
</ol>

<h2 id="part-9-uninstalling-either-os-if-needed">Part 9: Uninstalling Either OS (If Needed)<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#part-9-uninstalling-either-os-if-needed">#</a></h2>

<h3 id="removing-ubuntu-while-keeping-windows">Removing Ubuntu while keeping Windows:<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#removing-ubuntu-while-keeping-windows">#</a></h3>

<ol>
  <li>Boot into Windows</li>
  <li>Open Disk Management</li>
  <li>Delete the Ubuntu partitions</li>
  <li>Expand Windows partition</li>
  <li>Repair Windows boot using installation media</li>
</ol>

<h3 id="removing-windows-while-keeping-ubuntu">Removing Windows while keeping Ubuntu:<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#removing-windows-while-keeping-ubuntu">#</a></h3>

<ol>
  <li>Boot into Ubuntu</li>
  <li>
    <p>Use GParted to delete Windows partitions:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt install gparted
sudo gparted
</code></pre></div>    </div>
  </li>
  <li>Expand Ubuntu partitions as needed</li>
  <li>
    <p>Update GRUB:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo update-grub
</code></pre></div>    </div>
  </li>
</ol>

<h2 id="conclusion">Conclusion<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#conclusion">#</a></h2>

<p>Congratulations! You now have a dual-boot system with Windows 11 and Ubuntu 25.04. Enjoy the flexibility of choosing between two powerful operating systems depending on your needs.</p>

<p>Remember that Ubuntu offers amazing performance with lower system requirements than Windows, making it perfect for:</p>

<ul>
  <li>Programming</li>
  <li>Web development</li>
  <li>Office work</li>
  <li>Multimedia</li>
  <li>Gaming (with Steam‚Äôs Proton compatibility layer)</li>
</ul>

<p>This dual-boot setup gives you the freedom to use the best tool for each job, while our performance optimizations ensure both systems run at their best.</p>

<h3 id="recommended-next-steps">Recommended Next Steps<a href="https://merox.dev/blog/windows-11-ubuntu-25-04-dual-boot-guide/#recommended-next-steps">#</a></h3>

<ol>
  <li>Set up cloud synchronization across both OSs (Dropbox, OneDrive, etc.)</li>
  <li>Configure SSH keys and development environments in Ubuntu</li>
  <li>Create your ideal productivity workflow between the two systems</li>
  <li>Explore Linux gaming with Proton and Steam</li>
</ol>

<p>If you have any questions, need help with your specific hardware, or want to share your dual-boot experience, leave a comment below!</p>

<hr />]]></content><author><name></name></author><category term="scratchpad" /></entry><entry><title type="html">FileZilla Native Integration to Storj</title><link href="https://ib.bsb.br/filezilla-storj/" rel="alternate" type="text/html" title="FileZilla Native Integration to Storj" /><published>2025-04-29T00:00:00+00:00</published><updated>2025-04-29T12:10:57+00:00</updated><id>https://ib.bsb.br/filezilla-storj</id><content type="html" xml:base="https://ib.bsb.br/filezilla-storj/"><![CDATA[<p>Markdown Content:
This guide walks users through the process of setting up FileZilla to transfer files over Storj.</p>

<p>This is the only integration available for the <strong>free version of Filezilla</strong>. If you wish to use the Hosted Gateway MT you will need the <a href="https://storj.dev/dcs/third-party-tools/filezilla/filezilla-pro">FileZilla Pro Integration</a></p>

<p>The <strong>_ FileZilla_</strong> Client is a fast and reliable cross-platform (Windows, Linux, and Mac OS X) FTP, FTPS, and SFTP client with many useful features and an intuitive graphical user interface.</p>

<p>It includes a site manager to store all your connection details and logins, as well as an Explorer-style interface that shows the local and remote folders and can be customized independently.</p>

<p>With the launch of the native Storj Integration into the FileZilla client, developers can use the client configured to transfer files point-to-point using the decentralized cloud.</p>

<p><a href="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/A3axDH9IIHl-G8gI--gjT_fz.png"><img src="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/A3axDH9IIHl-G8gI--gjT_fz.png" alt="Image 1: Getting Started Guide to Configure Storj with Filezilla" /></a></p>

<p>A Storj access grant is a serialized, self-contained credential that allows users to access a specific bucket, or object, within a Storj project. It encapsulates everything needed for authentication and authorization on the Storj network.</p>

<p>Create Access Grant in the Storj Console:</p>

<ol>
  <li>
    <p>Navigate to <strong>Access Keys</strong> on the left side menu.</p>
  </li>
  <li>
    <p>Click the <strong>New Access Key</strong> button.</p>
  </li>
  <li>
    <p>When the New Access dialog comes up, set specifications according to the following guidelines:</p>

    <ul>
      <li><strong>Name:</strong> The name of the credentials (e.g. my-access-grant)</li>
      <li><strong>Type:</strong> Access Grant</li>
    </ul>
  </li>
  <li>
    <p>Click <strong>Next</strong> to provide permissions, either Full Access or Advanced:</p>

    <ul>
      <li>
        <p><strong>Permissions:</strong> All</p>
      </li>
      <li>
        <p><strong>Buckets:</strong> Feel free to specify the bucket (e.g. my-bucket), or leave as ‚ÄúAll‚Äù</p>
      </li>
      <li>
        <p><strong>End date</strong>: provide an expiration date for these credentials (optional)</p>
      </li>
    </ul>
  </li>
  <li>
    <p>Click <strong>Next</strong> to provide Access encryption Information (Skip this section if you have opted into <a href="https://storj.dev/learn/concepts/encryption-key/storj-vs-user-managed-encryption">Storj-managed passphrases</a> for the project)</p>

    <p>In order to see the data uploaded to your bucket in the web console, you must unlock the bucket with the same encryption passphrase as the credentials.</p>

    <ul>
      <li>
        <p><strong>Use the current passphrase</strong>: this is default option</p>
      </li>
      <li>
        <p><strong>Advanced</strong>: you may provide a different encryption phrase either your own or generate a new one.</p>

        <ul>
          <li>
            <p><strong>Enter a new passphrase</strong>: use this option, if you would like to provide your own new encryption phrase</p>
          </li>
          <li>
            <p><strong>Generate 12-word passphrase</strong>: use this option, if you would like to generate a new encryption phrase</p>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ol>

<p><strong>This passphrase is important!</strong> Encryption keys derived from it are used to encrypt your data at rest, and your data will have to be re-uploaded if you want it to change!</p>

<p>Importantly, if you want two access grants to have access to the same data, <strong>they must use the same passphrase</strong>. You won‚Äôt be able to access your data if the passphrase in your access grant is different than the passphrase you uploaded the data with.</p>

<p>Please note that <strong>Storj does not know or store your encryption passphrase</strong>, so if you lose it, you will not be able to recover your files.</p>

<ol>
  <li>
    <p>Click <strong>Create Access</strong> to finish creation of your Access key.</p>
  </li>
  <li>
    <p>Click <strong>Confirm</strong> the Confirm details pop-up message</p>
  </li>
  <li>
    <p>Your Access Grant is created. Write it down and store it, or click the <strong>Download</strong> button. You will need the Access Grant for the following steps.</p>
  </li>
</ol>

<p>To download the latest release of FileZilla, navigate to <a href="https://filezilla-project.org/download.php?show_all=1">https://filezilla-project.org/download.php?show_all=1</a> and select the version appropriate for your operating system, then install FileZilla.</p>

<h3 id="creating-a-new-site"><a href="https://storj.dev/dcs/third-party-tools/filezilla/filezilla-native#creating-a-new-site">Creating a new Site</a></h3>

<p>Open the Site Manager by clicking on the leftmost icon.</p>

<p><a href="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/ptIx46T-1UVKXUjFN4ogP_filezilla1.png"><img src="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/ptIx46T-1UVKXUjFN4ogP_filezilla1.png" alt="Image 2" /></a></p>

<p>Select the ‚ÄòNew Site‚Äô option</p>

<p><a href="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/R_IRpQKcgfDIUbxsBnW7d_image.png"><img src="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/R_IRpQKcgfDIUbxsBnW7d_image.png" alt="Image 3" /></a></p>

<h3 id="configure-the-satellite-and-access-grant"><a href="https://storj.dev/dcs/third-party-tools/filezilla/filezilla-native#configure-the-satellite-and-access-grant">Configure the Satellite and Access Grant</a></h3>

<p>Next, select Protocol: ‚ÄúStorj - Decentralized Cloud Storage‚Äù from the Protocol dropdown in the ‚ÄúGeneral‚Äù tab.</p>

<p>Now enter the <strong>Satellite</strong> and <strong>Access Grant</strong> as shown below (Entering the port is not required)</p>

<ol>
  <li>
    <p>Use the <strong>Satellite</strong> URL from which you created the Access Grant.</p>
  </li>
  <li>
    <p>For <strong>Access Grant</strong> please enter the Access Grant you saved above.</p>
  </li>
</ol>

<p><a href="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/QfVDo6-BAPCOq85iJqWEJ_image.png"><img src="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/QfVDo6-BAPCOq85iJqWEJ_image.png" alt="Image 4" /></a></p>

<p>After you enter the above information, hit the ‚ÄúConnect‚Äù button, and FileZilla will connect directly to the remote site. You should see a screen showing your local site vs. Storj, like so:</p>

<p><a href="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/LKG7hFgbpmSQUM5Ps8GIh_filezilla2.png"><img src="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/LKG7hFgbpmSQUM5Ps8GIh_filezilla2.png" alt="Image 5" /></a></p>

<h3 id="uploading-a-file"><a href="https://storj.dev/dcs/third-party-tools/filezilla/filezilla-native#uploading-a-file">Uploading a File</a></h3>

<p>To upload a file to your local machine, simply drag it from the local to the remote site (on the decentralized cloud), as shown below:</p>

<p><a href="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/yC9FAbglEVJ3Ps7eL4Eik_filezilla3.gif"><img src="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/yC9FAbglEVJ3Ps7eL4Eik_filezilla3.gif" alt="Image 6" /></a></p>

<h3 id="downloading-a-file"><a href="https://storj.dev/dcs/third-party-tools/filezilla/filezilla-native#downloading-a-file">Downloading a File</a></h3>

<p>To download a file to your local machine, simply drag it from the remote site to the local site, as shown below:</p>

<p><a href="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/TvSrHNg6pSIvsXyeKGm2A_filezilla4.gif"><img src="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/TvSrHNg6pSIvsXyeKGm2A_filezilla4.gif" alt="Image 7" /></a></p>]]></content><author><name></name></author><category term="scratchpad" /></entry><entry><title type="html">Storj integration to ownCloud Infinite Scale (oCIS)</title><link href="https://ib.bsb.br/ocis-storj/" rel="alternate" type="text/html" title="Storj integration to ownCloud Infinite Scale (oCIS)" /><published>2025-04-29T00:00:00+00:00</published><updated>2025-04-29T12:21:52+00:00</updated><id>https://ib.bsb.br/ocis-storj</id><content type="html" xml:base="https://ib.bsb.br/ocis-storj/"><![CDATA[<p>Markdown Content:
oCIS, or ownCloud Infinite Scale, is a cutting-edge technology platform for building cloud-native file sync and share applications. oCIS is designed with modularity, scalability, and extensibility in mind, providing the foundation for reliable, enterprise-ready digital workspaces.</p>

<p>For more information, visit <a href="http://www.owncloud.com/">www.owncloud.com</a></p>

<p>The integration of oCIS and Storj brings an effective solution for handling cloud storage at a competitive cost. oCIS, being a highly extensible platform for file sharing and storage, integrates perfectly with the S3-compatible storage infrastructure of Storj.</p>

<p>With Storj‚Äôs advanced security features, users can be assured that their data managed on oCIS is safe and secure. oCIS also facilitates metadata archiving, making it effortless to handle and access large datasets. Moreover, the capabilities of manual and automatic archiving can further optimize storage costs.</p>

<p>The integration between Storj and oCIS is accomplished through the S3 protocol, enabling oCIS to read and write backup data directly to and from the Storj network. Users can configure oCIS to use Storj as the storage destination for their files.</p>

<p>To integrate oCIS with Storj, you will need:</p>

<ul>
  <li>
    <p>An active Storj account.</p>
  </li>
  <li>
    <p>A bucket designated for oCIS in your Storj account.</p>
  </li>
  <li>
    <p>Storj S3 compatible credentials.</p>
  </li>
  <li>
    <p>An oCIS instance.</p>
  </li>
  <li>
    <p>Access to the oCIS server for configuration and management.</p>
  </li>
</ul>

<p>For more details, visit <a href="https://owncloud.dev/">https://owncloud.dev/</a></p>

<hr />

<p>To begin, you will need to create a Storj account <a href="https://storj.io/signup?partner=owncloud">https://storj.io/signup?partner=owncloud.</a> If you already have an account, go to <a href="https://storj.io/login">https://storj.io/login</a>.</p>

<h3 id="create-a-bucket"><a href="https://storj.dev/dcs/third-party-tools/ocis#create-a-bucket">Create a Bucket</a></h3>

<p>Once you have your Storj account you can create a bucket for your data to be stored in.</p>

<p>1. Navigate to ‚ÄúBuckets‚Äù on the left side menu.</p>

<p>2. Click ‚ÄúNew Bucket‚Äù on the top right.</p>

<p><a href="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/jbnQ38ynnrWl0jnO_j-E5_comet-backup-storj-2.png"><img src="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/jbnQ38ynnrWl0jnO_j-E5_comet-backup-storj-2.png" alt="Image 1" /></a></p>

<p>3. Assign the bucket an easily identifiable name, such as ‚Äúmy-bucket‚Äù.</p>

<p><a href="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/K65vHcrJtRq4S87jICtYx_screenshot-2023-03-09-at-110429-am.png"><img src="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/K65vHcrJtRq4S87jICtYx_screenshot-2023-03-09-at-110429-am.png" alt="Image 2" /></a></p>

<p>4. Click <strong>Create bucket</strong></p>

<h3 id="generate-s3-credentials"><a href="https://storj.dev/dcs/third-party-tools/ocis#generate-s3-credentials">Generate S3 credentials</a></h3>

<p>Storj has an Amazon S3 compatible API and you‚Äôll need generate S3 credentials to use it. S3 credentials consist of an <strong>access key</strong>, <strong>secret key</strong>, and <strong>endpoint</strong>.</p>

<p>Create S3 credentials in the Storj web console:</p>

<p>1. Navigate to <strong>Access</strong> on the left side menu.</p>

<p>2. Click <strong>Create S3 Credentials</strong> under the S3 Credentials block.</p>

<p><a href="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/EZyAl8Wux2GOlyPd70HnI_screenshot-2023-03-09-at-110900-am.png"><img src="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/EZyAl8Wux2GOlyPd70HnI_screenshot-2023-03-09-at-110900-am.png" alt="Image 3" /></a></p>

<p>3. When the Create Access screen comes up, set specifications according to the following guidelines:</p>

<ul>
  <li>
    <p><strong>Type:</strong> S3 Credentials</p>
  </li>
  <li>
    <p><strong>Name:</strong> The name of the credentials (e.g. my-access)</p>
  </li>
</ul>

<p><a href="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/Cv1Lirp-3-OueRk-YAR8u_image.png"><img src="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/Cv1Lirp-3-OueRk-YAR8u_image.png" alt="Image 4" /></a></p>

<p>4. Click <strong>Continue</strong> to provide permissions</p>

<ul>
  <li>
    <p><strong>Permissions:</strong> All</p>
  </li>
  <li>
    <p><strong>Buckets:</strong> Feel free to specify the bucket you created above (e.g. my-bucket), or leave as ‚ÄúAll‚Äù</p>
  </li>
  <li>
    <p><strong>End date</strong>: provide an expiration date for these credentials (optional)</p>
  </li>
</ul>

<p><a href="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/gQ8jBHtvd5sFZFuAqth_h_image.png"><img src="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/gQ8jBHtvd5sFZFuAqth_h_image.png" alt="Image 5" /></a></p>

<p>5. Click <strong>Continue</strong> to provide Access encryption Information</p>

<ul>
  <li>
    <p><strong>Use the current passphrase</strong>: this is default option</p>
  </li>
  <li>
    <p><strong>Advanced</strong>: you may provide a different encryption phrase either your own or generate a new one.</p>

    <ul>
      <li>
        <p><strong>Enter a new passphrase</strong>: use this option, if you would like to provide your own new encryption phrase</p>
      </li>
      <li>
        <p><strong>Generate 12-word passphrase</strong>: use this option, if you would like to generate a new encryption phrase</p>
      </li>
    </ul>
  </li>
</ul>

<p><a href="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/Uxn8zBqXQVmQvsswV3pJ2_image.png"><img src="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/Uxn8zBqXQVmQvsswV3pJ2_image.png" alt="Image 6" /></a></p>

<p>In order to see the data uploaded to your bucket in the web console, you must unlock the bucket with the same encryption passphrase as the credentials.</p>

<p>6. Click <strong>Create Access</strong> to finish creation of your S3 credentials</p>

<p><a href="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/zk2JE9Z6f3vk_R2cjpdqc_image.png"><img src="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/zk2JE9Z6f3vk_R2cjpdqc_image.png" alt="Image 7" /></a></p>

<p>7. Click <strong>Confirm</strong> the Confirm details pop-up message</p>

<p>8. Your S3 credentials are created. Write them down and store them, or click the <strong>Download all</strong> button. You will need these credentials for the following steps.</p>

<p><a href="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/xH5tgzVKXn-uK2hVfSo8e_image.png"><img src="https://link.storjshare.io/raw/jua7rls6hkx5556qfcmhrqed2tfa/docs/images/xH5tgzVKXn-uK2hVfSo8e_image.png" alt="Image 8" /></a></p>

<p>S3NG, or S3-Next Generation, is a storage driver for oCIS, the latest iteration of the ownCloud platform. This technology allows oCIS to interact seamlessly with S3-compatible storage services like Storj.</p>

<p>To set up the environment variables required for oCIS to interact with S3-compatible storage through the S3NG driver, you would need to configure the following settings:</p>

<ol>
  <li>
    <p><strong>STORAGE_USERS_DRIVER=s3ng</strong>: This instructs oCIS to use the S3NG storage driver, enabling compatibility with S3-based storage systems like Storj.</p>
  </li>
  <li>
    <p><strong>STORAGE_SYSTEM_DRIVER=ocis</strong>: This retains system data on oCIS storage, as it‚Äôs currently handling only small files.</p>
  </li>
</ol>

<p>Then, you have to configure the S3NG specific settings:</p>

<ul>
  <li>
    <p><strong>STORAGE_USERS_S3NG_ENDPOINT</strong>: This sets the endpoint that oCIS will connect to, in this case, the Storj gateway.</p>
  </li>
  <li>
    <p><strong>STORAGE_USERS_S3NG_REGION</strong>: This specifies the Storj region, which in this instance is set as ‚Äòglobal‚Äô.</p>
  </li>
  <li>
    <p><strong>STORAGE_USERS_S3NG_ACCESS_KEY</strong>: This sets the access key for the Storj service created above.</p>
  </li>
  <li>
    <p><strong>STORAGE_USERS_S3NG_SECRET_KEY</strong>: This sets the secret key for the Storj service created above. This should be kept secure as it, along with the access key, allows access to your Storj account.</p>
  </li>
  <li>
    <p><strong>STORAGE_USERS_S3NG_BUCKET</strong>: This sets the bucket in the Storj service where oCIS will store its data.</p>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># activate s3ng storage driverSTORAGE_USERS_DRIVER=s3ngSTORAGE_SYSTEM_DRIVER=ocis # keep system data on ocis storage since this are only small files atm# s3ng specific settingsSTORAGE_USERS_S3NG_ENDPOINT=https://gateway.storjshare.ioSTORAGE_USERS_S3NG_REGION=globalSTORAGE_USERS_S3NG_ACCESS_KEY=access_key # REPLACE MESTORAGE_USERS_S3NG_SECRET_KEY=secret_key # REPLACE MESTORAGE_USERS_S3NG_BUCKET=my-bucket # REPLACE ME
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># activate s3ng storage driverSTORAGE_USERS_DRIVER=s3ngSTORAGE_SYSTEM_DRIVER=ocis # keep system data on ocis storage since this are only small files atm# s3ng specific settingsSTORAGE_USERS_S3NG_ENDPOINT=https://gateway.storjshare.ioSTORAGE_USERS_S3NG_REGION=globalSTORAGE_USERS_S3NG_ACCESS_KEY=access_key # REPLACE MESTORAGE_USERS_S3NG_SECRET_KEY=secret_key # REPLACE MESTORAGE_USERS_S3NG_BUCKET=my-bucket # REPLACE ME
</code></pre></div></div>

<p>For more information visit <a href="https://owncloud.dev/services/storage-users/configuration/">https://owncloud.dev/services/storage-users/configuration/</a></p>]]></content><author><name></name></author><category term="scratchpad" /></entry></feed>