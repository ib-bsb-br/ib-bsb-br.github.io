<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://ib.bsb.br/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ib.bsb.br/" rel="alternate" type="text/html" /><updated>2025-02-10T11:40:04+00:00</updated><id>https://ib.bsb.br/feed.xml</id><title type="html">infoBAG</title><entry><title type="html">ANDROID installation guide for raspberry PI 4</title><link href="https://ib.bsb.br/android-installation-guide-for-raspberry-pi-4/" rel="alternate" type="text/html" title="ANDROID installation guide for raspberry PI 4" /><published>2025-02-10T00:00:00+00:00</published><updated>2025-02-10T11:37:58+00:00</updated><id>https://ib.bsb.br/android-installation-guide-for-raspberry-pi-4</id><content type="html" xml:base="https://ib.bsb.br/android-installation-guide-for-raspberry-pi-4/"><![CDATA[<p>────────────────────────────────────────────────────────
SECTION A: QUICK-START SUMMARY FOR BEGINNERS
────────────────────────────────────────────────────────</p>
<ol>
  <li>
    <p>Download Essentials<br />
– Raspberry Pi Imager or Balena Etcher.<br />
– LineageOS 22 build (Android 15) from the KonstaKANG site for your Pi model.<br />
– GApps package (e.g., NikGapps “Core”).</p>
  </li>
  <li>
    <p>Flash the Image<br />
– Launch Raspberry Pi Imager → “Use custom” → select the unzipped .img.<br />
– Insert SD card (≥ 32 GB), confirm the correct storage is selected, and write.</p>
  </li>
  <li>
    <p>First Boot &amp; Setup<br />
– Insert the SD card into your Raspberry Pi.<br />
– Complete the initial welcome wizard (language, time, Wi-Fi).<br />
– If your display is blank/rainbow, see advanced steps below on resolution.txt or config.txt adjustments.</p>
  </li>
  <li>
    <p>Install Google Apps<br />
– Reboot into TWRP recovery: enable “Advanced Restart” in Settings → Developer options, then choose “Recovery.”<br />
– In TWRP: “Mount” → select USB or SD where GApps .zip is located → “Install” → choose the .zip → Swipe to flash.<br />
– Reboot to system, sign in to Play Store.</p>
  </li>
  <li>
    <p>Keep System Updated<br />
– Check if new OTA packages are available from KonstaKANG.<br />
– Reflash GApps or Magisk after each OTA, if necessary.</p>
  </li>
</ol>

<p>────────────────────────────────────────────────────────
SECTION B: DETAILED GUIDE &amp; ADVANCED TOPICS
────────────────────────────────────────────────────────</p>
<ol>
  <li>
    <p>PRE-INSTALLATION PREPARATION<br />
– Hardware Requirements: Pi 4 or Pi 5 recommended, 2 GB+ RAM. A good SD card or USB drive for faster performance.<br />
– Verify your internet connection (Ethernet or Wi-Fi) ahead of time if possible.</p>
  </li>
  <li>
    <p>FLASHING &amp; CONFIGURE BOOT (USB/NVMe)<br />
– If booting from USB or NVMe, open /boot/config.txt after flashing and uncomment the relevant line (#dtoverlay=android-usb).<br />
– Keep the other overlays commented out to avoid conflicts (#dtoverlay=android-sdcard, #dtoverlay=android-nvme) unless you specifically want them.</p>
  </li>
  <li>
    <p>FIRST BOOT ADJUSTMENTS<br />
– Explore “Settings → System → Raspberry Pi settings” for toggles: enabling DSI display over HDMI, IR remote, SSH server, RTC modules, etc.<br />
– Confirm date/time are correct before installing any apps (Google sign-in issues can arise if the time is off).</p>
  </li>
  <li>
    <p>GAPS (GOOGLE APPS) &amp; OTHER FLASHABLES (MAGISK)<br />
– Use TWRP to install GApps by mounting the storage with the .zip, then installing.<br />
– If you want root, install Magisk .zip in the same TWRP session.<br />
– Reboot and ensure Google Play is visible among installed apps.</p>
  </li>
  <li>
    <p>TROUBLESHOOTING &amp; MAINTENANCE<br />
– Display Issues: Edit /boot/resolution.txt or remove it to rely on EDID.<br />
– Audio Output: Switch between HDMI / 3.5 mm in Raspberry Pi settings.<br />
– OTA Updates: Download the new .zip, flash in TWRP again. This preserves /boot folder custom settings and device-specific changes.<br />
– Reinstall or flash GApps or Magisk after an update if you lose them.</p>
  </li>
  <li>
    <p>FURTHER IMPROVEMENTS &amp; CAUTIONS<br />
– Non-Commercial License: The build includes parts under Creative Commons BY-NC-SA 4.0; check the developer’s site for commercial usage details.<br />
– For Pi 3 or older boards, confirm hardware support since advanced features require Pi 4 or later.<br />
– Consider official Raspberry Pi docs for deeper config.txt editing, overlays, or advanced hardware expansions.</p>
  </li>
</ol>]]></content><author><name></name></author><category term="android&gt;hardware&gt;raspberry" /></entry><entry><title type="html">Copilot Agent [batch]</title><link href="https://ib.bsb.br/copilot-agent-batch/" rel="alternate" type="text/html" title="Copilot Agent [batch]" /><published>2025-02-10T00:00:00+00:00</published><updated>2025-02-10T08:16:38+00:00</updated><id>https://ib.bsb.br/copilot-agent-batch</id><content type="html" xml:base="https://ib.bsb.br/copilot-agent-batch/"><![CDATA[<section data-filename="_code-block.txt" data-code="User’s initial description of the task details:
~~~
PLACEHOLDER
~~~
We are performing an AI-driven development workflow with four key steps:
&quot;&quot;&quot;
• STEP 1: Brainstorm → Inquire about task details, remove ambiguity, explore edge cases, and attach references.
• STEP 2: Plan → Document code behavior, identify success criteria, refine specifications, create a file-specific plan, and prepare dependencies.
• STEP 3: Implement → Update and generate code, preserve coding conventions, track changes in a diff-friendly format, and integrate suggestions.
• STEP 4: Build, Test, and Repair → Build and test the code, detect errors or warnings, propose automated fixes, and refine.
&quot;&quot;&quot;
Now, please perform the first key step, as follows:
```
**STEP 1: Brainstorm** 
'''
• Inquire about the user’s initial description of the task  
• Gather and confirm requirements, constraints, and technical context
• Identify assumptions, distant edge cases, and success criteria
• Resolve ambiguities by asking targeted questions
• Help users attach relevant references to the task  
• Incorporate discovered details into the overall specification
'''
The goal here is to eliminate ambiguity and uncover hidden requirements. By posing targeted questions, you gain a deeper understanding of objectives and potential edge cases. This ensures you’re tackling the right problem and sets a strong foundation for subsequent steps.
```
:::
Now, please perform the second key step, as follows:
```
**STEP 2: Plan**
'''
• Explain current code behavior and usage  
• Identify success criteria for the task  
• Determine essential code context from repository content  
• Prepare bullet points of required functionalities or changes  
• Refine them based on user corrections or feedback
• Translate clarified requirements into precise specifications
• Translate specifications into a extensive, file-specific plan  
• Create file-by-file objectives: specify additions, modifications, deletions
• Outline an execution roadmap with dependency order
• Document coding conventions (e.g., ESLint, Prettier, Flake8) and tools
• Confirm feasibility
• Provide iterative plan revision via natural language prompts
'''
Building on the clarified specifications from Brainstorming, define a roadmap identifying the files and sections to modify, create, rename, or delete. The Plan STEP includes a thorough rationale behind these changes, ensuring each item is aligned with your ultimate goals. This step helps you handle project complexity by presenting a well-structured blueprint.
``` 
:::
Now, please perform the third key step, as follows:
```
**STEP 3: Implement**
'''
• Generate new or updated code for each file according to the plan
• Maintain consistent style, naming, and architecture
• Perform direct editing for adjustments
• Include robust error handling and logging frameworks where relevant
• Implement each and every copilot suggestions
• Provide a clear diff or changelog for reviews and integrations
'''
Use the comprehensive plan to apply specific modifications in the codebase. Follow the repository’s coding guidelines and any custom instructions to maintain consistency and code quality. “Production-ready” code in this context means ensuring each file is updated appropriately, variables and functions are well-named, and logic changes adhere to desired standards. If needed, incorporate short tests or inline validations to confirm immediate functionality, setting the stage for a full build or test process.
```
:::
Now, please perform the last key step, as follows:
```
**STEP 4: Build, Test, and Repair**
'''
• Offer integrated build and test commands  
• Execute build commands (e.g., “npm run build”, “docker build”)
• Run unit, integration, and coverage tests (e.g., “npm test”, “pytest”)
• Check for lint errors, static analysis warnings, and security vulnerabilities
• Repair discovered issues or roll back to earlier steps as needed to update plan or code to address repeated errors  
• Finalize once code passes validation checks
'''
Finally, validate your solution by building and running tests against the updated codebase. Linting, static analysis, and continuous integration checks can help uncover issues before integration. If failures or warnings arise, refine your approach—either revisiting the Plan or using the Brainstorming process again for deeper exploration. This cyclical feedback loop ensures a stable, high-quality solution.
```
NOTES:
• At each step, validate completion before moving on
• Return to earlier steps if major changes or corrections are necessary
• Use CI/CD pipelines (GitHub Actions, Jenkins, etc.) to automate testing and deployment
• Emphasize continuous improvement and iterative refinement at every step
• All key steps can be repeated or refined as needed until the task is complete and validated" data-download-link="" data-download-link-label="Download "><code class="language-">User’s initial description of the task details:
~~~
PLACEHOLDER
~~~
We are performing an AI-driven development workflow with four key steps:
"""
• STEP 1: Brainstorm → Inquire about task details, remove ambiguity, explore edge cases, and attach references.
• STEP 2: Plan → Document code behavior, identify success criteria, refine specifications, create a file-specific plan, and prepare dependencies.
• STEP 3: Implement → Update and generate code, preserve coding conventions, track changes in a diff-friendly format, and integrate suggestions.
• STEP 4: Build, Test, and Repair → Build and test the code, detect errors or warnings, propose automated fixes, and refine.
"""
Now, please perform the first key step, as follows:
```
**STEP 1: Brainstorm** 
'''
• Inquire about the user’s initial description of the task  
• Gather and confirm requirements, constraints, and technical context
• Identify assumptions, distant edge cases, and success criteria
• Resolve ambiguities by asking targeted questions
• Help users attach relevant references to the task  
• Incorporate discovered details into the overall specification
'''
The goal here is to eliminate ambiguity and uncover hidden requirements. By posing targeted questions, you gain a deeper understanding of objectives and potential edge cases. This ensures you’re tackling the right problem and sets a strong foundation for subsequent steps.
```
:::
Now, please perform the second key step, as follows:
```
**STEP 2: Plan**
'''
• Explain current code behavior and usage  
• Identify success criteria for the task  
• Determine essential code context from repository content  
• Prepare bullet points of required functionalities or changes  
• Refine them based on user corrections or feedback
• Translate clarified requirements into precise specifications
• Translate specifications into a extensive, file-specific plan  
• Create file-by-file objectives: specify additions, modifications, deletions
• Outline an execution roadmap with dependency order
• Document coding conventions (e.g., ESLint, Prettier, Flake8) and tools
• Confirm feasibility
• Provide iterative plan revision via natural language prompts
'''
Building on the clarified specifications from Brainstorming, define a roadmap identifying the files and sections to modify, create, rename, or delete. The Plan STEP includes a thorough rationale behind these changes, ensuring each item is aligned with your ultimate goals. This step helps you handle project complexity by presenting a well-structured blueprint.
``` 
:::
Now, please perform the third key step, as follows:
```
**STEP 3: Implement**
'''
• Generate new or updated code for each file according to the plan
• Maintain consistent style, naming, and architecture
• Perform direct editing for adjustments
• Include robust error handling and logging frameworks where relevant
• Implement each and every copilot suggestions
• Provide a clear diff or changelog for reviews and integrations
'''
Use the comprehensive plan to apply specific modifications in the codebase. Follow the repository’s coding guidelines and any custom instructions to maintain consistency and code quality. “Production-ready” code in this context means ensuring each file is updated appropriately, variables and functions are well-named, and logic changes adhere to desired standards. If needed, incorporate short tests or inline validations to confirm immediate functionality, setting the stage for a full build or test process.
```
:::
Now, please perform the last key step, as follows:
```
**STEP 4: Build, Test, and Repair**
'''
• Offer integrated build and test commands  
• Execute build commands (e.g., “npm run build”, “docker build”)
• Run unit, integration, and coverage tests (e.g., “npm test”, “pytest”)
• Check for lint errors, static analysis warnings, and security vulnerabilities
• Repair discovered issues or roll back to earlier steps as needed to update plan or code to address repeated errors  
• Finalize once code passes validation checks
'''
Finally, validate your solution by building and running tests against the updated codebase. Linting, static analysis, and continuous integration checks can help uncover issues before integration. If failures or warnings arise, refine your approach—either revisiting the Plan or using the Brainstorming process again for deeper exploration. This cyclical feedback loop ensures a stable, high-quality solution.
```
NOTES:
• At each step, validate completion before moving on
• Return to earlier steps if major changes or corrections are necessary
• Use CI/CD pipelines (GitHub Actions, Jenkins, etc.) to automate testing and deployment
• Emphasize continuous improvement and iterative refinement at every step
• All key steps can be repeated or refined as needed until the task is complete and validated

</code></section>]]></content><author><name></name></author><category term="AI&gt;prompt" /></entry><entry><title type="html">files to prompt (f2p)</title><link href="https://ib.bsb.br/f2p/" rel="alternate" type="text/html" title="files to prompt (f2p)" /><published>2025-02-05T00:00:00+00:00</published><updated>2025-02-07T20:11:47+00:00</updated><id>https://ib.bsb.br/f2p</id><content type="html" xml:base="https://ib.bsb.br/f2p/"><![CDATA[<h2 id="1-installation">1. INSTALLATION</h2>

<h3 id="11-primary-requirements">1.1 Primary Requirements</h3>
<ul>
  <li><strong>click</strong> (command-line interface support)</li>
  <li><strong>Optional modules:</strong>
    <ul>
      <li><strong>rarfile</strong> for <code class="language-plaintext highlighter-rouge">.rar</code> archives</li>
      <li><strong>py7zr</strong> for <code class="language-plaintext highlighter-rouge">.7z</code> archives</li>
      <li><strong>pathspec</strong> for advanced <code class="language-plaintext highlighter-rouge">.gitignore</code> matching</li>
      <li><strong>jinja2</strong> for templated output</li>
    </ul>
  </li>
</ul>

<p>Install everything:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pip <span class="nb">install </span>click rarfile py7zr pathspec jinja2
</code></pre></div></div>
<p>Or install only what you need (for example, omit <code class="language-plaintext highlighter-rouge">rarfile</code> if you don’t require <code class="language-plaintext highlighter-rouge">.rar</code> support).</p>

<h3 id="12-script-file-reference">1.2 Script File Reference</h3>
<p>The provided script is typically named <code class="language-plaintext highlighter-rouge">f2p.py</code>, so you would run:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python f2p.py <span class="o">[</span>OPTIONS] <span class="o">[</span>PATHS...]
</code></pre></div></div>

<hr />

<h2 id="2-basic-usage">2. BASIC USAGE</h2>

<p>Run the script as follows:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python f2p.py <span class="o">[</span>OPTIONS] /some/path /another/path
</code></pre></div></div>
<ul>
  <li>The script recursively scans directories and extracts recognized archives:
    <ul>
      <li><code class="language-plaintext highlighter-rouge">.zip</code>, <code class="language-plaintext highlighter-rouge">.rar</code>, <code class="language-plaintext highlighter-rouge">.7z</code>, <code class="language-plaintext highlighter-rouge">.tar</code>, <code class="language-plaintext highlighter-rouge">.gz</code>, <code class="language-plaintext highlighter-rouge">.bz2</code></li>
      <li>Office Open XML / OpenDocument formats: <code class="language-plaintext highlighter-rouge">.docx</code>, <code class="language-plaintext highlighter-rouge">.xlsx</code>, <code class="language-plaintext highlighter-rouge">.pptx</code>, <code class="language-plaintext highlighter-rouge">.odt</code>, <code class="language-plaintext highlighter-rouge">.ods</code>, <code class="language-plaintext highlighter-rouge">.odp</code></li>
    </ul>
  </li>
</ul>

<p><em>(Legacy formats such as <code class="language-plaintext highlighter-rouge">.doc</code>, <code class="language-plaintext highlighter-rouge">.xls</code>, <code class="language-plaintext highlighter-rouge">.ppt</code> are not treated as archives.)</em></p>

<hr />

<h2 id="3-flags--options">3. FLAGS &amp; OPTIONS</h2>

<table>
  <thead>
    <tr>
      <th>Flag/Option</th>
      <th>Type / Default</th>
      <th>Short</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">--extension</code></td>
      <td>multiple=True / None</td>
      <td><code class="language-plaintext highlighter-rouge">-e</code></td>
      <td>Restricts processing to specific extensions (archives &amp; Office docs).</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">--include-hidden</code></td>
      <td>is_flag=True / False</td>
      <td>n/a</td>
      <td>Considers hidden/dot files and directories.</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">--ignore-gitignore</code></td>
      <td>is_flag=True / False</td>
      <td>n/a</td>
      <td>Ignores <code class="language-plaintext highlighter-rouge">.gitignore</code> rules in directories.</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">--ignore</code></td>
      <td>multiple=True / None</td>
      <td>n/a</td>
      <td>Excludes files matching glob patterns (e.g., <code class="language-plaintext highlighter-rouge">*.log</code>).</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">--output</code></td>
      <td>file path / None</td>
      <td><code class="language-plaintext highlighter-rouge">-o</code></td>
      <td>Writes output to the specified file instead of stdout.</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">--xml</code></td>
      <td>is_flag=True / False</td>
      <td>n/a</td>
      <td>Outputs content in an XML-like structure.</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">--template-file</code></td>
      <td>file path / None</td>
      <td><code class="language-plaintext highlighter-rouge">-t</code></td>
      <td>Uses a Jinja2 template for custom formatting (requires jinja2).</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">--max-depth</code></td>
      <td>int / 5</td>
      <td><code class="language-plaintext highlighter-rouge">-d</code></td>
      <td>Limits recursion depth for nested archives (default: 5).</td>
    </tr>
  </tbody>
</table>

<hr />

<h2 id="4-file--encoding-logic">4. FILE &amp; ENCODING LOGIC</h2>

<ol>
  <li><strong>Multiple Encoding Attempts:</strong>
    <ul>
      <li>Tries <code class="language-plaintext highlighter-rouge">utf-8</code> first, then <code class="language-plaintext highlighter-rouge">latin-1</code>.</li>
      <li>If both fail, the file’s content is omitted (with a warning logged).</li>
    </ul>
  </li>
  <li><strong>Archive &amp; Office Document Extraction:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">.rar</code> extraction requires <code class="language-plaintext highlighter-rouge">rarfile</code>, and <code class="language-plaintext highlighter-rouge">.7z</code> extraction requires <code class="language-plaintext highlighter-rouge">py7zr</code>.</li>
      <li>Office documents (OOXML/ODF) are processed as <code class="language-plaintext highlighter-rouge">.zip</code> archives.</li>
      <li>Extraction is performed safely to prevent path traversal vulnerabilities.</li>
    </ul>
  </li>
</ol>

<hr />

<h2 id="5-ignoring-logic">5. IGNORING LOGIC</h2>

<ol>
  <li><strong>.gitignore / pathspec:</strong>
    <ul>
      <li>When <code class="language-plaintext highlighter-rouge">pathspec</code> is installed, advanced <code class="language-plaintext highlighter-rouge">.gitignore</code> rules apply.</li>
      <li>Otherwise, a simpler fnmatch approach is used.</li>
    </ul>
  </li>
  <li><strong>Hidden Files:</strong>
    <ul>
      <li>Hidden items are skipped by default (unless <code class="language-plaintext highlighter-rouge">--include-hidden</code> is used).</li>
    </ul>
  </li>
  <li><strong>Additional Patterns:</strong>
    <ul>
      <li>Use <code class="language-plaintext highlighter-rouge">--ignore</code> to exclude files (e.g., <code class="language-plaintext highlighter-rouge">--ignore="*.log"</code> or <code class="language-plaintext highlighter-rouge">--ignore="*_backup.*"</code>).</li>
    </ul>
  </li>
</ol>

<hr />

<h2 id="6-output-formats">6. OUTPUT FORMATS</h2>

<ol>
  <li><strong>Plain Text (Default):</strong>
    <ul>
      <li>Prints each file’s path, followed by a separator and the file content.</li>
    </ul>
  </li>
  <li><strong>XML-like (<code class="language-plaintext highlighter-rouge">--xml</code>):</strong>
    <ul>
      <li>Wraps the content within <code class="language-plaintext highlighter-rouge">&lt;section&gt;...&lt;/section&gt;</code> elements.</li>
    </ul>
  </li>
  <li><strong>Jinja2 Templates (<code class="language-plaintext highlighter-rouge">-t</code>/<code class="language-plaintext highlighter-rouge">--template-file</code>):</strong>
    <ul>
      <li>Applies a provided <code class="language-plaintext highlighter-rouge">.j2</code> template to format each file’s content.</li>
    </ul>
  </li>
</ol>

<hr />

<h2 id="7-examples">7. EXAMPLES</h2>

<ol>
  <li><strong>Restrict to <code class="language-plaintext highlighter-rouge">.py</code> &amp; <code class="language-plaintext highlighter-rouge">.md</code> and ignore <code class="language-plaintext highlighter-rouge">*.log</code>:</strong>
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python f2p.py <span class="nt">-e</span> .py <span class="nt">-e</span> .md <span class="nt">--ignore</span><span class="o">=</span><span class="s2">"*.log"</span> /path/to/process
</code></pre></div>    </div>
  </li>
  <li><strong>Process hidden files, disable <code class="language-plaintext highlighter-rouge">.gitignore</code>, and output to a file:</strong>
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python f2p.py <span class="nt">--include-hidden</span> <span class="nt">--ignore-gitignore</span> <span class="nt">-o</span> out.txt /some/path
</code></pre></div>    </div>
  </li>
  <li><strong>Output as XML and limit recursion to 3 levels:</strong>
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python f2p.py <span class="nt">--xml</span> <span class="nt">--max-depth</span><span class="o">=</span>3 /path/to/archives
</code></pre></div>    </div>
  </li>
  <li><strong>Use a Jinja2 template:</strong>
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python f2p.py <span class="nt">--template-file</span><span class="o">=</span>custom_template.j2 /path/to/files
</code></pre></div>    </div>
  </li>
  <li><strong>Process multiple paths:</strong>
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python f2p.py /first/path /second/path
</code></pre></div>    </div>
  </li>
</ol>

<hr />

<h2 id="8-jinja2-examples">8. Jinja2 EXAMPLES</h2>

<p>When invoking:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python f2p.py <span class="nt">-t</span> my_template.j2 <span class="o">[</span>PATHS...]
</code></pre></div></div>
<p>the template receives:</p>
<ul>
  <li>``: the file’s path</li>
  <li>`&lt;h2 id="structure-of-hamster-folder"&gt;Structure of Hamster Folder&lt;/h2&gt;</li>
</ul>

<ul>
  <li><strong>Root Folder: <code class="language-plaintext highlighter-rouge">YOUR NAME</code></strong>: This serves as the central digital hub, housing all system-related documents.</li>
  <li><strong>Main Folders</strong>:
    <ul>
      <li><strong>INBOX</strong>: Functions as a temporary digital intake, holding new and unprocessed documents awaiting categorization and action.</li>
      <li><strong>PROJECTS</strong>: Dedicated to active projects directly linked to current goals, representing ongoing and prioritized endeavors.</li>
      <li><strong>ARCHIVE</strong>: Acts as a repository for completed or inactive projects, often organized into collections for efficient historical access.</li>
      <li><strong>REFERENCE</strong>: Serves as a curated space for general reference materials and resources, distinct from project-specific documentation.</li>
    </ul>
  </li>
</ul>

<h2 id="folder-organization">Folder Organization</h2>

<ul>
  <li><strong>Project Folders <code class="language-plaintext highlighter-rouge">:</code></strong>: Symbolize individual projects aligned with personal goals, residing within <code class="language-plaintext highlighter-rouge">INBOX</code>, <code class="language-plaintext highlighter-rouge">PROJECTS</code>, or <code class="language-plaintext highlighter-rouge">ARCHIVE</code> folders. The prefix (<code class="language-plaintext highlighter-rouge">:</code>) facilitates easy searching and identification, such as <code class="language-plaintext highlighter-rouge">:Website_Redesign</code> or <code class="language-plaintext highlighter-rouge">:Learn_Spanish</code>.</li>
  <li><strong>Storage Folders <code class="language-plaintext highlighter-rouge">-</code></strong>: Designed to contain resources and assets within projects, ensuring that project-related materials are neatly organized. Examples include <code class="language-plaintext highlighter-rouge">-Assets</code>, <code class="language-plaintext highlighter-rouge">-Research</code>, <code class="language-plaintext highlighter-rouge">-Images</code>, <code class="language-plaintext highlighter-rouge">-Documents</code>, and <code class="language-plaintext highlighter-rouge">-Notes</code>.</li>
  <li><strong>Temporary Folders <code class="language-plaintext highlighter-rouge">_</code></strong>: Marked with an underscore to clearly identify transient or provisional items like <code class="language-plaintext highlighter-rouge">_Drafts</code> and <code class="language-plaintext highlighter-rouge">_Temp_Files</code>.</li>
  <li><strong>Archived Versions <code class="language-plaintext highlighter-rouge">+</code></strong>: Prefixed with a plus sign to denote older iterations of files, enabling version history management (e.g., <code class="language-plaintext highlighter-rouge">+Old_Reports</code>, <code class="language-plaintext highlighter-rouge">+Archive</code>, <code class="language-plaintext highlighter-rouge">+OldVersions</code>).</li>
  <li><strong>Private Folders <code class="language-plaintext highlighter-rouge">[ ]</code></strong>: Designated using square brackets to secure personal or sensitive information, ensuring confidentiality (e.g., <code class="language-plaintext highlighter-rouge">[Personal_Notes]</code>).</li>
</ul>

<h2 id="file-naming-conventions">File Naming Conventions</h2>

<ul>
  <li><strong>Templates <code class="language-plaintext highlighter-rouge">$</code></strong>: Template files are easily identifiable with a dollar sign prefix, streamlining template use (e.g., <code class="language-plaintext highlighter-rouge">$Invoice_Template.docx</code>, <code class="language-plaintext highlighter-rouge">$MeetingAgenda.txt</code>).</li>
  <li><strong>Versioning with Dates (CalVer) <code class="language-plaintext highlighter-rouge">+YYYYMMDD</code></strong>: Employs Calendar Versioning (CalVer) by appending modification dates in the <code class="language-plaintext highlighter-rouge">+YYYYMMDD</code> format to filenames, facilitating chronological version tracking (e.g., <code class="language-plaintext highlighter-rouge">Proposal+20231125.docx</code>, <code class="language-plaintext highlighter-rouge">Report+2023-10-27.docx</code>).</li>
</ul>

<h2 id="navigation-tips">Navigation Tips</h2>

<ul>
  <li><strong>Desktop Shortcuts</strong>: Quick access to key folders (<code class="language-plaintext highlighter-rouge">INBOX</code>, <code class="language-plaintext highlighter-rouge">PROJECTS</code>, <code class="language-plaintext highlighter-rouge">ARCHIVE</code>) is facilitated through desktop shortcuts, optimizing daily workflow.</li>
  <li><strong>File Finder Tools</strong>: Efficient file retrieval within the Hamster Folder structure is supported by tools like Listary (Windows) or built-in OS search functions, enhancing navigation speed.</li>
</ul>

<h2 id="practical-tips-for-folder-management">Practical Tips for Folder Management</h2>

<ul>
  <li><strong>Simplify Hierarchy</strong>: A lean, easily navigable structure is maintained by avoiding excessive folder nesting, recommending flat structures like <code class="language-plaintext highlighter-rouge">:Project::Subproject:::Subsubproject</code> over complex hierarchies.</li>
  <li><strong>Consistency</strong>: Uniformity in folder and file naming conventions is crucial for effortless navigation and retrieval, promoting long-term system usability.</li>
</ul>

<h2 id="capturing-inputs">Capturing Inputs</h2>

<ul>
  <li><strong>Primary Tool: One Text File</strong>: A central, plain text file, ideally in Markdown, serves as the core capture tool for notes, ideas, and non-urgent tasks, leveraging Markdown for enhanced organization and readability.</li>
  <li><strong>Secondary Tools: Paper Notebook or Digital Device</strong>: For immediate capture of actionable tasks and on-the-go note-taking, users can opt for a paper notebook or a distraction-minimized digital device like the AlphaSmart 3000, which supports focused input capture.</li>
</ul>

<h2 id="clarifying-and-processing-tasks">Clarifying and Processing Tasks</h2>

<ul>
  <li><strong>Decision Tree Framework</strong>: A structured decision process guides task processing:
    <ol>
      <li><strong>Is it Actionable?</strong>: Determine if the input necessitates action.
        <ul>
          <li><strong>No</strong>: Non-actionable items are either Trashed (irrelevant), Filed as Reference (informational), or Deferred to Someday/Maybe (future consideration).</li>
          <li><strong>Yes</strong>: Actionable items proceed to the next step for further processing.</li>
        </ul>
      </li>
      <li><strong>Does it Have a Specific Deadline?</strong>: Assess if the actionable item has a set deadline.
        <ul>
          <li><strong>Yes</strong>: Deadline-driven tasks are immediately scheduled in the <code class="language-plaintext highlighter-rouge">Calendar</code> section of the text file and added to a calendar application with reminders.</li>
          <li><strong>No</strong>: Tasks without deadlines are evaluated based on Importance and Effort for prioritization.</li>
        </ul>
      </li>
    </ol>
  </li>
</ul>

<h2 id="task-prioritization-framework">Task Prioritization Framework</h2>

<ul>
  <li><strong>Assess Importance and Effort</strong>: Prioritization for deadline-free tasks is determined by <strong>Importance (I)</strong> (rating task criticality to goal achievement) and <strong>Effort (E)</strong> (estimating time and energy for task completion).</li>
</ul>

<h2 id="organizing-tasks">Organizing Tasks</h2>

<ul>
  <li><strong>Contexts and Tags</strong>: Contexts (<code class="language-plaintext highlighter-rouge">@errands</code>, <code class="language-plaintext highlighter-rouge">@handsfree) and tags (</code>#important<code class="language-plaintext highlighter-rouge">, </code>#trivial<code class="language-plaintext highlighter-rouge">, </code>#hard<code class="language-plaintext highlighter-rouge">, </code>#easy`) are assigned to tasks for efficient categorization and execution based on environment and project association.</li>
  <li><strong>Task Entry Format</strong>: Consistency is maintained through a structured task entry format: <code class="language-plaintext highlighter-rouge">[Priority][Context][Projects] Action Verb - Task Description</code>. Example: <code class="language-plaintext highlighter-rouge">[#important#hard][@errands][:Website_Redesign] Draft - Prepare project proposal</code>.</li>
  <li><strong>Digital Task List Structure</strong>: Tasks are organized within the text file into dedicated sections:
    <ul>
      <li><strong>INBOX</strong>: Initial capture point for unprocessed tasks.</li>
      <li><strong>Calendar</strong>: Schedule for tasks with specific deadlines, using date notations.</li>
      <li><strong>Projects</strong>: Group tasks within larger projects for multi-step endeavors.</li>
      <li><strong>Next Actions</strong>: List of immediate, actionable tasks.</li>
      <li><strong>Waiting For</strong>: Tracks tasks pending external input or delegation.</li>
      <li><strong>Someday/Maybe</strong>: Repository for future tasks and ideas.</li>
      <li><strong>Reference</strong>: Storage for non-actionable, supporting information.</li>
    </ul>
  </li>
</ul>

<h2 id="scheduling-and-execution">Scheduling and Execution</h2>

<ul>
  <li><strong>Date Notations</strong>: Precise scheduling and tracking are enabled through date notations within the <code class="language-plaintext highlighter-rouge">Calendar</code> section:
    <ul>
      <li><strong>Scheduled Date</strong>: <code class="language-plaintext highlighter-rouge">[YYYY-MM-DD=HH:MM]</code> for time-specific tasks (e.g., <code class="language-plaintext highlighter-rouge">[2024-11-29=09:00] Doctor Appointment</code>).</li>
      <li><strong>Trigger Date</strong>: <code class="language-plaintext highlighter-rouge">[YYYY-MM-DD &gt;&gt;]</code> for tasks actionable after a set date (e.g., <code class="language-plaintext highlighter-rouge">[2024-10-10 &gt;&gt;] Follow up with client</code>).</li>
      <li><strong>Deadline Date</strong>: <code class="language-plaintext highlighter-rouge">[YYYY-MM-DD &lt;&lt;]</code> for tasks with firm deadlines (e.g., <code class="language-plaintext highlighter-rouge">[2024-10-22 &lt;&lt;] Pay electricity bill</code>).</li>
      <li><strong>Indefinite Date</strong>: <code class="language-plaintext highlighter-rouge">[soon]</code> or <code class="language-plaintext highlighter-rouge">[someday]</code> for tasks lacking specific dates (e.g., <code class="language-plaintext highlighter-rouge">[soon] Call Mom</code>).</li>
    </ul>
  </li>
</ul>

<h2 id="workflow-structure">Workflow Structure</h2>

<ul>
  <li><strong>Daily Routine</strong>:
    <ul>
      <li><strong>Morning</strong>: Start with a review of immediate tasks and scheduled calendar items.</li>
      <li><strong>Throughout the Day</strong>: Continuously capture new tasks and execute based on context and priority.</li>
      <li><strong>Evening</strong>: Conclude by updating completed tasks and planning for the next day.</li>
    </ul>
  </li>
  <li><strong>Weekly Review</strong>: Dedicate time each week to reflect on task and project progress, update priorities, and reorganize task lists for optimal system alignment and efficiency.</li>
</ul>

<h2 id="3-hamster-goals-aligning-actions-with-aspirations">3. Hamster Goals: Aligning Actions with Aspirations</h2>

<p><em>"Transform abstract desires into meaningful actions,"</em> encapsulates Hamster Goals’ purpose—converting aspirations into tangible actions. This component structures goal definition, project breakdown, and task alignment to ensure purposeful daily activities.</p>

<h2 id="defining-smart-goals">Defining SMART Goals</h2>

<ul>
  <li><strong>Personal Reflection</strong>: Initiate goal definition with introspection on core values and aspirations, identifying both qualitative (well-being, creativity) and quantitative (financial, skill-based) objectives.</li>
  <li><strong>SMART Criteria</strong>: Goals are refined using the SMART framework:
    <ul>
      <li><strong>Specific</strong>: Goals are clearly and unambiguously defined.</li>
      <li><strong>Measurable</strong>: Progress toward goals is objectively trackable.</li>
      <li><strong>Achievable</strong>: Goals are realistic and attainable.</li>
      <li><strong>Relevant</strong>: Goals align with personal values and long-term vision.</li>
      <li><strong>Time-bound</strong>: Goals have defined deadlines, fostering focus and urgency.</li>
    </ul>
  </li>
</ul>

<h2 id="breaking-down-goals-into-projects-and-tasks">Breaking Down Goals into Projects and Tasks</h2>

<ul>
  <li><strong>Hierarchical Structure</strong>: Goals are systematically decomposed: <code class="language-plaintext highlighter-rouge">Goal → Project → Task</code>, creating a tiered, actionable framework.</li>
  <li><strong>Identify Projects</strong>: Define projects that directly contribute to each overarching goal.</li>
  <li><strong>Develop Actionable Tasks</strong>: Break down each project into a series of actionable, manageable tasks.</li>
  <li><strong>Example</strong>:
    <ul>
      <li><strong>Goal</strong>: Improve Physical Health.</li>
      <li><strong>Project</strong>: #EstablishExerciseRoutine.</li>
      <li><strong>Tasks</strong>: Research local gyms, sign up for gym membership, schedule workouts, set fitness milestones.</li>
    </ul>
  </li>
</ul>

<h2 id="linking-tasks-to-personal-values">Linking Tasks to Personal Values</h2>

<ul>
  <li><strong>Alignment</strong>: Ensure each task’s contribution to personal goals and values is clearly understood, reinforcing the ‘why’ behind each action.</li>
  <li><strong>Motivation</strong>: Value alignment serves as a continuous source of motivation, enhancing prioritization and commitment.</li>
  <li><strong>Example</strong>:
    <ul>
      <li><strong>Task</strong>: Volunteer at local animal shelter.</li>
      <li><strong>Goal</strong>: Give back to the community.</li>
      <li><strong>Value</strong>: Compassion, Social Responsibility.</li>
    </ul>
  </li>
</ul>

<h2 id="regular-review-and-adjustment">Regular Review and Adjustment</h2>

<ul>
  <li><strong>Periodic Review</strong>: Goals, projects, and tasks are regularly reviewed to ensure ongoing alignment with values and aspirations.</li>
  <li><strong>Adaptation</strong>: Plans are adjusted based on progress and evolving circumstances, maintaining system relevance and user motivation.</li>
</ul>

<h2 id="4-hamster-budget-simplifying-financial-management">4. Hamster Budget: Simplifying Financial Management</h2>

<p><em>"You may not need a detailed personal budget,"</em> underscores Hamster Budget’s minimalist approach, prioritizing net worth tracking over granular expense management. This component offers a simplified yet effective method for overseeing personal finances.</p>

<h2 id="net-worth-focus">Net Worth Focus</h2>

<ul>
  <li><strong>Objective</strong>: Financial health is monitored through net worth tracking, offering a streamlined alternative to detailed expense budgeting and providing a clear financial overview.</li>
</ul>

<h2 id="creating-and-updating-the-net-worth-spreadsheet">Creating and Updating the Net Worth Spreadsheet</h2>

<ul>
  <li><strong>List Assets</strong>: Enumerate all assets, including cash, savings, investments, property, and valuables, for a comprehensive asset overview.</li>
  <li><strong>List Liabilities</strong>: Document all liabilities, such as debts, loans, mortgages, and credit card balances, providing a clear picture of financial obligations.</li>
  <li><strong>Calculate Net Worth</strong>: Determine net worth using the formula: <code class="language-plaintext highlighter-rouge">Net Worth = Total Assets - Total Liabilities</code>, offering a snapshot of overall financial standing.</li>
  <li><strong>Regular Updates</strong>: Schedule periodic updates to the net worth spreadsheet—monthly or quarterly—to monitor financial trends and inform strategic financial decisions.</li>
</ul>

<h2 id="managing-financial-risks">Managing Financial Risks</h2>

<ul>
  <li><strong>Identify Financial Leaks</strong>: Analyze spending patterns to pinpoint areas of potential overspending or inefficient resource allocation, enabling targeted financial adjustments.</li>
  <li><strong>Adjust Spending</strong>: Make informed adjustments to spending and savings strategies based on net worth assessments and financial goals, promoting proactive financial management.</li>
</ul>

<h2 id="flexible-tracking">Flexible Tracking</h2>

<ul>
  <li><strong>Review Schedule</strong>: Begin with monthly reviews to establish a financial baseline, adjusting to less frequent quarterly or semi-annual reviews as comfort increases.</li>
  <li><strong>Minimal Time Investment</strong>: Regular net worth reviews require minimal time, offering significant financial insight without the demands of detailed, continuous budgeting.</li>
</ul>

<h2 id="example-net-worth-calculation">Example Net Worth Calculation</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Assets:
- Savings Account: $5,000
- Investment Portfolio: $15,000
- Car Market Value: $8,000
- Home Equity: $50,000
Total Assets: $78,000

Liabilities:
- Car Loan Balance: $2,000
- Mortgage Balance: $150,000
- Credit Card Debt: $3,000
Total Liabilities: $155,000

Net Worth: $78,000 - $155,000 = -$77,000
</code></pre></div></div>

<ul>
  <li><strong>Interpretation</strong>: A negative net worth, as exemplified, signals that liabilities exceed assets, indicating a need to prioritize debt reduction and enhance savings strategies for improved financial stability.</li>
</ul>

<h2 id="5-optional-alphasmart-3000-integration-for-focused-work">5. Optional: AlphaSmart 3000 Integration for Focused Work</h2>

<p>For users seeking a distraction-minimized environment for writing and task management, the AlphaSmart 3000 seamlessly integrates with the Hamster System, particularly enhancing Hamster Flow. Its portable, distraction-free nature and long battery life, coupled with a straightforward interface, make it an ideal tool for focused productivity, while its limited storage capacity encourages efficient and concise task management.</p>

<h2 id="alphasmart-3000-file-allocation">AlphaSmart 3000 File Allocation</h2>

<ul>
  <li><strong>File 1: INBOX</strong>: Dedicated to rapid capture of new inputs, this file is intended for daily clearing. Format: <code class="language-plaintext highlighter-rouge">+ [raw input]</code>.</li>
  <li><strong>File 2: NEXT</strong>: Reserved for active tasks demanding immediate attention. Format: <code class="language-plaintext highlighter-rouge">@ ctx:task</code> (e.g., <code class="language-plaintext highlighter-rouge">@ w:call jim</code>).</li>
  <li><strong>File 3: PROJ</strong>: Allocated to active projects, outlining next actions for each. Format: <code class="language-plaintext highlighter-rouge"># proj &gt; next-action</code> (e.g., <code class="language-plaintext highlighter-rouge"># report &gt; draft p1</code>).</li>
  <li><strong>File 4: WAIT</strong>: Used to track delegated or pending items awaiting external input. Format: <code class="language-plaintext highlighter-rouge">= who:what:when</code> (e.g., <code class="language-plaintext highlighter-rouge">= jim:data:12/31</code>).</li>
  <li><strong>File 5: REF-A</strong>: Serves as a repository for reference material, alphabetically indexed from A-M. Format: <code class="language-plaintext highlighter-rouge">&amp; topic:detail</code> (e.g., <code class="language-plaintext highlighter-rouge">&amp; login:admin1</code>).</li>
  <li><strong>File 6: REF-B</strong>: Complements REF-A, storing reference material indexed from N-Z.</li>
  <li><strong>File 7: MAYBE</strong>: Functions as a parking lot for future possibilities and project ideas. Format: <code class="language-plaintext highlighter-rouge">? area:idea</code> (e.g., <code class="language-plaintext highlighter-rouge">? work:cert</code>).</li>
  <li><strong>File 8: CAL</strong>: Specifically for calendar items, transferred from the main text file during weekly reviews, ensuring scheduled tasks are readily accessible. Format: <code class="language-plaintext highlighter-rouge">[date] task</code>.</li>
</ul>

<h2 id="space-optimized-task-format">Space-Optimized Task Format</h2>

<ul>
  <li><strong>Standard Prefixes</strong>: Single-character prefixes are used to maximize space and clarity: <code class="language-plaintext highlighter-rouge">+</code>, <code class="language-plaintext highlighter-rouge">@</code>, <code class="language-plaintext highlighter-rouge">#</code>, <code class="language-plaintext highlighter-rouge">=</code>, <code class="language-plaintext highlighter-rouge">&amp;</code>, <code class="language-plaintext highlighter-rouge">?</code>, <code class="language-plaintext highlighter-rouge">✓</code>, <code class="language-plaintext highlighter-rouge">[</code>.</li>
  <li><strong>Context Abbreviations</strong>: Contexts are abbreviated to conserve character space: <code class="language-plaintext highlighter-rouge">w:</code> (Work), <code class="language-plaintext highlighter-rouge">h:</code> (Home), <code class="language-plaintext highlighter-rouge">e:</code> (Errands), <code class="language-plaintext highlighter-rouge">c:</code> (Calls), <code class="language-plaintext highlighter-rouge">p:</code> (Personal).</li>
  <li><strong>Common Action Verbs</strong>: Frequently used action verbs are shortened to single letters: <code class="language-plaintext highlighter-rouge">c</code> (Call), <code class="language-plaintext highlighter-rouge">e</code> (Email), <code class="language-plaintext highlighter-rouge">r</code> (Review), <code class="language-plaintext highlighter-rouge">w</code> (Write), <code class="language-plaintext highlighter-rouge">b</code> (Buy).</li>
</ul>

<h2 id="example-task-entries-alphasmart-3000">Example Task Entries (AlphaSmart 3000)</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Prefix</th>
      <th style="text-align: left">Context</th>
      <th style="text-align: left">Action</th>
      <th style="text-align: left">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">+</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">Call Mike about the report</td>
    </tr>
    <tr>
      <td style="text-align: left">@</td>
      <td style="text-align: left">w:</td>
      <td style="text-align: left">c</td>
      <td style="text-align: left">John re: quarterly report</td>
    </tr>
    <tr>
      <td style="text-align: left">#</td>
      <td style="text-align: left">Blog</td>
      <td style="text-align: left">w</td>
      <td style="text-align: left">Write the first draft</td>
    </tr>
    <tr>
      <td style="text-align: left">=</td>
      <td style="text-align: left">Alice</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">Review contract by [2024-11-05]</td>
    </tr>
    <tr>
      <td style="text-align: left">?</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">Start learning guitar</td>
    </tr>
  </tbody>
</table>

<h2 id="task-management-protocol">Task Management Protocol</h2>

<ul>
  <li><strong>Capture</strong>: Employ the <code class="language-plaintext highlighter-rouge">INBOX</code> file for quick, on-the-fly task capture.</li>
  <li><strong>Clarify &amp; Organize</strong>: Daily processing of the <code class="language-plaintext highlighter-rouge">INBOX</code> file involves task clarification and organization into appropriate files.</li>
  <li><strong>Engage</strong>: Work directly from the <code class="language-plaintext highlighter-rouge">NEXT</code> and <code class="language-plaintext highlighter-rouge">PROJ</code> files to execute prioritized tasks.</li>
  <li><strong>Review</strong>: Implement daily, weekly, and monthly reviews to maintain system efficacy and organization.
    <ul>
      <li><strong>Daily</strong>: Process <code class="language-plaintext highlighter-rouge">INBOX</code>, update <code class="language-plaintext highlighter-rouge">NEXT</code>, and mark completed tasks in <code class="language-plaintext highlighter-rouge">CAL</code>.</li>
      <li><strong>Weekly</strong>: Review all files, update projects and deadlines, and move completed tasks from <code class="language-plaintext highlighter-rouge">CAL</code> to <code class="language-plaintext highlighter-rouge">ARCH</code> as needed.</li>
      <li><strong>Monthly</strong>: Archive completed tasks, review <code class="language-plaintext highlighter-rouge">MAYBE</code> items, and consolidate <code class="language-plaintext highlighter-rouge">REF</code> files to optimize storage.</li>
    </ul>
  </li>
</ul>

<h2 id="space-management-guidelines">Space Management Guidelines</h2>

<ul>
  <li><strong>Character Conservation</strong>: Maximize storage by using abbreviations, omitting articles, minimizing punctuation, and ensuring brief task descriptions.</li>
  <li><strong>Priority Marking</strong>: Task priority is efficiently indicated using <code class="language-plaintext highlighter-rouge">!</code> for high, no mark for normal, and <code class="language-plaintext highlighter-rouge">~</code> for low priority.</li>
</ul>

<h2 id="benefits-of-the-hamster-system">Benefits of the Hamster System</h2>

<p>The Hamster System delivers a range of benefits designed to enhance productivity and well-being:</p>

<ol>
  <li><strong>Simplicity and Sustainability</strong>: Its minimalist design and reliance on basic tools ensure ease of use and long-term adherence.</li>
  <li><strong>Flexibility and Adaptability</strong>: The system is highly customizable, accommodating individual preferences and tool integrations.</li>
  <li><strong>Enhanced Focus</strong>: By streamlining information and tasks, it minimizes overwhelm and sharpens concentration.</li>
  <li><strong>Alignment with Personal Goals</strong>: It ensures daily actions contribute directly to meaningful personal and professional objectives.</li>
  <li><strong>Financial Clarity</strong>: Simplified financial tracking through net worth monitoring offers a clear, uncluttered view of financial health.</li>
  <li><strong>Predictable Structure</strong>: Consistent organizational and naming conventions facilitate efficient document and task management.</li>
  <li><strong>Workflow Efficiency</strong>: Streamlined capture, processing, and prioritization of tasks enhance overall workflow efficiency.</li>
  <li><strong>Financial Empowerment</strong>: Simplified financial oversight empowers better financial decision-making and reduces financial stress.</li>
</ol>

<h2 id="addressing-potential-challenges">Addressing Potential Challenges</h2>

<ul>
  <li><strong>No Specialized Apps</strong>: While some may perceive the absence of specialized apps as a limitation, it deliberately enhances system flexibility and platform independence, allowing users to integrate preferred tools as needed.</li>
  <li><strong>Discipline and Maintenance</strong>: Effective implementation requires establishing consistent routines for capture, processing, and review. Gradual adoption and habit development are recommended for overcoming this challenge.</li>
  <li><strong>Initial Adjustment Period</strong>: Transitioning to any new system necessitates a learning curve. Starting with one component at a time and gradually integrating others can ease the initial adjustment.</li>
</ul>

<h2 id="continuous-improvement-and-adaptability">Continuous Improvement and Adaptability</h2>

<p>The Hamster System is not static but designed for continuous evolution and user adaptation.</p>

<ul>
  <li><strong>System Evolution</strong>: The system is refined based on user feedback and practical experience, encouraging users to adjust elements for optimal personal effectiveness.</li>
  <li><strong>User Adaptation</strong>: Users are empowered to modify and tailor the system to their unique workflows and preferences, integrating new methodologies and tools as needed to personalize their productivity framework.</li>
</ul>

<h2 id="additional-resources-and-references">Additional Resources and References</h2>

<p>The Hamster System is informed by and complements several established methodologies and tools:</p>

<ul>
  <li><strong>Productivity Methodologies</strong>:
    <ul>
      <li><strong>Getting Things Done (GTD)</strong>: For a comprehensive approach to task management.</li>
      <li><strong>Bullet Journal</strong>: For analog task and event tracking.</li>
      <li><strong>Todo.txt</strong>: For simple, text-based task management.</li>
      <li><strong>One Big Text File (OBTF)</strong>: For minimalist note-taking and task management.</li>
    </ul>
  </li>
  <li><strong>Technical Terms</strong>:
    <ul>
      <li><strong>Markdown</strong>: For lightweight text formatting in plain text files.</li>
      <li><strong>Calendar Versioning (CalVer)</strong>: For date-based file version control.</li>
    </ul>
  </li>
  <li><strong>Recommended Tools</strong>:
    <ul>
      <li><strong>Listary</strong>: For enhanced file searching and application launching on Windows.</li>
      <li><strong>Bulk Rename Utility</strong>: For efficient batch file renaming.</li>
      <li><strong>AlphaSmart 3000</strong>: For distraction-free writing and task management.</li>
    </ul>
  </li>
</ul>

<h2 id="conclusion">Conclusion</h2>

<p>The Enhanced Hamster System provides a robust yet minimalist framework for managing digital life, workflows, finances, and goals. By prioritizing simplicity, adaptability, and continuous improvement, it offers a pathway to enhanced productivity, reduced stress, and greater alignment with personal and professional aspirations. Its integration of advanced task management techniques and optional tools like the AlphaSmart 3000 ensures practicality and depth, catering to diverse user needs and preferences.</p>

<h2 id="license">License</h2>

<p>The Hamster System is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License by Enio Ferreira, promoting its free use, adaptation, and sharing for non-commercial purposes.</p>
<p>`: the file’s text content</p>
<ul>
  <li>``: a numeric counter for labeling</li>
</ul>

<h3 id="example-templates">Example Templates</h3>

<ol>
  <li><strong>Minimal Example: Plain-Text Highlight</strong><br />
<em>File: minimal_example.j2</em>
    <div class="language-jinja highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   
File #<span class="cp">{{</span> <span class="nv">index</span> <span class="cp">}}</span>: <span class="cp">{{</span> <span class="nv">path</span> <span class="cp">}}</span>
----------------------------
<span class="cp">{{</span> <span class="nv">content</span> <span class="cp">}}</span>
----------------------------
   
</code></pre></div>    </div>
    <p><em>Rationale:</em> Displays the file path and content with a simple separator.</p>
  </li>
  <li><strong>Numbered Lines Use Case</strong><br />
<em>File: numbered_lines.j2</em>
    <div class="language-jinja highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   
File: <span class="cp">{{</span> <span class="nv">path</span> <span class="cp">}}</span> (Index: <span class="cp">{{</span> <span class="nv">index</span> <span class="cp">}}</span>)
======================================
<span class="cp">{%</span> <span class="k">set</span> <span class="nv">lines</span> <span class="o">=</span> <span class="nv">content.split</span><span class="p">(</span><span class="s1">'\n'</span><span class="p">)</span> <span class="cp">%}</span>
<span class="cp">{%</span> <span class="k">for</span> <span class="nv">loop_index</span><span class="p">,</span> <span class="nv">line</span> <span class="ow">in</span> <span class="nv">lines</span> <span class="o">| </span><span class="nf">enumerate</span><span class="p">(</span><span class="nv">start</span><span class="o">=</span><span class="nv">1</span><span class="p">)</span> <span class="cp">%}</span>
<span class="cp">{{</span> <span class="nv">loop_index</span> <span class="cp">}}</span>: <span class="cp">{{</span> <span class="nv">line</span> <span class="cp">}}</span>
<span class="cp">{%</span> <span class="k">endfor</span> <span class="cp">%}</span>
======================================
   
</code></pre></div>    </div>
    <p><em>Rationale:</em> Enumerates each line, useful for line-by-line reference.</p>
  </li>
  <li><strong>HTML Output for Browser Rendering</strong><br />
<em>File: html_output.j2</em>
    <div class="language-jinja highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   
<span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;title&gt;</span>File <span class="cp">{{</span> <span class="nv">index</span> <span class="cp">}}</span><span class="nt">&lt;/title&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;h2&gt;</span>File Path: <span class="cp">{{</span> <span class="nv">path</span> <span class="cp">}}</span><span class="nt">&lt;/h2&gt;</span>
    <span class="nt">&lt;p&gt;&lt;strong&gt;</span>Index:<span class="nt">&lt;/strong&gt;</span> <span class="cp">{{</span> <span class="nv">index</span> <span class="cp">}}</span><span class="nt">&lt;/p&gt;</span>
    <span class="nt">&lt;hr</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;pre&gt;</span>
<span class="cp">{{</span> <span class="nv">content</span> <span class="cp">}}</span>
    <span class="nt">&lt;/pre&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
   
</code></pre></div>    </div>
    <p><em>Rationale:</em> Formats the file content into a simple HTML page.</p>
  </li>
  <li><strong>Markdown Code Snippet</strong><br />
<em>File: markdown_snippet.j2</em>
    <div class="language-jinja highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   
<span class="c">### File #{{ index }}: {{ path }}</span>
   
</code></pre></div>    </div>
    <p>{{ content }}</p>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   
</code></pre></div>    </div>
    <p><em>Rationale:</em> Ideal for embedding code or text in a Markdown document.</p>
  </li>
  <li><strong>Summarized Headings Template</strong><br />
<em>File: summarized_headings.j2</em>
    <div class="language-jinja highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   
["FILE #<span class="cp">{{</span> <span class="nv">index</span> <span class="cp">}}</span>"] <span class="cp">{{</span> <span class="nv">path</span> <span class="cp">}}</span>
---------------------------------
<span class="cp">{%</span> <span class="k">set</span> <span class="nv">first_lines</span> <span class="o">=</span> <span class="nv">content.split</span><span class="p">(</span><span class="s1">'\n'</span><span class="p">)[</span><span class="err">:</span><span class="nv">3</span><span class="p">]</span> <span class="cp">%}</span>
<span class="cp">{%</span> <span class="k">for</span> <span class="nv">line</span> <span class="ow">in</span> <span class="nv">first_lines</span> <span class="cp">%}</span>
<span class="cp">{{</span> <span class="nv">line</span> <span class="cp">}}</span>
<span class="cp">{%</span> <span class="k">endfor</span> <span class="cp">%}</span>
---------------------------------
(... Content Truncated ...)
   
</code></pre></div>    </div>
    <p><em>Rationale:</em> Shows only the first few lines to save space.</p>
  </li>
  <li><strong>JSON-Inspired Output Template</strong><br />
<em>File: json_inspired.j2</em>
    <div class="language-jinja highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   
{
  "index": <span class="cp">{{</span> <span class="nv">index</span> <span class="cp">}}</span>,
  "path": "<span class="cp">{{</span> <span class="nv">path</span> <span class="o">| </span><span class="nf">replace</span><span class="p">(</span><span class="s1">'\\'</span><span class="p">,</span> <span class="s1">'\\\\'</span><span class="p">)</span> <span class="cp">}}</span>",
  "content_lines": [
<span class="cp">{%</span> <span class="k">set</span> <span class="nv">lines</span> <span class="o">=</span> <span class="nv">content.split</span><span class="p">(</span><span class="s1">'\n'</span><span class="p">)</span> <span class="cp">%}</span>
<span class="cp">{%</span> <span class="k">for</span> <span class="nv">line</span> <span class="ow">in</span> <span class="nv">lines</span> <span class="cp">%}</span>
    "<span class="cp">{{</span> <span class="nv">line</span> <span class="o">| </span><span class="nf">replace</span><span class="p">(</span><span class="s1">'"'</span><span class="p">,</span><span class="s1">'\\"'</span><span class="p">)</span> <span class="cp">}}</span>"<span class="cp">{{</span> <span class="s2">","</span> <span class="nv">if</span> <span class="nv">not</span> <span class="nv">loop.last</span> <span class="nv">else</span> <span class="s2">""</span> <span class="cp">}}</span>
<span class="cp">{%</span> <span class="k">endfor</span> <span class="cp">%}</span>
  ]
}
   
</code></pre></div>    </div>
    <p><em>Rationale:</em> Outputs the file data in a JSON-like structure.</p>
  </li>
  <li><strong>Columnar Key-Value Template</strong><br />
<em>File: columnar_kv.j2</em>
    <div class="language-jinja highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   
===============
File #<span class="cp">{{</span> <span class="nv">index</span> <span class="cp">}}</span>
===============
Path: <span class="cp">{{</span> <span class="nv">path</span> <span class="cp">}}</span>
---------------
<span class="cp">{%</span> <span class="k">for</span> <span class="nv">key</span><span class="p">,</span> <span class="nv">val</span> <span class="ow">in</span> <span class="err">{</span>
   <span class="s1">'Characters'</span><span class="err">:</span> <span class="nv">content</span><span class="o">|</span><span class="nf">length</span><span class="p">,</span>
   <span class="s1">'Lines'</span><span class="err">:</span> <span class="nv">content.split</span><span class="p">(</span><span class="s1">'\n'</span><span class="p">)</span><span class="o">|</span><span class="nf">length</span><span class="p">,</span>
   <span class="s1">'First Line'</span><span class="err">:</span> <span class="nv">content.split</span><span class="p">(</span><span class="s1">'\n'</span><span class="p">)[</span><span class="nv">0</span><span class="p">]</span> <span class="k">if</span> <span class="nv">content</span> <span class="k">else</span> <span class="s1">''</span>
<span class="err">}.</span><span class="nv">items</span><span class="p">()</span> <span class="cp">%}</span>
<span class="cp">{{</span> <span class="nv">key</span> <span class="cp">}}</span>: <span class="cp">{{</span> <span class="nv">val</span> <span class="cp">}}</span>
<span class="cp">{%</span> <span class="k">endfor</span> <span class="cp">%}</span>
---------------
<span class="cp">{{</span> <span class="nv">content</span> <span class="cp">}}</span>
   
</code></pre></div>    </div>
    <p><em>Rationale:</em> Displays statistics followed by the file content.</p>
  </li>
  <li><strong>Interactive-Like Script Template</strong><br />
<em>File: interactive_prompt.j2</em>
    <div class="language-jinja highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   
=== File #<span class="cp">{{</span> <span class="nv">index</span> <span class="cp">}}</span> ===
LOAD FILE: <span class="cp">{{</span> <span class="nv">path</span> <span class="cp">}}</span>
   
RUN COMMANDS:
1) SomeProcess --file "<span class="cp">{{</span> <span class="nv">path</span> <span class="cp">}}</span>"
2) AnotherProcess --analyze "<span class="cp">{{</span> <span class="nv">path</span> <span class="cp">}}</span>"
3) (Optional) Check content below:
   
<span class="cp">{{</span> <span class="nv">content</span> <span class="cp">}}</span>
=================
   
</code></pre></div>    </div>
    <p><em>Rationale:</em> Provides a stylized “script” output with follow-up commands.</p>
  </li>
  <li><strong>Task-List / To-Do Style Template</strong><br />
<em>File: task_list.j2</em>
    <div class="language-jinja highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   
<span class="c">## File #{{ index }}: {{ path }}</span>
   
- [ ] Review lines for errors
- [ ] Extract useful references
- [ ] Create summary
- [ ] Mark for final review
   
Content:
<span class="cp">{{</span> <span class="nv">content</span> <span class="cp">}}</span>
   
</code></pre></div>    </div>
    <p><em>Rationale:</em> Produces a checklist along with the file content.</p>
  </li>
  <li><strong>Blockquote Slicer Template</strong><br />
<em>File: blockquote_slicer.j2</em>
    <div class="language-jinja highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    
&gt; **File #<span class="cp">{{</span> <span class="nv">index</span> <span class="cp">}}</span>**: <span class="cp">{{</span> <span class="nv">path</span> <span class="cp">}}</span>
<span class="cp">{%</span> <span class="k">for</span> <span class="nv">i</span><span class="p">,</span> <span class="nv">line</span> <span class="ow">in</span> <span class="nv">content.split</span><span class="p">(</span><span class="s1">'\n'</span><span class="p">)</span> <span class="o">| </span><span class="nf">enumerate</span> <span class="cp">%}</span>
&gt; <span class="cp">{{</span> <span class="s2">"%02d"</span> <span class="o">| </span><span class="nf">format</span><span class="p">(</span><span class="nv">i</span><span class="o">+</span><span class="nv">1</span><span class="p">)</span> <span class="cp">}}</span> <span class="cp">{{</span> <span class="nv">line</span> <span class="cp">}}</span>
<span class="cp">{%</span> <span class="k">endfor</span> <span class="cp">%}</span>
    
</code></pre></div>    </div>
    <p><em>Rationale:</em> Converts each line into a blockquote with a line number.</p>
  </li>
  <li><strong>Content by Word Count Buckets</strong><br />
<em>File: word_bucket.j2</em>
    <div class="language-jinja highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    
<span class="c">## File #{{ index }}: {{ path }}</span>
    
<span class="cp">{%</span> <span class="k">set</span> <span class="nv">words</span> <span class="o">=</span> <span class="nv">content.split</span><span class="p">()</span> <span class="cp">%}</span>
<span class="cp">{%</span> <span class="k">if</span> <span class="nv">words</span><span class="o">|</span><span class="nf">length</span> <span class="o">&lt;</span> <span class="nv">30</span> <span class="cp">%}</span>
(SHORT FILE)
<span class="cp">{{</span> <span class="nv">content</span> <span class="cp">}}</span>
<span class="cp">{%</span> <span class="nv">elif</span> <span class="nv">words</span><span class="o">|</span><span class="nf">length</span> <span class="o">&lt;</span> <span class="nv">100</span> <span class="cp">%}</span>
(MEDIUM FILE)
---BEGIN---
<span class="cp">{{</span> <span class="nv">content</span> <span class="cp">}}</span>
---END-----
<span class="cp">{%</span> <span class="k">else</span> <span class="cp">%}</span>
(LONG FILE - WORD COUNT: <span class="cp">{{</span> <span class="nv">words</span><span class="o">|</span><span class="nf">length</span> <span class="cp">}}</span>)
[Preview: First 100 words]
<span class="cp">{{</span> <span class="nv">words</span><span class="p">[</span><span class="err">:</span><span class="nv">100</span><span class="p">]</span><span class="o">|</span><span class="nf">join</span><span class="p">(</span><span class="s1">' '</span><span class="p">)</span> <span class="cp">}}</span>
[... shortened ...]
<span class="cp">{%</span> <span class="k">endif</span> <span class="cp">%}</span>
    
</code></pre></div>    </div>
    <p><em>Rationale:</em> Adjusts output based on the file’s length.</p>
  </li>
  <li><strong>Script-Inlining Template (Code + Comments)</strong><br />
<em>File: inline_script.j2</em>
    <div class="language-jinja highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    
<span class="c">### SCRIPT SNIPPET (INDEX: {{ index }})</span>
# File Path: <span class="cp">{{</span> <span class="nv">path</span> <span class="cp">}}</span>
    
cat <span class="nt">&lt;</span><span class="err">&lt;'</span><span class="na">EOF</span><span class="err">'</span> <span class="nt">&gt;</span> output_file_<span class="cp">{{</span> <span class="nv">index</span> <span class="cp">}}</span>.txt
<span class="cp">{{</span> <span class="nv">content</span> <span class="cp">}}</span>
EOF
    
# Explanation:
# Writes the file content into "output_file_<span class="cp">{{</span> <span class="nv">index</span> <span class="cp">}}</span>.txt" using a here-document.
    
</code></pre></div>    </div>
    <p><em>Rationale:</em> Useful for recreating file content on another system.</p>
  </li>
  <li><strong>Directory Tree Logging Template</strong><br />
<em>File: directory_tree.j2</em>
    <div class="language-jinja highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    
[FILE ENTRY #<span class="cp">{{</span> <span class="nv">index</span> <span class="cp">}}</span>]
PATH: <span class="cp">{{</span> <span class="nv">path</span> <span class="cp">}}</span>
DIR OR FILE: <span class="cp">{%</span> <span class="k">if</span> <span class="nv">content</span> <span class="o">==</span> <span class="s1">''</span> <span class="ow">and</span> <span class="s1">'.'</span> <span class="ow">not</span> <span class="ow">in</span> <span class="nv">path.split</span><span class="p">(</span><span class="s1">'/'</span><span class="p">)[</span><span class="o">-</span><span class="nv">1</span><span class="p">]</span> <span class="cp">%}</span> (Possibly a directory or empty file) <span class="cp">{%</span> <span class="k">else</span> <span class="cp">%}</span> (File with content) <span class="cp">{%</span> <span class="k">endif</span> <span class="cp">%}</span>
    
========= CONTENT START =========
<span class="cp">{{</span> <span class="nv">content</span> <span class="cp">}}</span>
========= CONTENT END ===========
    
</code></pre></div>    </div>
    <p><em>Rationale:</em> Distinguishes between empty directories and files with content.</p>
  </li>
  <li><strong>Quick Data Stats with Regex (Custom Filters)</strong><br />
<em>File: quick_regex_stats.j2</em>
    <div class="language-jinja highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    
<span class="cp">{%</span> <span class="k">set</span> <span class="nv">lines</span> <span class="o">=</span> <span class="nv">content.split</span><span class="p">(</span><span class="s1">'\n'</span><span class="p">)</span> <span class="cp">%}</span>
<span class="cp">{%</span> <span class="k">set</span> <span class="nv">import_lines</span> <span class="o">=</span> <span class="nv">lines</span> <span class="o">| </span><span class="nf">select</span><span class="p">(</span><span class="s2">"match"</span><span class="p">,</span> <span class="s2">"^(import|from) "</span><span class="p">)</span> <span class="o">| </span><span class="nf">list</span> <span class="cp">%}</span>
<span class="cp">{%</span> <span class="k">set</span> <span class="nv">todo_lines</span> <span class="o">=</span> <span class="nv">lines</span> <span class="o">| </span><span class="nf">select</span><span class="p">(</span><span class="s2">"match"</span><span class="p">,</span> <span class="s2">".*TODO.*"</span><span class="p">)</span> <span class="o">| </span><span class="nf">list</span> <span class="cp">%}</span>
    
File #<span class="cp">{{</span> <span class="nv">index</span> <span class="cp">}}</span>: <span class="cp">{{</span> <span class="nv">path</span> <span class="cp">}}</span>
============================
TOTAL LINES: <span class="cp">{{</span> <span class="nv">lines</span><span class="o">|</span><span class="nf">length</span> <span class="cp">}}</span>
IMPORT STATEMENTS: <span class="cp">{{</span> <span class="nv">import_lines</span><span class="o">|</span><span class="nf">length</span> <span class="cp">}}</span>
TODO MARKERS: <span class="cp">{{</span> <span class="nv">todo_lines</span><span class="o">|</span><span class="nf">length</span> <span class="cp">}}</span>
    
-- EXCERPT (first 5 lines) --
<span class="cp">{%</span> <span class="k">for</span> <span class="nv">l</span> <span class="ow">in</span> <span class="nv">lines</span><span class="p">[</span><span class="err">:</span><span class="nv">5</span><span class="p">]</span> <span class="cp">%}</span>
<span class="cp">{{</span> <span class="nv">l</span> <span class="cp">}}</span>
<span class="cp">{%</span> <span class="k">endfor</span> <span class="cp">%}</span>
----------------------------
    
</code></pre></div>    </div>
    <p><em>Rationale:</em> Analyzes text (e.g., counting “import” or “TODO” occurrences).</p>
  </li>
</ol>

<hr />

<h2 id="9-further-notes">9. FURTHER NOTES</h2>

<ul>
  <li>Ensure you have installed all required modules (e.g., <code class="language-plaintext highlighter-rouge">rarfile</code>, <code class="language-plaintext highlighter-rouge">py7zr</code>) for handling specific archive types.</li>
  <li>The script processes <code class="language-plaintext highlighter-rouge">.docx</code>, <code class="language-plaintext highlighter-rouge">.pptx</code>, <code class="language-plaintext highlighter-rouge">.xlsx</code>, <code class="language-plaintext highlighter-rouge">.odt</code>, <code class="language-plaintext highlighter-rouge">.ods</code>, and <code class="language-plaintext highlighter-rouge">.odp</code> as archives.</li>
  <li>Legacy MS Office formats (such as <code class="language-plaintext highlighter-rouge">.doc</code>, <code class="language-plaintext highlighter-rouge">.xls</code>, <code class="language-plaintext highlighter-rouge">.ppt</code>) are not supported.</li>
  <li>Adjust the <code class="language-plaintext highlighter-rouge">--max-depth</code> parameter when processing heavily nested archives.</li>
</ul>

<section data-filename="python_code-block.py" data-code="#!/usr/bin/env python3
import os
import sys
import tempfile
import shutil
import zipfile
import tarfile
import click
import logging
from fnmatch import fnmatch
from typing import Callable, List, Optional, Tuple
# Attempt to import optional modules
try:
import rarfile
except ImportError:
rarfile = None
try:
import py7zr
except ImportError:
py7zr = None
try:
import pathspec
except ImportError:
pathspec = None
try:
from jinja2 import Environment, FileSystemLoader
except ImportError:
Environment = None
FileSystemLoader = None
logging.basicConfig(
level=logging.INFO,
format=&quot;%(asctime)s - %(levelname)s - %(message)s&quot;,
stream=sys.stderr,
)
logger = logging.getLogger(__name__)
def is_within_directory(directory: str, target: str) -&gt; bool:
&quot;&quot;&quot;
Checks if the target path is within the specified directory,
helping to avoid path traversal vulnerabilities.
&quot;&quot;&quot;
abs_directory = os.path.abspath(directory)
abs_target = os.path.abspath(target)
return os.path.commonprefix([abs_directory, abs_target]) == abs_directory
def safe_extract(tar: tarfile.TarFile, path: str = &quot;.&quot;, members=None) -&gt; None:
&quot;&quot;&quot;
Safely extract tar contents, preventing directory traversal.
&quot;&quot;&quot;
for member in (members or tar.getmembers()):
member_path = os.path.join(path, member.name)
if not is_within_directory(path, member_path):
raise ValueError(&quot;Detected path traversal attempt.&quot;)
tar.extractall(path=path, members=members)
def handle_zip(file_path: str, extract_dir: str) -&gt; bool:
&quot;&quot;&quot;
Extracts ZIP archives, handling potential exceptions.
&quot;&quot;&quot;
try:
with zipfile.ZipFile(file_path, &quot;r&quot;) as zf:
zf.extractall(extract_dir)
return True
except zipfile.BadZipFile as e:
logger.warning(f&quot;Bad ZIP file {file_path}: {str(e)}&quot;)
return False
def handle_rar(file_path: str, extract_dir: str) -&gt; bool:
&quot;&quot;&quot;
Extracts RAR archives if rarfile is available.
&quot;&quot;&quot;
if not rarfile:
logger.warning(&quot;RAR handling requires 'rarfile' to be installed.&quot;)
return False
try:
with rarfile.RarFile(file_path, &quot;r&quot;) as rf:
rf.extractall(extract_dir)
return True
except rarfile.Error as e:
logger.warning(f&quot;RAR extraction failed: {str(e)}&quot;)
return False
def handle_7z(file_path: str, extract_dir: str) -&gt; bool:
&quot;&quot;&quot;
Extracts 7z archives if py7zr is available.
&quot;&quot;&quot;
if not py7zr:
logger.warning(&quot;7z handling requires 'py7zr' to be installed.&quot;)
return False
try:
with py7zr.SevenZipFile(file_path, &quot;r&quot;) as sz:
sz.extractall(extract_dir)
return True
except py7zr.exceptions.Bad7zFile as e:
logger.warning(f&quot;7z extraction failed: {str(e)}&quot;)
return False
def handle_tar(file_path: str, extract_dir: str) -&gt; bool:
&quot;&quot;&quot;
Extracts TAR archives, using safe_extract to avoid path traversal.
&quot;&quot;&quot;
try:
with tarfile.open(file_path, &quot;r:*&quot;) as tf:
safe_extract(tf, extract_dir)
return True
except tarfile.TarError as e:
logger.warning(f&quot;TAR extraction failed: {str(e)}&quot;)
return False
ARCHIVE_HANDLERS = {
&quot;.zip&quot;: handle_zip,
&quot;.rar&quot;: handle_rar,
&quot;.7z&quot;: handle_7z,
&quot;.tar&quot;: handle_tar,
&quot;.gz&quot;: handle_tar,
&quot;.bz2&quot;: handle_tar,
}
OFFICE_EXTENSIONS = [&quot;.docx&quot;, &quot;.xlsx&quot;, &quot;.pptx&quot;, &quot;.odt&quot;, &quot;.ods&quot;, &quot;.odp&quot;]
def read_gitignore(directory: str) -&gt; List[str]:
&quot;&quot;&quot;
Reads lines from .gitignore if present.
&quot;&quot;&quot;
path = os.path.join(directory, &quot;.gitignore&quot;)
if os.path.isfile(path):
with open(path, &quot;r&quot;, encoding=&quot;utf-8&quot;) as f:
return [line.strip() for line in f if line.strip() and not line.startswith(&quot;#&quot;)]
return []
def should_ignore(path: str, rules: List[str]) -&gt; bool:
&quot;&quot;&quot;
Basic fnmatch-based ignoring for files or directories.
&quot;&quot;&quot;
base = os.path.basename(path)
if os.path.isdir(path):
base += &quot;/&quot;
return any(fnmatch(base, rule) for rule in rules)
class GitignoreHandler:
&quot;&quot;&quot;
Handles ignoring of files or directories based on .gitignore (via pathspec or fallback).
&quot;&quot;&quot;
def __init__(self, directory: str):
self.pathspec_spec = None
self.fallback_rules = []
lines = read_gitignore(directory)
if pathspec:
self.pathspec_spec = pathspec.PathSpec.from_lines(&quot;gitwildmatch&quot;, lines)
else:
self.fallback_rules = lines
def should_ignore(self, path_to_check: str) -&gt; bool:
if self.pathspec_spec:
return self.pathspec_spec.match_file(path_to_check)
return should_ignore(path_to_check, self.fallback_rules)
class OutputFormatter:
&quot;&quot;&quot;
Outputs data in either plain text, XML-like format, or via Jinja2 templates if available.
&quot;&quot;&quot;
def __init__(
self,
writer: Callable[[str], None],
xml_mode: bool = False,
template_file: Optional[str] = None
):
self.writer = writer
self.xml_mode = xml_mode
self.xml_index = 1
self.template_file = template_file
self.jinja_env = None
if template_file and Environment and FileSystemLoader:
template_dir = os.path.dirname(template_file)
self.jinja_env = Environment(loader=FileSystemLoader(template_dir))
def write(self, path: str, content: str) -&gt; None:
&quot;&quot;&quot;
Decides the approach (Jinja2/XML/plain text) for output.
&quot;&quot;&quot;
if self.jinja_env and self.template_file:
try:
template_name = os.path.basename(self.template_file)
template = self.jinja_env.get_template(template_name)
rendered = template.render(path=path, content=content, index=self.xml_index)
self.writer(rendered)
except Exception as e:
logger.warning(f&quot;Jinja2 rendering error: {e}&quot;)
self._fallback_write(path, content)
elif self.xml_mode:
self.writer(f'&lt;## data-filename=&quot;xml_code-block xml&quot; data-code=&quot;&quot;&gt;')
self.writer(f'    {path}&lt;/source&gt;')
self.writer('    ')
for line in content.splitlines():
self.writer(f'        {line}')
self.writer('    ')
self.writer('&lt;/section&gt;')
self.xml_index += 1
else:
self._fallback_write(path, content)
def _fallback_write(self, path: str, content: str):
&quot;&quot;&quot;
Prints content with separators if not using templates or XML.
&quot;&quot;&quot;
self.writer(path)
self.writer(&quot;—&quot;)
self.writer(content)
self.writer(&quot;&quot;)
self.writer(&quot;—&quot;)
self.xml_index += 1
class FileProcessor:
&quot;&quot;&quot;
Manages recursion through directories or archives and applies ignoring, formatting, etc.
&quot;&quot;&quot;
def __init__(
self,
extensions: Tuple[str, ...],
include_hidden: bool,
ignore_gitignore: bool,
ignore_patterns: Tuple[str, ...],
formatter: OutputFormatter,
max_depth: int = 5,
):
self.extensions = [ext.lower() for ext in extensions]
self.include_hidden = include_hidden
self.ignore_gitignore = ignore_gitignore
self.ignore_patterns = ignore_patterns
self.formatter = formatter
self.max_depth = max_depth
def process_path(self, path: str, depth: int = 0, extra_gitignore_rules: List[str] = None) -&gt; None:
if extra_gitignore_rules is None:
extra_gitignore_rules = []
if depth &gt; self.max_depth:
logger.warning(f&quot;Max recursion depth ({self.max_depth}) reached at {path}.&quot;)
return
if os.path.isfile(path):
self._handle_file(path, depth)
elif os.path.isdir(path):
if not self.ignore_gitignore:
extra_gitignore_rules.extend(read_gitignore(path))
self._handle_directory(path, depth, extra_gitignore_rules)
def _handle_file(self, path: str, depth: int) -&gt; None:
ext = os.path.splitext(path)[1].lower()
if ext in ARCHIVE_HANDLERS or ext in OFFICE_EXTENSIONS:
self._extract_and_recurse(path, ext, depth)
else:
self._read_and_output(path)
def _extract_and_recurse(self, path: str, ext: str, depth: int) -&gt; None:
handler_func = ARCHIVE_HANDLERS.get(ext)
if ext in OFFICE_EXTENSIONS:
# Office documents are ZIP-based archives
handler_func = ARCHIVE_HANDLERS[&quot;.zip&quot;]
if not handler_func:
logger.warning(f&quot;No valid handler for extension: {ext}&quot;)
return
with tempfile.TemporaryDirectory() as tmpdir:
success = handler_func(path, tmpdir)
if success:
self.process_path(tmpdir, depth + 1)
else:
logger.warning(f&quot;Extraction failed for {path}&quot;)
def _read_and_output(self, path: str) -&gt; None:
encodings_to_try = [&quot;utf-8&quot;, &quot;latin-1&quot;]
for encoding in encodings_to_try:
try:
with open(path, &quot;r&quot;, encoding=encoding) as f:
content = f.read()
self.formatter.write(path, content)
return
except UnicodeDecodeError:
continue
except Exception as e:
logger.warning(f&quot;File read error {path}: {e}&quot;)
return
logger.warning(f&quot;Could not read file {path} with provided encodings.&quot;)
def _handle_directory(self, directory: str, depth: int, extra_gitignore_rules: List[str]) -&gt; None:
gitignore_handler = None
if not self.ignore_gitignore:
gitignore_handler = GitignoreHandler(directory)
for root, dirs, files in os.walk(directory):
if not self.include_hidden:
dirs[:] = [d for d in dirs if not d.startswith(&quot;.&quot;)]
files = [f for f in files if not f.startswith(&quot;.&quot;)]
if gitignore_handler:
dirs[:] = [d for d in dirs if not gitignore_handler.should_ignore(os.path.join(root, d))]
files = [f for f in files if not gitignore_handler.should_ignore(os.path.join(root, f))]
dirs[:] = [d for d in dirs if not should_ignore(os.path.join(root, d), extra_gitignore_rules)]
files = [f for f in files if not should_ignore(os.path.join(root, f), extra_gitignore_rules)]
if self.ignore_patterns:
files = [
f for f in files
if not any(fnmatch(f, pattern) for pattern in self.ignore_patterns)
]
if self.extensions:
files = [
f for f in files
if any(f.lower().endswith(ext) for ext in self.extensions)
]
for file_name in sorted(files):
self.process_path(os.path.join(root, file_name), depth + 1, extra_gitignore_rules)
@click.command()
@click.argument(&quot;paths&quot;, nargs=-1, type=click.Path(exists=True))
@click.option(&quot;-e&quot;, &quot;—extension&quot;, &quot;extensions&quot;, multiple=True, help=&quot;Specify file extensions, e.g. .txt, .md.&quot;)
@click.option(&quot;—include-hidden&quot;, is_flag=True, default=False, help=&quot;Include hidden files and subdirectories.&quot;)
@click.option(&quot;—ignore-gitignore&quot;, is_flag=True, default=False, help=&quot;Do not apply .gitignore-based filtering.&quot;)
@click.option(&quot;—ignore&quot;, &quot;ignore_patterns&quot;, multiple=True, help=&quot;Specify one or more glob patterns to exclude.&quot;)
@click.option(&quot;-o&quot;, &quot;—output&quot;, &quot;output_file&quot;, type=click.Path(writable=True), help=&quot;Output file path (stdout by default).&quot;)
@click.option(&quot;—xml&quot;, &quot;output_xml&quot;, is_flag=True, default=False, help=&quot;Output in XML-like format.&quot;)
@click.option(&quot;-t&quot;, &quot;—template-file&quot;, &quot;template_file&quot;, type=click.Path(exists=True), help=&quot;Use a Jinja2 template for output.&quot;)
@click.option(&quot;-d&quot;, &quot;—max-depth&quot;, &quot;max_depth&quot;, default=5, help=&quot;Maximum recursion depth for nested archives.&quot;)
def cli(paths, extensions, include_hidden, ignore_gitignore, ignore_patterns, output_file, output_xml, template_file, max_depth):
&quot;&quot;&quot;
&quot;f2p&quot; — Enhanced from &quot;framework1&quot; using &quot;raw_data&quot;:
1) Safe recursion-based file and archive handling.
2) Advanced ignoring logic from .gitignore or pathspec.
3) Optional Jinja2-based templating for output formatting.
&quot;&quot;&quot;
writer = click.echo
file_handle = None
if output_file:
try:
file_handle = open(output_file, &quot;w&quot;, encoding=&quot;utf-8&quot;)
writer = lambda msg: print(msg, file=file_handle)
except IOError as e:
logger.error(f&quot;Could not open output file {output_file}: {e}&quot;)
sys.exit(1)
formatter = OutputFormatter(
writer=writer,
xml_mode=output_xml,
template_file=template_file
)
if output_xml and not template_file:
writer(&quot;&lt;root&gt;&quot;)
processor = FileProcessor(
extensions=extensions,
include_hidden=include_hidden,
ignore_gitignore=ignore_gitignore,
ignore_patterns=ignore_patterns,
formatter=formatter,
max_depth=max_depth
)
for path in paths:
processor.process_path(path)
if output_xml and not template_file:
writer(&quot;&lt;/root&gt;&quot;)
if file_handle:
file_handle.close()
if __name__ == &quot;__main__&quot;:
cli()" data-download-link="" data-download-link-label="Download Python"><code class="language-python">#!/usr/bin/env python3
import os
import sys
import tempfile
import shutil
import zipfile
import tarfile
import click
import logging
from fnmatch import fnmatch
from typing import Callable, List, Optional, Tuple
# Attempt to import optional modules
try:
import rarfile
except ImportError:
rarfile = None
try:
import py7zr
except ImportError:
py7zr = None
try:
import pathspec
except ImportError:
pathspec = None
try:
from jinja2 import Environment, FileSystemLoader
except ImportError:
Environment = None
FileSystemLoader = None
logging.basicConfig(
level=logging.INFO,
format="%(asctime)s - %(levelname)s - %(message)s",
stream=sys.stderr,
)
logger = logging.getLogger(__name__)
def is_within_directory(directory: str, target: str) -&gt; bool:
"""
Checks if the target path is within the specified directory,
helping to avoid path traversal vulnerabilities.
"""
abs_directory = os.path.abspath(directory)
abs_target = os.path.abspath(target)
return os.path.commonprefix([abs_directory, abs_target]) == abs_directory
def safe_extract(tar: tarfile.TarFile, path: str = ".", members=None) -&gt; None:
"""
Safely extract tar contents, preventing directory traversal.
"""
for member in (members or tar.getmembers()):
member_path = os.path.join(path, member.name)
if not is_within_directory(path, member_path):
raise ValueError("Detected path traversal attempt.")
tar.extractall(path=path, members=members)
def handle_zip(file_path: str, extract_dir: str) -&gt; bool:
"""
Extracts ZIP archives, handling potential exceptions.
"""
try:
with zipfile.ZipFile(file_path, "r") as zf:
zf.extractall(extract_dir)
return True
except zipfile.BadZipFile as e:
logger.warning(f"Bad ZIP file {file_path}: {str(e)}")
return False
def handle_rar(file_path: str, extract_dir: str) -&gt; bool:
"""
Extracts RAR archives if rarfile is available.
"""
if not rarfile:
logger.warning("RAR handling requires 'rarfile' to be installed.")
return False
try:
with rarfile.RarFile(file_path, "r") as rf:
rf.extractall(extract_dir)
return True
except rarfile.Error as e:
logger.warning(f"RAR extraction failed: {str(e)}")
return False
def handle_7z(file_path: str, extract_dir: str) -&gt; bool:
"""
Extracts 7z archives if py7zr is available.
"""
if not py7zr:
logger.warning("7z handling requires 'py7zr' to be installed.")
return False
try:
with py7zr.SevenZipFile(file_path, "r") as sz:
sz.extractall(extract_dir)
return True
except py7zr.exceptions.Bad7zFile as e:
logger.warning(f"7z extraction failed: {str(e)}")
return False
def handle_tar(file_path: str, extract_dir: str) -&gt; bool:
"""
Extracts TAR archives, using safe_extract to avoid path traversal.
"""
try:
with tarfile.open(file_path, "r:*") as tf:
safe_extract(tf, extract_dir)
return True
except tarfile.TarError as e:
logger.warning(f"TAR extraction failed: {str(e)}")
return False
ARCHIVE_HANDLERS = {
".zip": handle_zip,
".rar": handle_rar,
".7z": handle_7z,
".tar": handle_tar,
".gz": handle_tar,
".bz2": handle_tar,
}
OFFICE_EXTENSIONS = [".docx", ".xlsx", ".pptx", ".odt", ".ods", ".odp"]
def read_gitignore(directory: str) -&gt; List[str]:
"""
Reads lines from .gitignore if present.
"""
path = os.path.join(directory, ".gitignore")
if os.path.isfile(path):
with open(path, "r", encoding="utf-8") as f:
return [line.strip() for line in f if line.strip() and not line.startswith("#")]
return []
def should_ignore(path: str, rules: List[str]) -&gt; bool:
"""
Basic fnmatch-based ignoring for files or directories.
"""
base = os.path.basename(path)
if os.path.isdir(path):
base += "/"
return any(fnmatch(base, rule) for rule in rules)
class GitignoreHandler:
"""
Handles ignoring of files or directories based on .gitignore (via pathspec or fallback).
"""
def __init__(self, directory: str):
self.pathspec_spec = None
self.fallback_rules = []
lines = read_gitignore(directory)
if pathspec:
self.pathspec_spec = pathspec.PathSpec.from_lines("gitwildmatch", lines)
else:
self.fallback_rules = lines
def should_ignore(self, path_to_check: str) -&gt; bool:
if self.pathspec_spec:
return self.pathspec_spec.match_file(path_to_check)
return should_ignore(path_to_check, self.fallback_rules)
class OutputFormatter:
"""
Outputs data in either plain text, XML-like format, or via Jinja2 templates if available.
"""
def __init__(
self,
writer: Callable[[str], None],
xml_mode: bool = False,
template_file: Optional[str] = None
):
self.writer = writer
self.xml_mode = xml_mode
self.xml_index = 1
self.template_file = template_file
self.jinja_env = None
if template_file and Environment and FileSystemLoader:
template_dir = os.path.dirname(template_file)
self.jinja_env = Environment(loader=FileSystemLoader(template_dir))
def write(self, path: str, content: str) -&gt; None:
"""
Decides the approach (Jinja2/XML/plain text) for output.
"""
if self.jinja_env and self.template_file:
try:
template_name = os.path.basename(self.template_file)
template = self.jinja_env.get_template(template_name)
rendered = template.render(path=path, content=content, index=self.xml_index)
self.writer(rendered)
except Exception as e:
logger.warning(f"Jinja2 rendering error: {e}")
self._fallback_write(path, content)
elif self.xml_mode:
self.writer(f'&lt;## data-filename="xml_code-block xml" data-code=""&gt;')
self.writer(f'    {path}&lt;/source&gt;')
self.writer('    ')
for line in content.splitlines():
self.writer(f'        {line}')
self.writer('    ')
self.writer('&lt;/section&gt;')
self.xml_index += 1
else:
self._fallback_write(path, content)
def _fallback_write(self, path: str, content: str):
"""
Prints content with separators if not using templates or XML.
"""
self.writer(path)
self.writer("—")
self.writer(content)
self.writer("")
self.writer("—")
self.xml_index += 1
class FileProcessor:
"""
Manages recursion through directories or archives and applies ignoring, formatting, etc.
"""
def __init__(
self,
extensions: Tuple[str, ...],
include_hidden: bool,
ignore_gitignore: bool,
ignore_patterns: Tuple[str, ...],
formatter: OutputFormatter,
max_depth: int = 5,
):
self.extensions = [ext.lower() for ext in extensions]
self.include_hidden = include_hidden
self.ignore_gitignore = ignore_gitignore
self.ignore_patterns = ignore_patterns
self.formatter = formatter
self.max_depth = max_depth
def process_path(self, path: str, depth: int = 0, extra_gitignore_rules: List[str] = None) -&gt; None:
if extra_gitignore_rules is None:
extra_gitignore_rules = []
if depth &gt; self.max_depth:
logger.warning(f"Max recursion depth ({self.max_depth}) reached at {path}.")
return
if os.path.isfile(path):
self._handle_file(path, depth)
elif os.path.isdir(path):
if not self.ignore_gitignore:
extra_gitignore_rules.extend(read_gitignore(path))
self._handle_directory(path, depth, extra_gitignore_rules)
def _handle_file(self, path: str, depth: int) -&gt; None:
ext = os.path.splitext(path)[1].lower()
if ext in ARCHIVE_HANDLERS or ext in OFFICE_EXTENSIONS:
self._extract_and_recurse(path, ext, depth)
else:
self._read_and_output(path)
def _extract_and_recurse(self, path: str, ext: str, depth: int) -&gt; None:
handler_func = ARCHIVE_HANDLERS.get(ext)
if ext in OFFICE_EXTENSIONS:
# Office documents are ZIP-based archives
handler_func = ARCHIVE_HANDLERS[".zip"]
if not handler_func:
logger.warning(f"No valid handler for extension: {ext}")
return
with tempfile.TemporaryDirectory() as tmpdir:
success = handler_func(path, tmpdir)
if success:
self.process_path(tmpdir, depth + 1)
else:
logger.warning(f"Extraction failed for {path}")
def _read_and_output(self, path: str) -&gt; None:
encodings_to_try = ["utf-8", "latin-1"]
for encoding in encodings_to_try:
try:
with open(path, "r", encoding=encoding) as f:
content = f.read()
self.formatter.write(path, content)
return
except UnicodeDecodeError:
continue
except Exception as e:
logger.warning(f"File read error {path}: {e}")
return
logger.warning(f"Could not read file {path} with provided encodings.")
def _handle_directory(self, directory: str, depth: int, extra_gitignore_rules: List[str]) -&gt; None:
gitignore_handler = None
if not self.ignore_gitignore:
gitignore_handler = GitignoreHandler(directory)
for root, dirs, files in os.walk(directory):
if not self.include_hidden:
dirs[:] = [d for d in dirs if not d.startswith(".")]
files = [f for f in files if not f.startswith(".")]
if gitignore_handler:
dirs[:] = [d for d in dirs if not gitignore_handler.should_ignore(os.path.join(root, d))]
files = [f for f in files if not gitignore_handler.should_ignore(os.path.join(root, f))]
dirs[:] = [d for d in dirs if not should_ignore(os.path.join(root, d), extra_gitignore_rules)]
files = [f for f in files if not should_ignore(os.path.join(root, f), extra_gitignore_rules)]
if self.ignore_patterns:
files = [
f for f in files
if not any(fnmatch(f, pattern) for pattern in self.ignore_patterns)
]
if self.extensions:
files = [
f for f in files
if any(f.lower().endswith(ext) for ext in self.extensions)
]
for file_name in sorted(files):
self.process_path(os.path.join(root, file_name), depth + 1, extra_gitignore_rules)
@click.command()
@click.argument("paths", nargs=-1, type=click.Path(exists=True))
@click.option("-e", "—extension", "extensions", multiple=True, help="Specify file extensions, e.g. .txt, .md.")
@click.option("—include-hidden", is_flag=True, default=False, help="Include hidden files and subdirectories.")
@click.option("—ignore-gitignore", is_flag=True, default=False, help="Do not apply .gitignore-based filtering.")
@click.option("—ignore", "ignore_patterns", multiple=True, help="Specify one or more glob patterns to exclude.")
@click.option("-o", "—output", "output_file", type=click.Path(writable=True), help="Output file path (stdout by default).")
@click.option("—xml", "output_xml", is_flag=True, default=False, help="Output in XML-like format.")
@click.option("-t", "—template-file", "template_file", type=click.Path(exists=True), help="Use a Jinja2 template for output.")
@click.option("-d", "—max-depth", "max_depth", default=5, help="Maximum recursion depth for nested archives.")
def cli(paths, extensions, include_hidden, ignore_gitignore, ignore_patterns, output_file, output_xml, template_file, max_depth):
"""
"f2p" — Enhanced from "framework1" using "raw_data":
1) Safe recursion-based file and archive handling.
2) Advanced ignoring logic from .gitignore or pathspec.
3) Optional Jinja2-based templating for output formatting.
"""
writer = click.echo
file_handle = None
if output_file:
try:
file_handle = open(output_file, "w", encoding="utf-8")
writer = lambda msg: print(msg, file=file_handle)
except IOError as e:
logger.error(f"Could not open output file {output_file}: {e}")
sys.exit(1)
formatter = OutputFormatter(
writer=writer,
xml_mode=output_xml,
template_file=template_file
)
if output_xml and not template_file:
writer("<root>")
processor = FileProcessor(
extensions=extensions,
include_hidden=include_hidden,
ignore_gitignore=ignore_gitignore,
ignore_patterns=ignore_patterns,
formatter=formatter,
max_depth=max_depth
)
for path in paths:
processor.process_path(path)
if output_xml and not template_file:
writer("</root>")
if file_handle:
file_handle.close()
if __name__ == "__main__":
cli()

</code></section>]]></content><author><name></name></author><category term="scripts&gt;python" /></entry><entry><title type="html">Hamster System</title><link href="https://ib.bsb.br/hamster-system/" rel="alternate" type="text/html" title="Hamster System" /><published>2025-02-04T00:00:00+00:00</published><updated>2025-02-05T14:47:46+00:00</updated><id>https://ib.bsb.br/hamster-system</id><content type="html" xml:base="https://ib.bsb.br/hamster-system/"><![CDATA[<h2 id="structure-of-hamster-folder">Structure of Hamster Folder</h2>

<ul>
  <li><strong>Root Folder: <code class="language-plaintext highlighter-rouge">YOUR NAME</code></strong>: This serves as the central digital hub, housing all system-related documents.</li>
  <li><strong>Main Folders</strong>:
    <ul>
      <li><strong>INBOX</strong>: Functions as a temporary digital intake, holding new and unprocessed documents awaiting categorization and action.</li>
      <li><strong>PROJECTS</strong>: Dedicated to active projects directly linked to current goals, representing ongoing and prioritized endeavors.</li>
      <li><strong>ARCHIVE</strong>: Acts as a repository for completed or inactive projects, often organized into collections for efficient historical access.</li>
      <li><strong>REFERENCE</strong>: Serves as a curated space for general reference materials and resources, distinct from project-specific documentation.</li>
    </ul>
  </li>
</ul>

<h2 id="folder-organization">Folder Organization</h2>

<ul>
  <li><strong>Project Folders <code class="language-plaintext highlighter-rouge">:</code></strong>: Symbolize individual projects aligned with personal goals, residing within <code class="language-plaintext highlighter-rouge">INBOX</code>, <code class="language-plaintext highlighter-rouge">PROJECTS</code>, or <code class="language-plaintext highlighter-rouge">ARCHIVE</code> folders. The prefix (<code class="language-plaintext highlighter-rouge">:</code>) facilitates easy searching and identification, such as <code class="language-plaintext highlighter-rouge">:Website_Redesign</code> or <code class="language-plaintext highlighter-rouge">:Learn_Spanish</code>.</li>
  <li><strong>Storage Folders <code class="language-plaintext highlighter-rouge">-</code></strong>: Designed to contain resources and assets within projects, ensuring that project-related materials are neatly organized. Examples include <code class="language-plaintext highlighter-rouge">-Assets</code>, <code class="language-plaintext highlighter-rouge">-Research</code>, <code class="language-plaintext highlighter-rouge">-Images</code>, <code class="language-plaintext highlighter-rouge">-Documents</code>, and <code class="language-plaintext highlighter-rouge">-Notes</code>.</li>
  <li><strong>Temporary Folders <code class="language-plaintext highlighter-rouge">_</code></strong>: Marked with an underscore to clearly identify transient or provisional items like <code class="language-plaintext highlighter-rouge">_Drafts</code> and <code class="language-plaintext highlighter-rouge">_Temp_Files</code>.</li>
  <li><strong>Archived Versions <code class="language-plaintext highlighter-rouge">+</code></strong>: Prefixed with a plus sign to denote older iterations of files, enabling version history management (e.g., <code class="language-plaintext highlighter-rouge">+Old_Reports</code>, <code class="language-plaintext highlighter-rouge">+Archive</code>, <code class="language-plaintext highlighter-rouge">+OldVersions</code>).</li>
  <li><strong>Private Folders <code class="language-plaintext highlighter-rouge">[ ]</code></strong>: Designated using square brackets to secure personal or sensitive information, ensuring confidentiality (e.g., <code class="language-plaintext highlighter-rouge">[Personal_Notes]</code>).</li>
</ul>

<h2 id="file-naming-conventions">File Naming Conventions</h2>

<ul>
  <li><strong>Templates <code class="language-plaintext highlighter-rouge">$</code></strong>: Template files are easily identifiable with a dollar sign prefix, streamlining template use (e.g., <code class="language-plaintext highlighter-rouge">$Invoice_Template.docx</code>, <code class="language-plaintext highlighter-rouge">$MeetingAgenda.txt</code>).</li>
  <li><strong>Versioning with Dates (CalVer) <code class="language-plaintext highlighter-rouge">+YYYYMMDD</code></strong>: Employs Calendar Versioning (CalVer) by appending modification dates in the <code class="language-plaintext highlighter-rouge">+YYYYMMDD</code> format to filenames, facilitating chronological version tracking (e.g., <code class="language-plaintext highlighter-rouge">Proposal+20231125.docx</code>, <code class="language-plaintext highlighter-rouge">Report+2023-10-27.docx</code>).</li>
</ul>

<h2 id="navigation-tips">Navigation Tips</h2>

<ul>
  <li><strong>Desktop Shortcuts</strong>: Quick access to key folders (<code class="language-plaintext highlighter-rouge">INBOX</code>, <code class="language-plaintext highlighter-rouge">PROJECTS</code>, <code class="language-plaintext highlighter-rouge">ARCHIVE</code>) is facilitated through desktop shortcuts, optimizing daily workflow.</li>
  <li><strong>File Finder Tools</strong>: Efficient file retrieval within the Hamster Folder structure is supported by tools like Listary (Windows) or built-in OS search functions, enhancing navigation speed.</li>
</ul>

<h2 id="practical-tips-for-folder-management">Practical Tips for Folder Management</h2>

<ul>
  <li><strong>Simplify Hierarchy</strong>: A lean, easily navigable structure is maintained by avoiding excessive folder nesting, recommending flat structures like <code class="language-plaintext highlighter-rouge">:Project::Subproject:::Subsubproject</code> over complex hierarchies.</li>
  <li><strong>Consistency</strong>: Uniformity in folder and file naming conventions is crucial for effortless navigation and retrieval, promoting long-term system usability.</li>
</ul>

<h2 id="capturing-inputs">Capturing Inputs</h2>

<ul>
  <li><strong>Primary Tool: One Text File</strong>: A central, plain text file, ideally in Markdown, serves as the core capture tool for notes, ideas, and non-urgent tasks, leveraging Markdown for enhanced organization and readability.</li>
  <li><strong>Secondary Tools: Paper Notebook or Digital Device</strong>: For immediate capture of actionable tasks and on-the-go note-taking, users can opt for a paper notebook or a distraction-minimized digital device like the AlphaSmart 3000, which supports focused input capture.</li>
</ul>

<h2 id="clarifying-and-processing-tasks">Clarifying and Processing Tasks</h2>

<ul>
  <li><strong>Decision Tree Framework</strong>: A structured decision process guides task processing:
    <ol>
      <li><strong>Is it Actionable?</strong>: Determine if the input necessitates action.
        <ul>
          <li><strong>No</strong>: Non-actionable items are either Trashed (irrelevant), Filed as Reference (informational), or Deferred to Someday/Maybe (future consideration).</li>
          <li><strong>Yes</strong>: Actionable items proceed to the next step for further processing.</li>
        </ul>
      </li>
      <li><strong>Does it Have a Specific Deadline?</strong>: Assess if the actionable item has a set deadline.
        <ul>
          <li><strong>Yes</strong>: Deadline-driven tasks are immediately scheduled in the <code class="language-plaintext highlighter-rouge">Calendar</code> section of the text file and added to a calendar application with reminders.</li>
          <li><strong>No</strong>: Tasks without deadlines are evaluated based on Importance and Effort for prioritization.</li>
        </ul>
      </li>
    </ol>
  </li>
</ul>

<h2 id="task-prioritization-framework">Task Prioritization Framework</h2>

<ul>
  <li><strong>Assess Importance and Effort</strong>: Prioritization for deadline-free tasks is determined by <strong>Importance (I)</strong> (rating task criticality to goal achievement) and <strong>Effort (E)</strong> (estimating time and energy for task completion).</li>
</ul>

<h2 id="organizing-tasks">Organizing Tasks</h2>

<ul>
  <li><strong>Contexts and Tags</strong>: Contexts (<code class="language-plaintext highlighter-rouge">@errands</code>, <code class="language-plaintext highlighter-rouge">@handsfree) and tags (</code>#important<code class="language-plaintext highlighter-rouge">, </code>#trivial<code class="language-plaintext highlighter-rouge">, </code>#hard<code class="language-plaintext highlighter-rouge">, </code>#easy`) are assigned to tasks for efficient categorization and execution based on environment and project association.</li>
  <li><strong>Task Entry Format</strong>: Consistency is maintained through a structured task entry format: <code class="language-plaintext highlighter-rouge">[Priority][Context][Projects] Action Verb - Task Description</code>. Example: <code class="language-plaintext highlighter-rouge">[#important#hard][@errands][:Website_Redesign] Draft - Prepare project proposal</code>.</li>
  <li><strong>Digital Task List Structure</strong>: Tasks are organized within the text file into dedicated sections:
    <ul>
      <li><strong>INBOX</strong>: Initial capture point for unprocessed tasks.</li>
      <li><strong>Calendar</strong>: Schedule for tasks with specific deadlines, using date notations.</li>
      <li><strong>Projects</strong>: Group tasks within larger projects for multi-step endeavors.</li>
      <li><strong>Next Actions</strong>: List of immediate, actionable tasks.</li>
      <li><strong>Waiting For</strong>: Tracks tasks pending external input or delegation.</li>
      <li><strong>Someday/Maybe</strong>: Repository for future tasks and ideas.</li>
      <li><strong>Reference</strong>: Storage for non-actionable, supporting information.</li>
    </ul>
  </li>
</ul>

<h2 id="scheduling-and-execution">Scheduling and Execution</h2>

<ul>
  <li><strong>Date Notations</strong>: Precise scheduling and tracking are enabled through date notations within the <code class="language-plaintext highlighter-rouge">Calendar</code> section:
    <ul>
      <li><strong>Scheduled Date</strong>: <code class="language-plaintext highlighter-rouge">[YYYY-MM-DD=HH:MM]</code> for time-specific tasks (e.g., <code class="language-plaintext highlighter-rouge">[2024-11-29=09:00] Doctor Appointment</code>).</li>
      <li><strong>Trigger Date</strong>: <code class="language-plaintext highlighter-rouge">[YYYY-MM-DD &gt;&gt;]</code> for tasks actionable after a set date (e.g., <code class="language-plaintext highlighter-rouge">[2024-10-10 &gt;&gt;] Follow up with client</code>).</li>
      <li><strong>Deadline Date</strong>: <code class="language-plaintext highlighter-rouge">[YYYY-MM-DD &lt;&lt;]</code> for tasks with firm deadlines (e.g., <code class="language-plaintext highlighter-rouge">[2024-10-22 &lt;&lt;] Pay electricity bill</code>).</li>
      <li><strong>Indefinite Date</strong>: <code class="language-plaintext highlighter-rouge">[soon]</code> or <code class="language-plaintext highlighter-rouge">[someday]</code> for tasks lacking specific dates (e.g., <code class="language-plaintext highlighter-rouge">[soon] Call Mom</code>).</li>
    </ul>
  </li>
</ul>

<h2 id="workflow-structure">Workflow Structure</h2>

<ul>
  <li><strong>Daily Routine</strong>:
    <ul>
      <li><strong>Morning</strong>: Start with a review of immediate tasks and scheduled calendar items.</li>
      <li><strong>Throughout the Day</strong>: Continuously capture new tasks and execute based on context and priority.</li>
      <li><strong>Evening</strong>: Conclude by updating completed tasks and planning for the next day.</li>
    </ul>
  </li>
  <li><strong>Weekly Review</strong>: Dedicate time each week to reflect on task and project progress, update priorities, and reorganize task lists for optimal system alignment and efficiency.</li>
</ul>

<h2 id="3-hamster-goals-aligning-actions-with-aspirations">3. Hamster Goals: Aligning Actions with Aspirations</h2>

<p><em>"Transform abstract desires into meaningful actions,"</em> encapsulates Hamster Goals’ purpose—converting aspirations into tangible actions. This component structures goal definition, project breakdown, and task alignment to ensure purposeful daily activities.</p>

<h2 id="defining-smart-goals">Defining SMART Goals</h2>

<ul>
  <li><strong>Personal Reflection</strong>: Initiate goal definition with introspection on core values and aspirations, identifying both qualitative (well-being, creativity) and quantitative (financial, skill-based) objectives.</li>
  <li><strong>SMART Criteria</strong>: Goals are refined using the SMART framework:
    <ul>
      <li><strong>Specific</strong>: Goals are clearly and unambiguously defined.</li>
      <li><strong>Measurable</strong>: Progress toward goals is objectively trackable.</li>
      <li><strong>Achievable</strong>: Goals are realistic and attainable.</li>
      <li><strong>Relevant</strong>: Goals align with personal values and long-term vision.</li>
      <li><strong>Time-bound</strong>: Goals have defined deadlines, fostering focus and urgency.</li>
    </ul>
  </li>
</ul>

<h2 id="breaking-down-goals-into-projects-and-tasks">Breaking Down Goals into Projects and Tasks</h2>

<ul>
  <li><strong>Hierarchical Structure</strong>: Goals are systematically decomposed: <code class="language-plaintext highlighter-rouge">Goal → Project → Task</code>, creating a tiered, actionable framework.</li>
  <li><strong>Identify Projects</strong>: Define projects that directly contribute to each overarching goal.</li>
  <li><strong>Develop Actionable Tasks</strong>: Break down each project into a series of actionable, manageable tasks.</li>
  <li><strong>Example</strong>:
    <ul>
      <li><strong>Goal</strong>: Improve Physical Health.</li>
      <li><strong>Project</strong>: #EstablishExerciseRoutine.</li>
      <li><strong>Tasks</strong>: Research local gyms, sign up for gym membership, schedule workouts, set fitness milestones.</li>
    </ul>
  </li>
</ul>

<h2 id="linking-tasks-to-personal-values">Linking Tasks to Personal Values</h2>

<ul>
  <li><strong>Alignment</strong>: Ensure each task’s contribution to personal goals and values is clearly understood, reinforcing the ‘why’ behind each action.</li>
  <li><strong>Motivation</strong>: Value alignment serves as a continuous source of motivation, enhancing prioritization and commitment.</li>
  <li><strong>Example</strong>:
    <ul>
      <li><strong>Task</strong>: Volunteer at local animal shelter.</li>
      <li><strong>Goal</strong>: Give back to the community.</li>
      <li><strong>Value</strong>: Compassion, Social Responsibility.</li>
    </ul>
  </li>
</ul>

<h2 id="regular-review-and-adjustment">Regular Review and Adjustment</h2>

<ul>
  <li><strong>Periodic Review</strong>: Goals, projects, and tasks are regularly reviewed to ensure ongoing alignment with values and aspirations.</li>
  <li><strong>Adaptation</strong>: Plans are adjusted based on progress and evolving circumstances, maintaining system relevance and user motivation.</li>
</ul>

<h2 id="4-hamster-budget-simplifying-financial-management">4. Hamster Budget: Simplifying Financial Management</h2>

<p><em>"You may not need a detailed personal budget,"</em> underscores Hamster Budget’s minimalist approach, prioritizing net worth tracking over granular expense management. This component offers a simplified yet effective method for overseeing personal finances.</p>

<h2 id="net-worth-focus">Net Worth Focus</h2>

<ul>
  <li><strong>Objective</strong>: Financial health is monitored through net worth tracking, offering a streamlined alternative to detailed expense budgeting and providing a clear financial overview.</li>
</ul>

<h2 id="creating-and-updating-the-net-worth-spreadsheet">Creating and Updating the Net Worth Spreadsheet</h2>

<ul>
  <li><strong>List Assets</strong>: Enumerate all assets, including cash, savings, investments, property, and valuables, for a comprehensive asset overview.</li>
  <li><strong>List Liabilities</strong>: Document all liabilities, such as debts, loans, mortgages, and credit card balances, providing a clear picture of financial obligations.</li>
  <li><strong>Calculate Net Worth</strong>: Determine net worth using the formula: <code class="language-plaintext highlighter-rouge">Net Worth = Total Assets - Total Liabilities</code>, offering a snapshot of overall financial standing.</li>
  <li><strong>Regular Updates</strong>: Schedule periodic updates to the net worth spreadsheet—monthly or quarterly—to monitor financial trends and inform strategic financial decisions.</li>
</ul>

<h2 id="managing-financial-risks">Managing Financial Risks</h2>

<ul>
  <li><strong>Identify Financial Leaks</strong>: Analyze spending patterns to pinpoint areas of potential overspending or inefficient resource allocation, enabling targeted financial adjustments.</li>
  <li><strong>Adjust Spending</strong>: Make informed adjustments to spending and savings strategies based on net worth assessments and financial goals, promoting proactive financial management.</li>
</ul>

<h2 id="flexible-tracking">Flexible Tracking</h2>

<ul>
  <li><strong>Review Schedule</strong>: Begin with monthly reviews to establish a financial baseline, adjusting to less frequent quarterly or semi-annual reviews as comfort increases.</li>
  <li><strong>Minimal Time Investment</strong>: Regular net worth reviews require minimal time, offering significant financial insight without the demands of detailed, continuous budgeting.</li>
</ul>

<h2 id="example-net-worth-calculation">Example Net Worth Calculation</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Assets:
- Savings Account: $5,000
- Investment Portfolio: $15,000
- Car Market Value: $8,000
- Home Equity: $50,000
Total Assets: $78,000

Liabilities:
- Car Loan Balance: $2,000
- Mortgage Balance: $150,000
- Credit Card Debt: $3,000
Total Liabilities: $155,000

Net Worth: $78,000 - $155,000 = -$77,000
</code></pre></div></div>

<ul>
  <li><strong>Interpretation</strong>: A negative net worth, as exemplified, signals that liabilities exceed assets, indicating a need to prioritize debt reduction and enhance savings strategies for improved financial stability.</li>
</ul>

<h2 id="5-optional-alphasmart-3000-integration-for-focused-work">5. Optional: AlphaSmart 3000 Integration for Focused Work</h2>

<p>For users seeking a distraction-minimized environment for writing and task management, the AlphaSmart 3000 seamlessly integrates with the Hamster System, particularly enhancing Hamster Flow. Its portable, distraction-free nature and long battery life, coupled with a straightforward interface, make it an ideal tool for focused productivity, while its limited storage capacity encourages efficient and concise task management.</p>

<h2 id="alphasmart-3000-file-allocation">AlphaSmart 3000 File Allocation</h2>

<ul>
  <li><strong>File 1: INBOX</strong>: Dedicated to rapid capture of new inputs, this file is intended for daily clearing. Format: <code class="language-plaintext highlighter-rouge">+ [raw input]</code>.</li>
  <li><strong>File 2: NEXT</strong>: Reserved for active tasks demanding immediate attention. Format: <code class="language-plaintext highlighter-rouge">@ ctx:task</code> (e.g., <code class="language-plaintext highlighter-rouge">@ w:call jim</code>).</li>
  <li><strong>File 3: PROJ</strong>: Allocated to active projects, outlining next actions for each. Format: <code class="language-plaintext highlighter-rouge"># proj &gt; next-action</code> (e.g., <code class="language-plaintext highlighter-rouge"># report &gt; draft p1</code>).</li>
  <li><strong>File 4: WAIT</strong>: Used to track delegated or pending items awaiting external input. Format: <code class="language-plaintext highlighter-rouge">= who:what:when</code> (e.g., <code class="language-plaintext highlighter-rouge">= jim:data:12/31</code>).</li>
  <li><strong>File 5: REF-A</strong>: Serves as a repository for reference material, alphabetically indexed from A-M. Format: <code class="language-plaintext highlighter-rouge">&amp; topic:detail</code> (e.g., <code class="language-plaintext highlighter-rouge">&amp; login:admin1</code>).</li>
  <li><strong>File 6: REF-B</strong>: Complements REF-A, storing reference material indexed from N-Z.</li>
  <li><strong>File 7: MAYBE</strong>: Functions as a parking lot for future possibilities and project ideas. Format: <code class="language-plaintext highlighter-rouge">? area:idea</code> (e.g., <code class="language-plaintext highlighter-rouge">? work:cert</code>).</li>
  <li><strong>File 8: CAL</strong>: Specifically for calendar items, transferred from the main text file during weekly reviews, ensuring scheduled tasks are readily accessible. Format: <code class="language-plaintext highlighter-rouge">[date] task</code>.</li>
</ul>

<h2 id="space-optimized-task-format">Space-Optimized Task Format</h2>

<ul>
  <li><strong>Standard Prefixes</strong>: Single-character prefixes are used to maximize space and clarity: <code class="language-plaintext highlighter-rouge">+</code>, <code class="language-plaintext highlighter-rouge">@</code>, <code class="language-plaintext highlighter-rouge">#</code>, <code class="language-plaintext highlighter-rouge">=</code>, <code class="language-plaintext highlighter-rouge">&amp;</code>, <code class="language-plaintext highlighter-rouge">?</code>, <code class="language-plaintext highlighter-rouge">✓</code>, <code class="language-plaintext highlighter-rouge">[</code>.</li>
  <li><strong>Context Abbreviations</strong>: Contexts are abbreviated to conserve character space: <code class="language-plaintext highlighter-rouge">w:</code> (Work), <code class="language-plaintext highlighter-rouge">h:</code> (Home), <code class="language-plaintext highlighter-rouge">e:</code> (Errands), <code class="language-plaintext highlighter-rouge">c:</code> (Calls), <code class="language-plaintext highlighter-rouge">p:</code> (Personal).</li>
  <li><strong>Common Action Verbs</strong>: Frequently used action verbs are shortened to single letters: <code class="language-plaintext highlighter-rouge">c</code> (Call), <code class="language-plaintext highlighter-rouge">e</code> (Email), <code class="language-plaintext highlighter-rouge">r</code> (Review), <code class="language-plaintext highlighter-rouge">w</code> (Write), <code class="language-plaintext highlighter-rouge">b</code> (Buy).</li>
</ul>

<h2 id="example-task-entries-alphasmart-3000">Example Task Entries (AlphaSmart 3000)</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Prefix</th>
      <th style="text-align: left">Context</th>
      <th style="text-align: left">Action</th>
      <th style="text-align: left">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">+</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">Call Mike about the report</td>
    </tr>
    <tr>
      <td style="text-align: left">@</td>
      <td style="text-align: left">w:</td>
      <td style="text-align: left">c</td>
      <td style="text-align: left">John re: quarterly report</td>
    </tr>
    <tr>
      <td style="text-align: left">#</td>
      <td style="text-align: left">Blog</td>
      <td style="text-align: left">w</td>
      <td style="text-align: left">Write the first draft</td>
    </tr>
    <tr>
      <td style="text-align: left">=</td>
      <td style="text-align: left">Alice</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">Review contract by [2024-11-05]</td>
    </tr>
    <tr>
      <td style="text-align: left">?</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">Start learning guitar</td>
    </tr>
  </tbody>
</table>

<h2 id="task-management-protocol">Task Management Protocol</h2>

<ul>
  <li><strong>Capture</strong>: Employ the <code class="language-plaintext highlighter-rouge">INBOX</code> file for quick, on-the-fly task capture.</li>
  <li><strong>Clarify &amp; Organize</strong>: Daily processing of the <code class="language-plaintext highlighter-rouge">INBOX</code> file involves task clarification and organization into appropriate files.</li>
  <li><strong>Engage</strong>: Work directly from the <code class="language-plaintext highlighter-rouge">NEXT</code> and <code class="language-plaintext highlighter-rouge">PROJ</code> files to execute prioritized tasks.</li>
  <li><strong>Review</strong>: Implement daily, weekly, and monthly reviews to maintain system efficacy and organization.
    <ul>
      <li><strong>Daily</strong>: Process <code class="language-plaintext highlighter-rouge">INBOX</code>, update <code class="language-plaintext highlighter-rouge">NEXT</code>, and mark completed tasks in <code class="language-plaintext highlighter-rouge">CAL</code>.</li>
      <li><strong>Weekly</strong>: Review all files, update projects and deadlines, and move completed tasks from <code class="language-plaintext highlighter-rouge">CAL</code> to <code class="language-plaintext highlighter-rouge">ARCH</code> as needed.</li>
      <li><strong>Monthly</strong>: Archive completed tasks, review <code class="language-plaintext highlighter-rouge">MAYBE</code> items, and consolidate <code class="language-plaintext highlighter-rouge">REF</code> files to optimize storage.</li>
    </ul>
  </li>
</ul>

<h2 id="space-management-guidelines">Space Management Guidelines</h2>

<ul>
  <li><strong>Character Conservation</strong>: Maximize storage by using abbreviations, omitting articles, minimizing punctuation, and ensuring brief task descriptions.</li>
  <li><strong>Priority Marking</strong>: Task priority is efficiently indicated using <code class="language-plaintext highlighter-rouge">!</code> for high, no mark for normal, and <code class="language-plaintext highlighter-rouge">~</code> for low priority.</li>
</ul>

<h2 id="benefits-of-the-hamster-system">Benefits of the Hamster System</h2>

<p>The Hamster System delivers a range of benefits designed to enhance productivity and well-being:</p>

<ol>
  <li><strong>Simplicity and Sustainability</strong>: Its minimalist design and reliance on basic tools ensure ease of use and long-term adherence.</li>
  <li><strong>Flexibility and Adaptability</strong>: The system is highly customizable, accommodating individual preferences and tool integrations.</li>
  <li><strong>Enhanced Focus</strong>: By streamlining information and tasks, it minimizes overwhelm and sharpens concentration.</li>
  <li><strong>Alignment with Personal Goals</strong>: It ensures daily actions contribute directly to meaningful personal and professional objectives.</li>
  <li><strong>Financial Clarity</strong>: Simplified financial tracking through net worth monitoring offers a clear, uncluttered view of financial health.</li>
  <li><strong>Predictable Structure</strong>: Consistent organizational and naming conventions facilitate efficient document and task management.</li>
  <li><strong>Workflow Efficiency</strong>: Streamlined capture, processing, and prioritization of tasks enhance overall workflow efficiency.</li>
  <li><strong>Financial Empowerment</strong>: Simplified financial oversight empowers better financial decision-making and reduces financial stress.</li>
</ol>

<h2 id="addressing-potential-challenges">Addressing Potential Challenges</h2>

<ul>
  <li><strong>No Specialized Apps</strong>: While some may perceive the absence of specialized apps as a limitation, it deliberately enhances system flexibility and platform independence, allowing users to integrate preferred tools as needed.</li>
  <li><strong>Discipline and Maintenance</strong>: Effective implementation requires establishing consistent routines for capture, processing, and review. Gradual adoption and habit development are recommended for overcoming this challenge.</li>
  <li><strong>Initial Adjustment Period</strong>: Transitioning to any new system necessitates a learning curve. Starting with one component at a time and gradually integrating others can ease the initial adjustment.</li>
</ul>

<h2 id="continuous-improvement-and-adaptability">Continuous Improvement and Adaptability</h2>

<p>The Hamster System is not static but designed for continuous evolution and user adaptation.</p>

<ul>
  <li><strong>System Evolution</strong>: The system is refined based on user feedback and practical experience, encouraging users to adjust elements for optimal personal effectiveness.</li>
  <li><strong>User Adaptation</strong>: Users are empowered to modify and tailor the system to their unique workflows and preferences, integrating new methodologies and tools as needed to personalize their productivity framework.</li>
</ul>

<h2 id="additional-resources-and-references">Additional Resources and References</h2>

<p>The Hamster System is informed by and complements several established methodologies and tools:</p>

<ul>
  <li><strong>Productivity Methodologies</strong>:
    <ul>
      <li><strong>Getting Things Done (GTD)</strong>: For a comprehensive approach to task management.</li>
      <li><strong>Bullet Journal</strong>: For analog task and event tracking.</li>
      <li><strong>Todo.txt</strong>: For simple, text-based task management.</li>
      <li><strong>One Big Text File (OBTF)</strong>: For minimalist note-taking and task management.</li>
    </ul>
  </li>
  <li><strong>Technical Terms</strong>:
    <ul>
      <li><strong>Markdown</strong>: For lightweight text formatting in plain text files.</li>
      <li><strong>Calendar Versioning (CalVer)</strong>: For date-based file version control.</li>
    </ul>
  </li>
  <li><strong>Recommended Tools</strong>:
    <ul>
      <li><strong>Listary</strong>: For enhanced file searching and application launching on Windows.</li>
      <li><strong>Bulk Rename Utility</strong>: For efficient batch file renaming.</li>
      <li><strong>AlphaSmart 3000</strong>: For distraction-free writing and task management.</li>
    </ul>
  </li>
</ul>

<h2 id="conclusion">Conclusion</h2>

<p>The Enhanced Hamster System provides a robust yet minimalist framework for managing digital life, workflows, finances, and goals. By prioritizing simplicity, adaptability, and continuous improvement, it offers a pathway to enhanced productivity, reduced stress, and greater alignment with personal and professional aspirations. Its integration of advanced task management techniques and optional tools like the AlphaSmart 3000 ensures practicality and depth, catering to diverse user needs and preferences.</p>

<h2 id="license">License</h2>

<p>The Hamster System is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License by Enio Ferreira, promoting its free use, adaptation, and sharing for non-commercial purposes.</p>]]></content><author><name></name></author><category term="aid&gt;tasks" /><category term="hardware" /></entry><entry><title type="html">Mimicking Proxmox-like functions on Windows 11</title><link href="https://ib.bsb.br/mimicking-proxmox-like-functions-on-windows-11/" rel="alternate" type="text/html" title="Mimicking Proxmox-like functions on Windows 11" /><published>2025-02-03T00:00:00+00:00</published><updated>2025-02-04T15:48:19+00:00</updated><id>https://ib.bsb.br/mimicking-proxmox-like-functions-on-windows-11</id><content type="html" xml:base="https://ib.bsb.br/mimicking-proxmox-like-functions-on-windows-11/"><![CDATA[<p><strong>Introduction</strong></p>

<p>This guide will walk you through setting up a home lab environment on Windows 11 Enterprise that mimics some core functionalities of Proxmox Virtual Environment (VE), specifically focusing on file management.  If you’re comfortable with Windows and want to explore virtualization and containerization for learning and experimentation in a home lab setting, without needing dedicated hardware for Proxmox, this guide is for you.</p>

<p><strong>Important Considerations:</strong> Windows 11 is not a direct replacement for Proxmox. Key enterprise features of Proxmox, such as built-in clustering, high availability (HA), and a unified web management interface, are not natively available in Windows 11. This guide focuses on approximating virtualization and containerization capabilities for a single-machine home lab.</p>

<p><strong>Target Audience:</strong> This guide is tailored for home lab enthusiasts, developers, and IT professionals familiar with Windows who are looking to explore virtualization and containerization concepts, and set up a practical file management system for personal or learning purposes.</p>

<p><strong>Why Windows 11 and Not Just Proxmox?</strong> Proxmox VE is a powerful, open-source virtualization platform ideal for production environments and advanced home labs. However, if you already use Windows 11 Enterprise, have a license, and prefer to experiment within a familiar Windows environment, this guide provides a convenient starting point without requiring a separate dedicated Proxmox server.</p>

<p><strong>Prerequisites</strong></p>

<p>Before you begin, ensure you have the following:</p>

<ul>
  <li><strong>Operating System:</strong> Windows 11 Enterprise or Pro (Hyper-V is required, and is available in Pro and Enterprise editions).</li>
  <li><strong>Hardware Virtualization Support:</strong> A computer with hardware virtualization (Intel VT-x or AMD-V) enabled in your BIOS/UEFI settings.</li>
  <li><strong>Administrator Privileges:</strong> Administrator-level access to your Windows 11 system.</li>
  <li><strong>Internet Connectivity:</strong> A stable internet connection for downloading software and components.</li>
  <li><strong>System Resources:</strong>
    <ul>
      <li>Minimum 8 GB of RAM, 16 GB or more recommended for running multiple VMs and containers smoothly.</li>
      <li>Sufficient disk space for virtual machines, containers, and your file management application.</li>
    </ul>
  </li>
</ul>

<p><strong>Enable Core Virtualization Features</strong></p>

<p>To begin, you need to enable the core virtualization features in Windows 11.</p>

<p><strong>1. Enable Hyper-V (Hypervisor)</strong></p>

<p>Hyper-V is Microsoft’s hypervisor (a technology that allows you to run virtual machines).</p>

<ol>
  <li><strong>Open PowerShell as Administrator:</strong> Right-click the Start button and select “Windows PowerShell (Admin)” or “Terminal (Admin)”.</li>
  <li><strong>Run the following command:</strong>
      <code class="language-plaintext highlighter-rouge">powershell
      Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All
     </code></li>
  <li><strong>Restart your computer:</strong> You will be prompted to restart to complete the installation.</li>
  <li><strong>Verify Hyper-V Installation:</strong> After restarting, open the Start Menu and type “Hyper-V Manager”. If “Hyper-V Manager” appears, Hyper-V is successfully installed.</li>
</ol>

<p><strong>2. Enable Windows Containers Feature</strong></p>

<p>This feature is necessary for running Windows containers, which we’ll use for one of our file management deployment options.</p>

<ol>
  <li><strong>Open “Turn Windows features on or off”:</strong> Type “optionalfeatures.exe” in the Start Menu and open it.</li>
  <li><strong>Check “Containers”:</strong> In the “Windows Features” window, find and check the box next to “Containers”.</li>
  <li><strong>Click “OK” and Reboot (if prompted):</strong> Click “OK” to enable the feature. Restart your computer if prompted to complete the installation.</li>
</ol>

<p><strong>3. Install WSL 2 (Windows Subsystem for Linux 2) - Optional but Recommended</strong></p>

<p>WSL 2 allows you to run a Linux environment directly on Windows, which is useful for running Linux-based applications and containers, and is required for one of our file management options. While technically optional for the IIS container approach, it’s highly recommended to have WSL 2 available for broader home lab flexibility.</p>

<ol>
  <li><strong>Open PowerShell as Administrator.</strong></li>
  <li><strong>Run the following command to install WSL 2 with Ubuntu (default distribution):</strong>
      <code class="language-plaintext highlighter-rouge">powershell
      wsl --install
     </code>
      Alternatively, to install Ubuntu specifically:
      <code class="language-plaintext highlighter-rouge">powershell
      wsl --install -d Ubuntu
     </code></li>
  <li><strong>Follow Prompts:</strong> Follow the on-screen prompts to complete the installation. This may involve setting up a Linux username and password after the first reboot.</li>
  <li><strong>Restart if prompted:</strong> Restart your computer if prompted to finalize the WSL 2 installation.</li>
</ol>

<p><strong>4. Install Docker Desktop (Optional, but Required for Windows Containers)</strong></p>

<p>Docker Desktop simplifies running containers on Windows. It’s essential if you plan to use Windows containers (Option 1: IIS-based File Management Application in Windows Container) and is generally recommended for exploring containerization in your home lab.  While technically optional if you only use VMs or WSL2, Docker Desktop is a valuable tool to have.</p>

<ol>
  <li><strong>Download Docker Desktop:</strong> Go to the official Docker website: <a href="https://www.docker.com/products/docker-desktop/">https://www.docker.com/products/docker-desktop/</a> and download Docker Desktop for Windows.</li>
  <li><strong>Run the Installer:</strong> Execute the downloaded installer.</li>
  <li><strong>Installation Options:</strong> During installation, you can choose between using the WSL 2 backend (recommended for better Linux container performance) or the Hyper-V backend.  For Windows containers, Hyper-V backend is sufficient.</li>
  <li><strong>Launch Docker Desktop:</strong> After installation, launch Docker Desktop from the Start Menu.</li>
  <li><strong>Verify Docker Installation:</strong> Open PowerShell and run <code class="language-plaintext highlighter-rouge">docker run hello-world</code>. If Docker is installed correctly, it will download and run a test container image.</li>
</ol>

<p><strong>Deployment Options for File Management Application</strong></p>

<p>We will explore three primary methods for deploying a file management application in your Windows 11 home lab:</p>

<ul>
  <li><strong>Option 1: IIS-based File Management Application in Windows Container:</strong> Deploying a simple web-based file manager using Internet Information Services (IIS) within a Windows container. This leverages Windows-native technologies.</li>
  <li><strong>Option 2: Filebrowser in a Linux VM (Virtual Machine):</strong> Creating a Linux Virtual Machine using Hyper-V and running Filebrowser, a web-based file manager, within it. This approach mirrors traditional VM-based server deployments, similar to how Proxmox often manages VMs.</li>
  <li><strong>Option 3: Cloud Commander in WSL 2 (Windows Subsystem for Linux 2):</strong> Installing Cloud Commander, another web-based file manager, directly within your WSL 2 Linux environment. This offers a lightweight and integrated Linux-on-Windows approach.</li>
</ul>

<p>Choose the option that best suits your needs and familiarity with the technologies involved.</p>

<p><strong>Option 1: IIS-based File Management Application in Windows Container</strong></p>

<p>This option uses Windows Containers and IIS to host a basic file manager. Docker Desktop is required for this option.</p>

<p><strong>1. Enable Required Windows Features for IIS (Internet Information Services)</strong></p>

<p>If you haven’t already, ensure IIS features are enabled. You can do this via PowerShell:</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">   </span><span class="n">Enable-WindowsOptionalFeature</span><span class="w"> </span><span class="nt">-Online</span><span class="w"> </span><span class="nt">-FeatureName</span><span class="w"> </span><span class="nx">IIS-WebServerRole</span><span class="w">
   </span><span class="n">Enable-WindowsOptionalFeature</span><span class="w"> </span><span class="nt">-Online</span><span class="w"> </span><span class="nt">-FeatureName</span><span class="w"> </span><span class="nx">IIS-WebServer</span><span class="w">
   </span><span class="n">Enable-WindowsOptionalFeature</span><span class="w"> </span><span class="nt">-Online</span><span class="w"> </span><span class="nt">-FeatureName</span><span class="w"> </span><span class="nx">IIS-CommonHttpFeatures</span><span class="w">
   </span><span class="n">Enable-WindowsOptionalFeature</span><span class="w"> </span><span class="nt">-Online</span><span class="w"> </span><span class="nt">-FeatureName</span><span class="w"> </span><span class="nx">IIS-ManagementTools</span><span class="w">
</span></code></pre></div></div>

<p><strong>2. Install IIS Components (Alternative Method)</strong></p>

<p>Alternatively, you can enable IIS features through the Control Panel:</p>

<ol>
  <li>Open <strong>Control Panel</strong>.</li>
  <li>Navigate to <strong>Programs &gt; Turn Windows features on or off</strong>.</li>
  <li>Enable the following IIS features by checking the boxes next to them:
      *   Web Management Tools
      *   World Wide Web Services
      *   Application Development Features
      *   Common HTTP Features
      *   Security
      *   Performance Features</li>
</ol>

<p><strong>3. Create Application Files</strong></p>

<p>Create the files for your simple file management application.</p>

<ol>
  <li><strong>Create a Folder:</strong> Create a new folder on your C: drive, for example, <code class="language-plaintext highlighter-rouge">C:\FileWebApp</code>.</li>
  <li><strong>Create <code class="language-plaintext highlighter-rouge">index.html</code>:</strong> Inside <code class="language-plaintext highlighter-rouge">C:\FileWebApp</code>, create a file named <code class="language-plaintext highlighter-rouge">index.html</code> with the following basic HTML content. This will serve as a placeholder for your file manager interface:</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  ```html
  &lt;!DOCTYPE html&gt;
  &lt;html&gt;
  &lt;head&gt;
      &lt;title&gt;Simple File Manager&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
      &lt;h1&gt;Welcome to Simple File Manager&lt;/h1&gt;
      &lt;p&gt;This application supports basic file operations: Upload, Delete, Preview, Rename, Edit.&lt;/p&gt;
      &lt;p&gt;For full functionality, you would implement server-side logic (e.g., using ASP.NET).&lt;/p&gt;
  &lt;/body&gt;
  &lt;/html&gt;
  ```    3.  **(Optional) Create `upload.aspx` (ASP.NET for Upload Functionality):** If you want to implement file upload functionality, you can create an ASP.NET page named `upload.aspx` in the same folder (`C:\FileWebApp`).  This requires ASP.NET features to be enabled in IIS and in your Dockerfile later.  A basic example of `upload.aspx.cs` (code-behind) for file upload is:

  ```csharp
  // upload.aspx.cs
  using System;
  using System.IO;

  public partial class Upload : System.Web.UI.Page
  {
      protected void UploadFile(object sender, EventArgs e)
      {
          if (FileUpload1.HasFile)
          {
              string fileName = Path.GetFileName(FileUpload1.FileName);
              string uploadPath = Server.MapPath("~/uploads/") + fileName; // Files will be saved in the 'uploads' subdirectory
              FileUpload1.SaveAs(uploadPath);
              Response.Write("File uploaded successfully!");
          }
      }
  }
  ```
  And the corresponding `upload.aspx` (web form) would include:

  ```html
  &lt;% Page Language="C#" AutoEventWireup="true" CodeBehind="upload.aspx.cs" Inherits="Upload" %&gt;
  &lt;!DOCTYPE html&gt;
  &lt;html&gt;
  &lt;head&gt;&lt;title&gt;File Upload&lt;/title&gt;&lt;/head&gt;
  &lt;body&gt;
      &lt;form id="form1" runat="server"&gt;
          &lt;div&gt;
              &lt;asp:FileUpload ID="FileUpload1" runat="server" /&gt;
              &lt;asp:Button ID="UploadButton" runat="server" Text="Upload" OnClick="UploadFile" /&gt;
          &lt;/div&gt;
      &lt;/form&gt;
  &lt;/body&gt;
  &lt;/html&gt;
  ```
</code></pre></div></div>

<ol>
  <li><strong>(Optional) Create <code class="language-plaintext highlighter-rouge">Web.config</code> (Configuration):</strong> To configure web server settings, such as maximum upload size, create a <code class="language-plaintext highlighter-rouge">Web.config</code> file in <code class="language-plaintext highlighter-rouge">C:\FileWebApp</code>:</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  ```xml
  &lt;?xml version="1.0"?&gt;
  &lt;configuration&gt;
    &lt;system.webServer&gt;
      &lt;security&gt;
        &lt;requestFiltering&gt;
          &lt;requestLimits maxAllowedContentLength="1073741824" /&gt; &lt;!-- 1GB Max Upload Size --&gt;
        &lt;/requestFiltering&gt;
      &lt;/security&gt;
    &lt;/system.webServer&gt;
  &lt;/configuration&gt;
  ```
</code></pre></div></div>

<p><strong>4. Create a Dockerfile</strong></p>

<p>A Dockerfile is a text file that contains instructions to build a Docker image. Create a file named <code class="language-plaintext highlighter-rouge">Dockerfile</code> (without any file extension) in the <code class="language-plaintext highlighter-rouge">C:\FileWebApp</code> folder with the following content:</p>

<div class="language-dockerfile highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c"># Use the official IIS image from Microsoft, based on Windows Server Core 2022 LTSC</span>
   FROM mcr.microsoft.com/windows/servercore/iis:windowsservercore-ltsc2022

   <span class="c"># Install ASP.NET 4.5 and Windows Authentication features (if needed for dynamic content or security)</span>
   RUN powershell -Command \
       Add-WindowsFeature Web-Asp-Net45; \
       Add-WindowsFeature Web-Windows-Auth;

   # Remove the default IIS website content
   RUN powershell -Command "Remove-Item -Recurse -Force C:\inetpub\wwwroot\*"

   # Copy your application files from the current directory into the container's IIS web root
   COPY . C:\inetpub\wwwroot

   <span class="c"># Expose port 80 for HTTP traffic to access the web application</span>
   EXPOSE 80
</code></pre></div></div>

<p><strong>5. Build the Docker Image</strong></p>

<p>Now, build the Docker image from your Dockerfile.</p>

<ol>
  <li><strong>Open PowerShell:</strong> Open PowerShell (you don’t need to run as Administrator for this step unless you encounter permissions issues).</li>
  <li><strong>Navigate to the Application Folder:</strong> Change the current directory in PowerShell to <code class="language-plaintext highlighter-rouge">C:\FileWebApp</code>:
      <code class="language-plaintext highlighter-rouge">powershell
      cd C:\FileWebApp
     </code></li>
  <li><strong>Build the Docker Image:</strong> Run the <code class="language-plaintext highlighter-rouge">docker build</code> command to build the image.  Tag the image as <code class="language-plaintext highlighter-rouge">iis-filemanager</code>:
      <code class="language-plaintext highlighter-rouge">powershell
      docker build -t iis-filemanager .
     </code>
      The <code class="language-plaintext highlighter-rouge">.</code> at the end specifies the current directory as the build context (where the Dockerfile and application files are located).</li>
</ol>

<p><strong>6. Run the Docker Container</strong></p>

<p>Run a Docker container from the image you just built.</p>

<ol>
  <li><strong>Run the Docker Container:</strong> Execute the <code class="language-plaintext highlighter-rouge">docker run</code> command to start a container in detached mode (<code class="language-plaintext highlighter-rouge">-d</code>), map port 8080 on your host to port 80 in the container (<code class="language-plaintext highlighter-rouge">-p 8080:80</code>), name the container <code class="language-plaintext highlighter-rouge">filemanager</code> (<code class="language-plaintext highlighter-rouge">--name filemanager</code>), and use the <code class="language-plaintext highlighter-rouge">iis-filemanager</code> image:
      <code class="language-plaintext highlighter-rouge">powershell
      docker run -d -p 8080:80 --name filemanager iis-filemanager
     </code></li>
  <li><strong>Verify Container is Running:</strong> Check if the container is running using:
      <code class="language-plaintext highlighter-rouge">powershell
      docker ps
     </code>
      You should see the <code class="language-plaintext highlighter-rouge">filemanager</code> container listed as running.</li>
  <li><strong>Access the File Manager in Browser:</strong> Open a web browser and navigate to <code class="language-plaintext highlighter-rouge">http://localhost:8080</code>. You should see the “Welcome to Simple File Manager” page (or your ASP.NET application if you implemented it).</li>
</ol>

<p><strong>7. Configure IIS Security (Optional)</strong></p>

<p>For added security, you can configure IIS to use Windows Authentication and disable Anonymous Authentication. This is relevant if you are in a domain environment and want to control access based on Windows user accounts.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">   </span><span class="c"># Enable Windows Authentication</span><span class="w">
   </span><span class="n">Set-WebConfigurationProperty</span><span class="w"> </span><span class="nt">-Filter</span><span class="w"> </span><span class="s2">"/system.webServer/security/authentication/windowsAuthentication"</span><span class="w"> </span><span class="nt">-Name</span><span class="w"> </span><span class="s2">"enabled"</span><span class="w"> </span><span class="nt">-Value</span><span class="w"> </span><span class="s2">"True"</span><span class="w">

   </span><span class="c"># Disable Anonymous Authentication</span><span class="w">
   </span><span class="n">Set-WebConfigurationProperty</span><span class="w"> </span><span class="nt">-Filter</span><span class="w"> </span><span class="s2">"/system.webServer/security/authentication/anonymousAuthentication"</span><span class="w"> </span><span class="nt">-Name</span><span class="w"> </span><span class="s2">"enabled"</span><span class="w"> </span><span class="nt">-Value</span><span class="w"> </span><span class="s2">"False"</span><span class="w">
</span></code></pre></div></div>

<p><strong>Option 2: Filebrowser in a Linux VM (Virtual Machine)</strong></p>

<p>This option involves creating a Linux virtual machine in Hyper-V and installing Filebrowser, a simple and effective web-based file manager, within that VM. Docker Desktop is not required for this option.</p>

<p><strong>1. Download a Linux ISO (Server Image)</strong></p>

<ol>
  <li><strong>Choose a Linux Distribution:</strong> Select a Linux distribution for your VM. Ubuntu Server, Debian, or CentOS are good choices for server environments. Ubuntu Server is often recommended for beginners.</li>
  <li><strong>Download Server ISO:</strong> Go to the official website of your chosen distribution (e.g., Ubuntu Server: <a href="https://ubuntu.com/server">https://ubuntu.com/server</a>) and download the server ISO image (usually a <code class="language-plaintext highlighter-rouge">.iso</code> file). Server images are typically smaller and optimized for server workloads (no graphical user interface by default).</li>
</ol>

<p><strong>2. Create the VM in Hyper-V Manager</strong></p>

<ol>
  <li><strong>Open Hyper-V Manager:</strong> Search for “Hyper-V Manager” in the Start Menu and open it.</li>
  <li><strong>Click “Quick Create…”:</strong> In the “Actions” pane on the right side of the Hyper-V Manager window, click on “Quick Create…”.</li>
  <li><strong>Select “Local installation source”:</strong> In the “Quick Create” window, choose “Local installation source” and click on “Change installation source…”.</li>
  <li><strong>Browse to the Linux ISO:</strong> Browse to the location where you downloaded the Linux ISO image and select it.</li>
  <li><strong>Uncheck “This virtual machine will run Windows”:</strong>  Make sure to uncheck the box labeled “This virtual machine will run Windows” since you are installing Linux.</li>
  <li><strong>Name your VM:</strong> Give your VM a descriptive name, for example, “FileServerVM”.</li>
  <li><strong>Click “More options” (Optional):</strong> Click “More options” to customize VM settings before creation.
      *   <strong>Generation:</strong> Choose “Generation 2” for modern VMs (supports UEFI and newer features) unless you have a specific reason to use “Generation 1”.
      *   <strong>Memory:</strong> Allocate RAM to the VM. At least 2GB is recommended, but 4GB or more will provide better performance. You can enable “Dynamic Memory” if you want Hyper-V to automatically adjust the RAM allocated to the VM based on its needs.
      *   <strong>Network:</strong> Select “Default Switch” for the network connection. This will connect your VM to your host’s network and provide internet access.</li>
  <li><strong>Click “Create Virtual Machine”:</strong> Click the “Create Virtual Machine” button to create the VM.</li>
</ol>

<p><strong>3. Install the Linux OS in the VM</strong></p>

<ol>
  <li><strong>Select the VM in Hyper-V Manager:</strong> In Hyper-V Manager, select the VM you just created (“FileServerVM”).</li>
  <li><strong>Click “Connect…”:</strong> Right-click on the VM and select “Connect…” to open a VM console window.</li>
  <li><strong>Click “Start”:</strong> In the VM console window, click the “Start” button to power on the VM.</li>
  <li><strong>Follow the Linux OS Installation Instructions:</strong> The VM will boot from the ISO image. Follow the on-screen instructions to install the Linux operating system. The installation process varies depending on the distribution you chose. Typically, you will be asked to:
      *   Choose a language and keyboard layout.
      *   Configure networking (you can often accept DHCP for initial setup).
      *   Create a user account (username and password).
      *   Partition disks and install the base OS.</li>
  <li><strong>Shut Down the VM after Installation:</strong> Once the Linux installation is complete, follow the distribution’s instructions to shut down or power off the VM from within the VM’s operating system.</li>
</ol>

<p><strong>4. Configure Networking (Optional - Static IP Address)</strong></p>

<p>If you want to access Filebrowser from other devices on your network consistently, it’s helpful to assign a static IP address to your VM. This step is optional if you only need to access it from your Windows 11 host.</p>

<ol>
  <li><strong>Connect to the VM:</strong> Start the VM and connect to it via Hyper-V Manager’s console. Log in with the user account you created during installation.</li>
  <li><strong>Edit Network Configuration File:</strong> The location and method for configuring a static IP address depend on your Linux distribution and network management tools. For Ubuntu Server using Netplan, you might edit the <code class="language-plaintext highlighter-rouge">/etc/netplan/01-netcfg.yaml</code> file using a text editor like <code class="language-plaintext highlighter-rouge">nano</code> or <code class="language-plaintext highlighter-rouge">vi</code> with <code class="language-plaintext highlighter-rouge">sudo</code> privileges:
      <code class="language-plaintext highlighter-rouge">bash
      sudo nano /etc/netplan/01-netcfg.yaml
     </code></li>
  <li><strong>Set Static IP Configuration:</strong>  Modify the YAML file to configure a static IP address, subnet mask, gateway, and DNS servers.  You’ll need to know your network’s IP address range, gateway IP, and DNS server IPs (often your router’s IP). Example configuration (adjust values to your network):</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  ```yaml
  network:
    version: 2
    renderer: networkd
    ethernets:
      eth0: # Or ens3, ens5 etc., check your interface name with `ip a`
        dhcp4: no
        addresses: [192.168.1.150/24] # Example static IP and subnet mask
        gateway4: 192.168.1.1      # Your router's IP
        nameservers:
          addresses: [8.8.8.8, 1.1.1.1] # Google Public DNS and Cloudflare DNS
  ```    4.  **Apply Network Configuration:** After saving the file, apply the new network configuration:
  ```bash
  sudo netplan apply
  ```    5.  **Verify Network Configuration:** Check if the static IP is correctly configured using `ip a` command and test network connectivity with `ping google.com`.
</code></pre></div></div>

<p><strong>5. Install a Web Server (Nginx) in the Linux VM</strong></p>

<p>Nginx is a popular, lightweight web server that will serve Filebrowser.</p>

<ol>
  <li><strong>Connect to the VM and Log In:</strong> Ensure your VM is running and connect to it via SSH or Hyper-V Manager’s console. Log in to your Linux VM.</li>
  <li><strong>Update Package List:</strong> Update the package lists for your distribution to ensure you have the latest package information:
      <code class="language-plaintext highlighter-rouge">bash
      sudo apt update  # For Debian/Ubuntu
      # sudo yum update # For CentOS/RHEL/Fedora
     </code></li>
  <li><strong>Install Nginx:</strong> Install Nginx using your distribution’s package manager:
      <code class="language-plaintext highlighter-rouge">bash
      sudo apt install nginx # For Debian/Ubuntu
      # sudo yum install nginx # For CentOS/RHEL/Fedora
     </code></li>
  <li><strong>Verify Nginx Installation:</strong> After installation, check if Nginx is running. You can usually access the default Nginx welcome page by opening a web browser and going to the VM’s IP address (or <code class="language-plaintext highlighter-rouge">http://localhost</code> from within the VM if you’re testing locally). You can also check the service status:
      <code class="language-plaintext highlighter-rouge">bash
      sudo systemctl status nginx
     </code></li>
</ol>

<p><strong>6. Install Filebrowser in the Linux VM</strong></p>

<p>Filebrowser is a simple, web-based file manager.</p>

<ol>
  <li><strong>Download Filebrowser Binary:</strong> Download the pre-compiled Filebrowser binary for Linux from the official GitHub releases page or using <code class="language-plaintext highlighter-rouge">curl</code>:
      <code class="language-plaintext highlighter-rouge">bash
      curl -fsSL https://github.com/filebrowser/filebrowser/releases/latest/download/linux-amd64-filebrowser.tar.gz | sudo tar -C /usr/local/bin -xzf -
     </code></li>
  <li><strong>Create a Filebrowser User:</strong> Create a dedicated system user for Filebrowser for security:
      <code class="language-plaintext highlighter-rouge">bash
      sudo useradd -r -s /bin/false filebrowser
     </code></li>
  <li><strong>Create Data Directory for Filebrowser:</strong> Create a directory where Filebrowser will store its configuration and data:
      <code class="language-plaintext highlighter-rouge">bash
      sudo mkdir /srv/filebrowser
      sudo chown filebrowser:filebrowser /srv/filebrowser
     </code></li>
  <li><strong>Create a systemd Service File for Filebrowser:</strong> To manage Filebrowser as a service that starts automatically on boot, create a systemd service file:
      <code class="language-plaintext highlighter-rouge">bash
      sudo nano /etc/systemd/system/filebrowser.service
     </code>
      Paste the following content into the file (adjust paths if necessary to match your system):</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  ```ini
  [Unit]
  Description=Filebrowser
  After=network.target

  [Service]
  User=filebrowser
  Group=filebrowser
  WorkingDirectory=/srv/filebrowser
  ExecStart=/usr/local/bin/filebrowser -d /srv/filebrowser/filebrowser.db
  Restart=always

  [Install]
  WantedBy=multi-user.target
  ```    5.  **Enable and Start Filebrowser Service:** Enable the service to start on boot and start it immediately:
  ```bash
  sudo systemctl enable filebrowser
  sudo systemctl start filebrowser
  ```    6.  **Verify Filebrowser Service:** Check if the Filebrowser service is running:
  ```bash
  sudo systemctl status filebrowser
  ```
</code></pre></div></div>

<p><strong>7. Configure Nginx as a Reverse Proxy for Filebrowser</strong></p>

<p>Using Nginx as a reverse proxy allows you to access Filebrowser on standard web ports (port 80 for HTTP) and manage access through Nginx’s configuration.</p>

<ol>
  <li><strong>Create Nginx Configuration File for Filebrowser:</strong> Create a new Nginx server block configuration file for Filebrowser:
      <code class="language-plaintext highlighter-rouge">bash
      sudo nano /etc/nginx/sites-available/filebrowser
     </code>
      Paste the following configuration into the file. Replace <code class="language-plaintext highlighter-rouge">your_server_ip_or_hostname</code> with your VM’s IP address or hostname if you configured one. Otherwise, you can use <code class="language-plaintext highlighter-rouge">localhost</code> or the VM’s IP for local access.</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  ```nginx
  server {
      listen 80;
      server_name your_server_ip_or_hostname; # Replace with your VM's IP or hostname

      location / {
          proxy_pass http://localhost:8080; # Filebrowser runs on port 8080 by default
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
      }
  }
  ```    2.  **Enable the Nginx Site:** Create a symbolic link to enable the configuration in Nginx's `sites-enabled` directory:
  ```bash
  sudo ln -s /etc/nginx/sites-available/filebrowser /etc/nginx/sites-enabled/
  ```    3.  **Test Nginx Configuration:** Test the Nginx configuration for syntax errors:
  ```bash
  sudo nginx -t
  ```    4.  **Reload Nginx:** If the test is successful, reload Nginx to apply the new configuration:
  ```bash
  sudo systemctl reload nginx
  ```
</code></pre></div></div>

<p><strong>8. Access Filebrowser in a Web Browser</strong></p>

<ol>
  <li><strong>Open a Web Browser:</strong> Open a web browser on your Windows 11 host (or any device on the same network if you configured a static IP for the VM).</li>
  <li><strong>Navigate to VM’s IP or Hostname:</strong> Go to <code class="language-plaintext highlighter-rouge">http://your_server_ip_or_hostname</code> (replace <code class="language-plaintext highlighter-rouge">your_server_ip_or_hostname</code> with the VM’s IP address or hostname you configured in Nginx). If you are accessing from within the VM or haven’t configured a hostname, you can use <code class="language-plaintext highlighter-rouge">http://localhost</code> or <code class="language-plaintext highlighter-rouge">http://127.0.0.1</code>.</li>
  <li><strong>Filebrowser Login Page:</strong> You should see the Filebrowser login page. The default credentials are <code class="language-plaintext highlighter-rouge">admin</code> for username and <code class="language-plaintext highlighter-rouge">admin</code> for password.</li>
  <li><strong>Change Default Credentials Immediately:</strong> <strong>Important Security Step:</strong> Log in with the default credentials and immediately change the admin password in Filebrowser’s settings for security.</li>
</ol>

<p><strong>Option 3: Cloud Commander in WSL 2 (Windows Subsystem for Linux 2)</strong></p>

<p>This option installs Cloud Commander, another web-based file manager, directly within your WSL 2 Linux environment. Docker Desktop is not required for this option, but WSL 2 is essential.</p>

<p><strong>1. Install a Web Server (Nginx) in WSL 2</strong></p>

<ol>
  <li><strong>Open your WSL 2 Linux Distribution:</strong> Open your installed WSL 2 distribution (e.g., Ubuntu) from the Start Menu.</li>
  <li><strong>Update Package List:</strong> Update the package lists:
      <code class="language-plaintext highlighter-rouge">bash
      sudo apt update
     </code></li>
  <li><strong>Install Nginx:</strong> Install Nginx:
      <code class="language-plaintext highlighter-rouge">bash
      sudo apt install nginx
     </code></li>
</ol>

<p><strong>2. Install Cloud Commander in WSL 2</strong></p>

<ol>
  <li><strong>Install Node.js and npm:</strong> Cloud Commander is built with Node.js. Install Node.js and npm (Node Package Manager):
      <code class="language-plaintext highlighter-rouge">bash
      sudo apt install nodejs npm
     </code></li>
  <li><strong>Install Cloud Commander Globally using npm:</strong> Install Cloud Commander globally so it can be accessed from anywhere in your WSL 2 environment:
      <code class="language-plaintext highlighter-rouge">bash
      sudo npm install -g cloudcmd
     </code></li>
  <li><strong>Create a systemd Service File (Optional but Recommended):</strong> For running Cloud Commander as a service, create a systemd service file:
      <code class="language-plaintext highlighter-rouge">bash
      sudo nano /etc/systemd/system/cloudcmd.service
     </code>
      Paste the following content into the file. Replace <code class="language-plaintext highlighter-rouge">your_linux_username</code> with your actual WSL 2 username:</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  ```ini
  [Unit]
  Description=Cloud Commander
  After=network.target

  [Service]
  ExecStart=/usr/bin/cloudcmd
  Restart=always
  User=your_linux_username # Replace 'your_linux_username' with your WSL 2 username

  [Install]
  WantedBy=multi-user.target
  ```    4.  **Enable and Start Cloud Commander Service:** Enable and start the service:
  ```bash
  sudo systemctl enable cloudcmd
  sudo systemctl start cloudcmd
  ```    5.  **Verify Cloud Commander Service:** Check if the service is running:
  ```bash
  sudo systemctl status cloudcmd
  ```
</code></pre></div></div>

<p><strong>3. Configure Nginx as a Reverse Proxy (Optional)</strong></p>

<p>Similar to Filebrowser, you can configure Nginx as a reverse proxy for Cloud Commander if you want to access it on standard ports or using a domain name. This is optional for basic home lab use. The configuration would be very similar to the Filebrowser Nginx configuration, just adjust the <code class="language-plaintext highlighter-rouge">proxy_pass</code> to point to Cloud Commander’s default port (usually 8000 or 8080, check Cloud Commander documentation).</p>

<p><strong>4. Access Cloud Commander in a Web Browser</strong></p>

<ol>
  <li><strong>Find your WSL 2 IP Address:</strong> To access Cloud Commander from your Windows host browser, you need to find the IP address of your WSL 2 instance. Open your WSL 2 terminal and run:
      <code class="language-plaintext highlighter-rouge">bash
      ip addr | grep eth0
     </code>
      Look for the <code class="language-plaintext highlighter-rouge">inet</code> address listed under the <code class="language-plaintext highlighter-rouge">eth0</code> interface. It will typically be in the <code class="language-plaintext highlighter-rouge">172.x.x.x</code> range.</li>
  <li><strong>Open a Web Browser:</strong> Open a web browser on your Windows 11 host.</li>
  <li><strong>Navigate to WSL 2 IP and Port:</strong> Go to <code class="language-plaintext highlighter-rouge">http://your_wsl2_ip:8000</code> (replace <code class="language-plaintext highlighter-rouge">your_wsl2_ip</code> with the IP address you found in the previous step). Port <code class="language-plaintext highlighter-rouge">8000</code> is Cloud Commander’s default port.</li>
  <li><strong>Cloud Commander Interface:</strong> You should see the Cloud Commander web interface in your browser.</li>
</ol>

<p><strong>File Management Operations (Filebrowser and Cloud Commander)</strong></p>

<p>Both Filebrowser and Cloud Commander provide similar core file management functionalities through their web interfaces:</p>

<ul>
  <li><strong>Upload:</strong> Upload files from your local computer to the server using an upload button or drag-and-drop.</li>
  <li><strong>Delete:</strong> Delete files and folders by selecting them and using a delete function (button or context menu).</li>
  <li><strong>Preview:</strong> Preview the contents of various file types (text files, images, PDFs, Markdown, etc.) directly in the browser.</li>
  <li><strong>Rename:</strong> Rename files and folders using a rename option.</li>
  <li><strong>Edit:</strong> Edit text-based files directly within the browser interface.</li>
</ul>

<p>Refer to the specific documentation of Filebrowser (<a href="https://github.com/filebrowser/filebrowser">https://github.com/filebrowser/filebrowser</a>) and Cloud Commander (<a href="https://github.com/coderaiser/cloudcmd">https://github.com/coderaiser/cloudcmd</a>) for details on their features and usage.</p>

<p><strong>Security Hardening for Your Home Lab</strong></p>

<p>Security is important even in a home lab environment. Implement these basic security measures:</p>

<ol>
  <li><strong>Strong Passwords:</strong> Use strong, unique passwords for all accounts: your Windows 11 user account, Linux user accounts (VM and WSL 2), and administrator accounts for Filebrowser and Cloud Commander. <strong>Change default passwords immediately after installation!</strong></li>
  <li><strong>Windows Firewall:</strong> Ensure Windows Firewall is enabled and properly configured. For a home lab, you might allow inbound traffic on ports 80 and 443 (if you set up HTTPS) only from your local network if you intend to access the file manager from other devices at home.</li>
  <li><strong>File Manager Security Settings:</strong> Explore the security settings within Filebrowser and Cloud Commander. Configure user permissions, access control, and consider enabling HTTPS (SSL/TLS) for encrypted communication, especially if you plan to access your file manager over the internet (generally not recommended for basic home labs without advanced security expertise).</li>
  <li><strong>HTTPS/SSL Certificates (Recommended):</strong> For secure access over HTTPS, especially if accessing your file manager from outside your local network, set up SSL/TLS certificates for your web server (Nginx in the VM/WSL 2 or IIS if using Windows Containers). Let’s Encrypt (<a href="https://letsencrypt.org/">https://letsencrypt.org/</a>) provides free SSL certificates.  The process typically involves:
    <ul>
      <li>Installing a tool like Certbot on your Linux VM or WSL 2 instance.</li>
      <li>Using Certbot to obtain a certificate for your domain name or IP address.</li>
      <li>Configuring Nginx (or IIS) to use the obtained SSL certificate and private key for HTTPS.</li>
      <li>(For dynamic IPs) Consider using Dynamic DNS (DDNS) if you need to access your home lab from the internet with a changing public IP address.</li>
    </ul>
  </li>
  <li><strong>Limit Network Exposure:</strong> For a basic home lab, it’s generally recommended to keep your file manager accessible only within your local home network and avoid exposing it directly to the public internet unless you have advanced security knowledge and a strong need to do so. If you do expose it, ensure you implement robust security measures, including HTTPS, strong authentication, and potentially a web application firewall (WAF).</li>
  <li><strong>Regular Updates:</strong> Keep your Windows 11 system, Linux VMs/WSL 2 distributions, and Filebrowser/Cloud Commander applications updated with the latest security patches. Regularly apply Windows Updates and use package managers in Linux (e.g., <code class="language-plaintext highlighter-rouge">apt update &amp;&amp; sudo apt upgrade</code>) to keep your software up to date.</li>
</ol>

<p><strong>Resource Monitoring</strong></p>

<p>Monitor your system’s resources to ensure optimal performance and identify potential bottlenecks:</p>

<ol>
  <li><strong>Windows Task Manager:</strong> Use Windows Task Manager (Ctrl+Shift+Esc) to get a quick overview of CPU, memory, disk, and network usage. The “Performance” tab shows overall utilization, and the “Processes” or “Details” tabs list resource usage by individual processes.</li>
  <li><strong>Resource Monitor:</strong> For more detailed resource analysis, use Resource Monitor (search for “resmon” in the Start Menu). It provides real-time graphs and in-depth information about resource usage by processes.</li>
  <li><strong>Hyper-V Manager:</strong> Hyper-V Manager displays the resource usage (CPU, Memory) of your virtual machines. Monitor VM performance to ensure they have sufficient resources allocated. Adjust VM memory and CPU allocation in Hyper-V Manager settings as needed.</li>
  <li><strong>Docker Desktop Dashboard:</strong> Docker Desktop provides a dashboard that shows resource usage by containers, allowing you to monitor container performance.</li>
</ol>

<p><strong>Backup Strategies</strong></p>

<p>Regular backups are crucial to protect your data against data loss due to hardware failure, software issues, or accidental deletion. Implement a backup strategy that suits your needs:</p>

<ol>
  <li><strong>Hyper-V VM Export:</strong> For VMs, use Hyper-V Manager to “Export” VMs. This creates a complete copy of the VM in a specified location, which you can restore later. Schedule regular VM exports as backups. You can also use PowerShell to automate VM exports, for example: <code class="language-plaintext highlighter-rouge">Export-VM -Name "FileServerVM" -Path "D:\Backup\VMBackups"</code>.</li>
  <li><strong>WSL 2 Backup and Restore:</strong> WSL 2 distributions can be exported and imported. Use the <code class="language-plaintext highlighter-rouge">wsl --export &lt;DistributionName&gt; &lt;FileName&gt;</code> command to export a distribution to a <code class="language-plaintext highlighter-rouge">.tar</code> file, and <code class="language-plaintext highlighter-rouge">wsl --import &lt;DistributionName&gt; &lt;InstallLocation&gt; &lt;FileName&gt;</code> to import it back. Example:
    <ul>
      <li>Export Ubuntu WSL 2 distribution: <code class="language-plaintext highlighter-rouge">wsl --export Ubuntu D:\Backup\wsl_ubuntu.tar</code></li>
      <li>Import Ubuntu WSL 2 distribution: <code class="language-plaintext highlighter-rouge">wsl --import Ubuntu D:\WSL\Ubuntu D:\Backup\wsl_ubuntu.tar</code></li>
    </ul>
  </li>
  <li><strong>File Manager Data Backup:</strong> Back up the data directories used by your file management application.
    <ul>
      <li><strong>For Filebrowser (VM):</strong> Back up the directory you configured as the shared directory in Filebrowser (e.g., <code class="language-plaintext highlighter-rouge">/srv/filebrowser/data</code> or your chosen data directory). You can use standard Linux backup tools like <code class="language-plaintext highlighter-rouge">tar</code> or <code class="language-plaintext highlighter-rouge">rsync</code> within the VM, or use Windows tools to back up the VM’s virtual hard disk (VHDX file). Example using <code class="language-plaintext highlighter-rouge">tar</code> within the VM: <code class="language-plaintext highlighter-rouge">sudo tar -czvf /backup/filebrowser_data_backup.tar.gz /srv/filebrowser/data</code>.</li>
      <li><strong>For Cloud Commander (WSL 2):</strong> Back up the important files and directories you are managing with Cloud Commander within your WSL 2 environment. You can use standard Linux backup tools within WSL 2, or access the WSL 2 file system from Windows and use Windows backup tools like <code class="language-plaintext highlighter-rouge">robocopy</code>. Example using <code class="language-plaintext highlighter-rouge">robocopy</code> from Windows to backup a WSL 2 directory: <code class="language-plaintext highlighter-rouge">robocopy "\\wsl$\Ubuntu\home\your_linux_username\CloudCommanderData" "D:\Backup\CloudCommanderData" /MIR</code>.</li>
      <li><strong>For IIS-based File Manager (Windows Container):</strong> If you are storing uploaded files persistently (e.g., by mounting a host volume to the container), back up the host directory where the files are stored. You can use Windows built-in backup tools or <code class="language-plaintext highlighter-rouge">robocopy</code>. Example using <code class="language-plaintext highlighter-rouge">robocopy</code>: <code class="language-plaintext highlighter-rouge">robocopy "C:\FileStorage" "D:\Backup\FileStorage" /MIR</code>.</li>
    </ul>
  </li>
</ol>

<p><strong>Troubleshooting</strong></p>

<p>If you encounter issues during setup or operation, here are some common troubleshooting steps:</p>

<ol>
  <li><strong>Connectivity Problems:</strong>
    <ul>
      <li><strong>VM/WSL 2 Not Reachable:</strong> Ensure your VM or WSL 2 instance is running. Check their status in Hyper-V Manager or using <code class="language-plaintext highlighter-rouge">wsl -l -v</code> in PowerShell. Verify the IP address is correctly configured and that you are using the correct IP and port in your browser.</li>
      <li><strong>Firewall Issues:</strong> Check Windows Firewall settings on your host machine and any firewall rules within your Linux VM or WSL 2 instance. Ensure that ports 80, 443, or any custom ports you are using are allowed through the firewall.</li>
    </ul>
  </li>
  <li><strong>Permission Errors:</strong>
    <ul>
      <li><strong>File Access Issues in File Managers:</strong> If you encounter permission errors when trying to access, upload, or modify files in Filebrowser or Cloud Commander, check the file and directory permissions in your Linux VM or WSL 2 instance. Ensure that the web server user (e.g., <code class="language-plaintext highlighter-rouge">nginx</code>, <code class="language-plaintext highlighter-rouge">filebrowser</code>, user running Cloud Commander) has the necessary read, write, and execute permissions on the directories you are trying to access. Use <code class="language-plaintext highlighter-rouge">chmod</code> and <code class="language-plaintext highlighter-rouge">chown</code> commands in Linux to adjust permissions.</li>
      <li><strong>IIS Container Permissions:</strong> For IIS-based file manager in Windows containers, ensure that the IIS_IUSRS user has the necessary permissions on the directories used by your application within the container.</li>
    </ul>
  </li>
  <li><strong>Service Failures:</strong>
    <ul>
      <li><strong>Filebrowser, Cloud Commander, Nginx Not Starting:</strong> If Filebrowser, Cloud Commander, or Nginx services fail to start, check their status using <code class="language-plaintext highlighter-rouge">systemctl status &lt;service_name&gt;</code> (e.g., <code class="language-plaintext highlighter-rouge">systemctl status filebrowser</code>, <code class="language-plaintext highlighter-rouge">systemctl status nginx</code>) in your Linux VM or WSL 2 terminal. Examine the service logs for error messages that can provide clues about the cause of the failure. Service logs are typically located in <code class="language-plaintext highlighter-rouge">/var/log/</code> directory (e.g., <code class="language-plaintext highlighter-rouge">/var/log/nginx/error.log</code>, <code class="language-plaintext highlighter-rouge">/var/log/syslog</code>). Use <code class="language-plaintext highlighter-rouge">journalctl -u &lt;service_name&gt;</code> to view systemd service logs.</li>
      <li><strong>Docker Container Issues:</strong> If your IIS-based Docker container is not working, check the container logs using <code class="language-plaintext highlighter-rouge">docker logs &lt;container_name&gt;</code> (e.g., <code class="language-plaintext highlighter-rouge">docker logs filemanager</code>). Look for error messages during container startup or application runtime. Ensure the Docker image was built correctly and that all necessary components are included.</li>
    </ul>
  </li>
  <li><strong>Browser Access Issues:</strong>
    <ul>
      <li><strong>“Connection Refused” or “Page Not Found”:</strong> If you cannot access your file manager in the browser, double-check the IP address and port you are using. Ensure that the web server (Nginx or IIS) is running and listening on the correct port. Verify that there are no firewall rules blocking access to the port.</li>
      <li><strong>DNS Resolution Issues:</strong> If you are using a hostname to access your file manager, ensure that DNS resolution is working correctly. Test if you can ping the hostname. If DNS is not configured correctly, try accessing using the IP address directly.</li>
    </ul>
  </li>
</ol>

<p><strong>Management and Automation Tools</strong></p>

<p>To manage and automate your home lab environment, consider using these tools:</p>

<ol>
  <li><strong>Hyper-V Manager:</strong> Use Hyper-V Manager for managing virtual machines. It provides a graphical interface for creating, starting, stopping, configuring, and monitoring VMs.</li>
  <li><strong>Docker Desktop Dashboard:</strong> Docker Desktop provides a dashboard for managing containers, images, and volumes. You can use it to monitor container status, view logs, and perform basic container operations.</li>
  <li><strong>Windows Admin Center (WAC):</strong> Windows Admin Center (<a href="https://docs.microsoft.com/en-us/windows-server/manage/windows-admin-center/overview">https://docs.microsoft.com/en-us/windows-server/manage/windows-admin-center/overview</a>) is a web-based management interface for Windows Server and Windows 10/11. While not strictly necessary for this guide, WAC can be installed on your Windows 11 host to provide a centralized web interface for managing Hyper-V hosts and VMs, simplifying tasks like VM creation, monitoring, and basic administration.</li>
  <li><strong>PowerShell:</strong> Leverage PowerShell cmdlets for automating tasks related to Hyper-V and Windows features. For example:
    <ul>
      <li>List running VMs: <code class="language-plaintext highlighter-rouge">Get-VM | Select-Object Name, State, MemoryAssigned</code></li>
      <li>Start a VM: <code class="language-plaintext highlighter-rouge">Start-VM -Name "FileServerVM"</code></li>
      <li>Stop a VM: <code class="language-plaintext highlighter-rouge">Stop-VM -Name "FileServerVM"</code></li>
      <li>Manage Windows Features: <code class="language-plaintext highlighter-rouge">Enable-WindowsOptionalFeature</code>, <code class="language-plaintext highlighter-rouge">Disable-WindowsOptionalFeature</code></li>
    </ul>
  </li>
  <li><strong>WSL 2 Command Line:</strong> Use the WSL 2 command line (<code class="language-plaintext highlighter-rouge">wsl</code>) and standard Linux command-line tools for managing your WSL 2 environment, installing software, configuring services, and automating tasks within Linux.</li>
  <li><strong>Docker CLI:</strong> Use the Docker command-line interface (<code class="language-plaintext highlighter-rouge">docker</code>) for managing Docker images, containers, and volumes from PowerShell or the Windows command prompt.</li>
</ol>

<p><strong>Conclusion</strong></p>

<p>Congratulations! You have successfully set up a home lab environment on Windows 11 Enterprise that provides virtualization and containerization capabilities, along with a web-based file management system. You’ve learned how to:</p>

<ul>
  <li>Enable Hyper-V and Windows Containers on Windows 11.</li>
  <li>Deploy a simple IIS-based file management application in a Windows container.</li>
  <li>Create a Linux VM in Hyper-V and install Filebrowser for file management.</li>
  <li>Install Cloud Commander in WSL 2 for a lightweight file management solution.</li>
  <li>Understand basic security hardening practices for your home lab.</li>
  <li>Monitor system resources and implement basic backup strategies.</li>
</ul>

<p>This setup provides a solid foundation for further exploration and experimentation in your home lab.</p>

<p><strong>Next Steps:</strong></p>

<ul>
  <li><strong>Explore Advanced Features:</strong> Dive deeper into the advanced features of Hyper-V, Docker, Filebrowser, and Cloud Commander.</li>
  <li><strong>Experiment with Other Services:</strong> Expand your home lab by deploying other services and applications, such as web servers, databases, media servers, or development tools, in VMs or containers.</li>
  <li><strong>Advanced Networking:</strong> Explore advanced networking configurations in Hyper-V and WSL 2, such as creating virtual networks, VLANs, and configuring network bridging or bonding.</li>
  <li><strong>Automation:</strong> Enhance your home lab management by automating tasks using PowerShell for Windows and scripting in Linux (e.g., Bash scripting).</li>
  <li><strong>Further Security Hardening:</strong> Implement more advanced security measures, such as intrusion detection/prevention systems (IDS/IPS), web application firewalls (WAFs), and regular security audits.</li>
</ul>]]></content><author><name></name></author><category term="scratchpad" /></entry><entry><title type="html">Purge WSL2 from Windows 11 (Hyper-V only)</title><link href="https://ib.bsb.br/purge-wsl2-from-windows-11-hyper-v-only/" rel="alternate" type="text/html" title="Purge WSL2 from Windows 11 (Hyper-V only)" /><published>2025-02-03T00:00:00+00:00</published><updated>2025-02-04T15:48:29+00:00</updated><id>https://ib.bsb.br/purge-wsl2-from-windows-11-hyper-v-only</id><content type="html" xml:base="https://ib.bsb.br/purge-wsl2-from-windows-11-hyper-v-only/"><![CDATA[<p>Removing WSL and WSL2 from Windows 11 to work exclusively with Hyper-V involves a set of deliberate steps designed to eliminate the Linux compatibility layer and its associated virtual environment, without disabling Hyper-V itself. Below is a detailed guide that covers how to perform these actions, the technical rationale behind them, and the impacts on your system.</p>

<h4 id="1-step-by-step-removal-process">1. Step-by-Step Removal Process</h4>

<p><strong>Step 1: Uninstall Linux Distributions</strong></p>
<ul>
  <li><strong>Action:</strong> Unregister and remove any installed Linux distributions.</li>
  <li><strong>Command Example:</strong>
    <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">wsl</span><span class="w"> </span><span class="nt">--list</span><span class="w"> </span><span class="nt">--quiet</span><span class="w">  </span><span class="c"># Lists all installed distributions</span><span class="w">
</span><span class="n">wsl</span><span class="w"> </span><span class="nt">--unregister</span><span class="w"> </span><span class="err">&lt;</span><span class="nx">DistributionName</span><span class="err">&gt;</span><span class="w">  </span><span class="c"># Replace &lt;DistributionName&gt; (e.g., Ubuntu) for each distribution</span><span class="w">
</span></code></pre></div>    </div>
  </li>
  <li><strong>Rationale:</strong> This step ensures that no residual Linux distributions are left which might continue to consume system resources.</li>
</ul>

<p><strong>Step 2: Disable WSL and Associated Features</strong></p>
<ul>
  <li><strong>Action:</strong> Open the “Turn Windows features on or off” dialog.
    <ul>
      <li>Uncheck <strong>Windows Subsystem for Linux</strong>.</li>
      <li>Uncheck <strong>Virtual Machine Platform</strong>.</li>
    </ul>
  </li>
  <li><strong>Note:</strong> Although the Virtual Machine Platform is used by WSL2, some features like Windows Sandbox also depend on it. Consider whether you need these features before disabling.</li>
  <li><strong>Action:</strong> Reboot the system to finalize these changes.</li>
</ul>

<p><strong>Step 3: Remove Residual Files and Configuration Data</strong></p>
<ul>
  <li><strong>Action:</strong> Clean up any leftover files that may reside in the user profile.</li>
  <li><strong>Command Example:</strong>
    <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Remove-Item</span><span class="w"> </span><span class="nt">-Recurse</span><span class="w"> </span><span class="nt">-Force</span><span class="w"> </span><span class="s2">"</span><span class="nv">$</span><span class="nn">env</span><span class="p">:</span><span class="nv">USERPROFILE</span><span class="s2">\AppData\Local\Packages\*CanonicalGroup.Ubuntu*"</span><span class="w">
</span></code></pre></div>    </div>
  </li>
  <li><strong>Rationale:</strong> This recovers disk space and removes configuration data that is no longer needed.</li>
</ul>

<p><strong>Step 4: Verify Hyper-V Remains Active</strong></p>
<ul>
  <li><strong>Action:</strong> Check that Hyper-V is still enabled, since it is independent of WSL/WSL2.</li>
  <li><strong>Command Example:</strong>
    <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Get-WindowsOptionalFeature</span><span class="w"> </span><span class="nt">-Online</span><span class="w"> </span><span class="nt">-FeatureName</span><span class="w"> </span><span class="nx">Microsoft-Hyper-V</span><span class="w">
</span></code></pre></div>    </div>
  </li>
  <li><strong>If needed, re-enable Hyper-V:</strong>
    <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Enable-WindowsOptionalFeature</span><span class="w"> </span><span class="nt">-Online</span><span class="w"> </span><span class="nt">-FeatureName</span><span class="w"> </span><span class="nx">Microsoft-Hyper-V-All</span><span class="w">
</span></code></pre></div>    </div>
  </li>
  <li><strong>Rationale:</strong> This confirms that the removal of WSL components did not inadvertently disable Hyper-V’s core functionalities.</li>
</ul>

<h4 id="2-why-this-process-works-technical-rationale">2. Why This Process Works (Technical Rationale)</h4>

<ul>
  <li><strong>WSL/WSL2 Architecture:</strong>
    <ul>
      <li>WSL provides a compatibility layer for running Linux binaries on Windows. WSL2, in particular, utilizes a lightweight VM managed by the Virtual Machine Platform. Removing these components stops the Linux interface and associated VM without affecting Hyper-V.</li>
    </ul>
  </li>
  <li><strong>Hyper-V Independence:</strong>
    <ul>
      <li>Hyper-V is a Type 1 hypervisor that operates directly on the hardware abstraction layer. It remains fully operational independent of the WSL components. Therefore, disabling WSL/WSL2 frees up resources while leaving your primary virtualization platform intact.</li>
    </ul>
  </li>
  <li><strong>Clean Removal:</strong>
    <ul>
      <li>By unregistering distributions and disabling the specific Windows features, you ensure that no parts of the WSL layer or its supporting services remain active. This prevents resource conflicts and can potentially simplify system configuration, especially if you rely exclusively on Hyper-V for virtual machine management.</li>
    </ul>
  </li>
</ul>

<h4 id="3-impacts-on-system-functionality">3. Impacts on System Functionality</h4>

<p><strong>Consequences</strong></p>
<ul>
  <li><strong>Loss of Native Linux Integration:</strong>
    <ul>
      <li>You will no longer have immediate access to Linux command-line tools or distributions on Windows.</li>
      <li>Tools and extensions (e.g., for Visual Studio Code) that depend on WSL may no longer work.</li>
    </ul>
  </li>
  <li><strong>Tool Compatibility Changes:</strong>
    <ul>
      <li>Docker Desktop users who rely on the WSL2 backend must reconfigure Docker to use the Hyper-V backend or Windows Containers.</li>
    </ul>
  </li>
</ul>

<p><strong>Benefits</strong></p>
<ul>
  <li><strong>Resource Optimization:</strong>
    <ul>
      <li>Reclaim system resources (memory, CPU, storage allocated for WSL2’s virtual machine) for use by Hyper-V, potentially improving performance.</li>
    </ul>
  </li>
  <li><strong>Simplified Virtualization Environment:</strong>
    <ul>
      <li>Reduced complexity in virtualization settings by eliminating duplicate virtualization layers.</li>
      <li>Less potential for conflicts between different virtualization and containerization environments.</li>
    </ul>
  </li>
</ul>

<p><strong>Limitations</strong></p>
<ul>
  <li><strong>Reduced Flexibility:</strong>
    <ul>
      <li>Removing WSL/WSL2 means you lose the ability to run Linux applications natively within Windows, which is beneficial for development and testing.</li>
    </ul>
  </li>
  <li><strong>Dependency Impact:</strong>
    <ul>
      <li>Certain applications or environments that integrate with WSL2 will require reconfiguration or alternative solutions.</li>
    </ul>
  </li>
</ul>

<h4 id="final-verification">Final Verification</h4>

<p>After completing the steps:</p>
<ul>
  <li><strong>Confirm no Linux distributions remain active:</strong>
    <div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">wsl</span><span class="w"> </span><span class="nt">--list</span><span class="w">  </span><span class="c"># Expected output: "No installed distributions."</span><span class="w">
</span></code></pre></div>    </div>
  </li>
  <li><strong>Test Hyper-V:</strong>
    <ul>
      <li>Use Hyper-V Manager to create and run a virtual machine to verify that Hyper-V operates as expected.</li>
    </ul>
  </li>
</ul>

<p>This comprehensive process ensures that you remove WSL/WSL2 completely while continuing to leverage Hyper-V exclusively, along with an understanding of the technical and practical impacts of this change.</p>]]></content><author><name></name></author><category term="scratchpad" /></entry><entry><title type="html">KHOJ Emacs</title><link href="https://ib.bsb.br/khoj-emacs/" rel="alternate" type="text/html" title="KHOJ Emacs" /><published>2025-01-29T00:00:00+00:00</published><updated>2025-02-01T21:29:53+00:00</updated><id>https://ib.bsb.br/khoj-emacs</id><content type="html" xml:base="https://ib.bsb.br/khoj-emacs/"><![CDATA[<h3 id="step-1-install-emacs"><strong>Step 1: Install Emacs</strong></h3>

<p><strong>For Linux:</strong></p>

<ul>
  <li>Open your terminal and run:
    <ul>
      <li><strong>Debian/Ubuntu:</strong> <code class="language-plaintext highlighter-rouge">sudo apt-get install emacs</code></li>
      <li><strong>Fedora:</strong> <code class="language-plaintext highlighter-rouge">sudo dnf install emacs</code></li>
      <li><strong>Arch Linux:</strong> <code class="language-plaintext highlighter-rouge">sudo pacman -S emacs</code></li>
    </ul>
  </li>
</ul>

<p><strong>For macOS:</strong></p>

<ul>
  <li>If you have Homebrew installed, run:
    <ul>
      <li><code class="language-plaintext highlighter-rouge">brew install emacs</code></li>
    </ul>
  </li>
  <li>Or download Emacs directly from <a href="https://emacsformacosx.com/">emacsformacosx.com</a>.</li>
</ul>

<p><strong>For Windows:</strong></p>

<ul>
  <li>Download the installer from the <a href="https://www.gnu.org/software/emacs/download.html#windows">GNU Emacs website</a>.</li>
  <li>Run the installer and follow the prompts.</li>
</ul>

<hr />

<h3 id="step-2-get-your-khoj-api-key"><strong>Step 2: Get Your Khoj API Key</strong></h3>

<ol>
  <li>
    <p><strong>Sign Up or Log In:</strong></p>

    <ul>
      <li>Go to <a href="https://khoj.ai/">Khoj.ai</a> and create an account or log in.</li>
    </ul>
  </li>
  <li>
    <p><strong>Access the Web App:</strong></p>

    <ul>
      <li>Navigate to the <a href="https://app.khoj.dev/">Khoj Web App</a>.</li>
    </ul>
  </li>
  <li>
    <p><strong>Generate an API Key:</strong></p>

    <ul>
      <li>Click on your profile or settings.</li>
      <li>Find the <strong>API Keys</strong> section.</li>
      <li>Generate a new API key.</li>
      <li><strong>Important:</strong> Copy and save this API key—you’ll need it soon.</li>
    </ul>
  </li>
</ol>

<hr />

<h3 id="step-3-set-up-your-emacs-configuration"><strong>Step 3: Set Up Your Emacs Configuration</strong></h3>

<p>We’ll create a minimal configuration file to set up Khoj in Emacs.</p>

<p><strong>Locate or Create the Emacs Init File (<code class="language-plaintext highlighter-rouge">init.el</code>):</strong></p>

<ul>
  <li>
    <p><strong>On Linux/macOS:</strong></p>

    <ul>
      <li>The file is typically located at <code class="language-plaintext highlighter-rouge">~/.emacs.d/init.el</code>.</li>
      <li>If it doesn’t exist, you can create it:
        <ul>
          <li>Open a terminal.</li>
          <li>Run <code class="language-plaintext highlighter-rouge">mkdir -p ~/.emacs.d</code> to ensure the directory exists.</li>
          <li>Run <code class="language-plaintext highlighter-rouge">touch ~/.emacs.d/init.el</code> to create the file.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p><strong>On Windows:</strong></p>

    <ul>
      <li>The file may be located at <code class="language-plaintext highlighter-rouge">C:\Users\YourUsername\AppData\Roaming\.emacs.d\init.el</code>.</li>
      <li>You might need to enable viewing hidden files to see the AppData folder.</li>
      <li>Create the <code class="language-plaintext highlighter-rouge">.emacs.d</code> folder and <code class="language-plaintext highlighter-rouge">init.el</code> file if they don’t exist.</li>
    </ul>
  </li>
</ul>

<p><strong>Edit <code class="language-plaintext highlighter-rouge">init.el</code>:</strong></p>

<p>Open <code class="language-plaintext highlighter-rouge">init.el</code> in Emacs or any text editor and add the following content:</p>

<div class="language-emacs-lisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">;;; Minimal init.el for using Khoj</span>

<span class="c1">;; 1. Initialize package sources</span>
<span class="p">(</span><span class="nb">require</span> <span class="ss">'package</span><span class="p">)</span>
<span class="p">(</span><span class="k">setq</span> <span class="nv">package-archives</span>
      <span class="o">'</span><span class="p">((</span><span class="s">"gnu"</span> <span class="o">.</span> <span class="s">"https://elpa.gnu.org/packages/"</span><span class="p">)</span>
        <span class="p">(</span><span class="s">"melpa-stable"</span> <span class="o">.</span> <span class="s">"https://stable.melpa.org/packages/"</span><span class="p">)))</span>
<span class="p">(</span><span class="nv">package-initialize</span><span class="p">)</span>

<span class="c1">;; 2. Install use-package if it's not already installed</span>
<span class="p">(</span><span class="nb">unless</span> <span class="p">(</span><span class="nv">package-installed-p</span> <span class="ss">'use-package</span><span class="p">)</span>
  <span class="p">(</span><span class="nb">unless</span> <span class="nv">package-archive-contents</span>
    <span class="p">(</span><span class="nv">package-refresh-contents</span><span class="p">))</span>
  <span class="p">(</span><span class="nv">package-install</span> <span class="ss">'use-package</span><span class="p">))</span>
<span class="p">(</span><span class="nb">require</span> <span class="ss">'use-package</span><span class="p">)</span>
<span class="p">(</span><span class="k">setq</span> <span class="nv">use-package-always-ensure</span> <span class="no">t</span><span class="p">)</span>

<span class="c1">;; 3. Install and configure Khoj</span>
<span class="p">(</span><span class="nb">use-package</span> <span class="nv">khoj</span>
  <span class="ss">:pin</span> <span class="nv">melpa-stable</span>
  <span class="ss">:bind</span> <span class="p">(</span><span class="s">"C-c s"</span> <span class="o">.</span> <span class="nv">khoj</span><span class="p">)</span>  <span class="c1">;; Press Ctrl+c then s to open Khoj</span>
  <span class="ss">:config</span>
  <span class="p">(</span><span class="k">setq</span> <span class="nv">khoj-api-key</span> <span class="s">"YOUR_KHOJ_API_KEY"</span>  <span class="c1">;; Replace with your API key</span>
        <span class="nv">khoj-server-url</span> <span class="s">"https://app.khoj.dev"</span><span class="p">))</span>
</code></pre></div></div>

<p><strong>Replace <code class="language-plaintext highlighter-rouge">YOUR_KHOJ_API_KEY</code> with the API key you obtained earlier.</strong></p>

<hr />

<h3 id="step-4-start-emacs-and-install-khoj"><strong>Step 4: Start Emacs and Install Khoj</strong></h3>

<ol>
  <li>
    <p><strong>Launch Emacs:</strong></p>

    <ul>
      <li>Open Emacs as you normally would (e.g., by clicking its icon or running <code class="language-plaintext highlighter-rouge">emacs</code> in the terminal).</li>
    </ul>
  </li>
  <li>
    <p><strong>Allow Packages to Install:</strong></p>

    <ul>
      <li>Emacs will read your <code class="language-plaintext highlighter-rouge">init.el</code> file and start installing the packages specified (<code class="language-plaintext highlighter-rouge">use-package</code> and <code class="language-plaintext highlighter-rouge">khoj</code>).</li>
      <li>This may take a few minutes depending on your internet connection.</li>
      <li>You can monitor the installation progress in the <code class="language-plaintext highlighter-rouge">*Messages*</code> buffer or the minibuffer at the bottom.</li>
    </ul>
  </li>
  <li>
    <p><strong>Restart Emacs (Recommended):</strong></p>

    <ul>
      <li>After installation completes, it’s a good idea to restart Emacs to ensure all settings take effect.</li>
    </ul>
  </li>
</ol>

<hr />

<h3 id="step-5-use-khoj-in-emacs"><strong>Step 5: Use Khoj in Emacs</strong></h3>

<p><strong>Access the Khoj Interface:</strong></p>

<ul>
  <li>Press <code class="language-plaintext highlighter-rouge">Ctrl + c</code> then <code class="language-plaintext highlighter-rouge">s</code> (<code class="language-plaintext highlighter-rouge">C-c s</code>) to open the Khoj menu.</li>
  <li>Alternatively, you can use <code class="language-plaintext highlighter-rouge">M-x khoj</code> (press <code class="language-plaintext highlighter-rouge">Alt + x</code>, then type <code class="language-plaintext highlighter-rouge">khoj</code>, and press <code class="language-plaintext highlighter-rouge">Enter</code>).</li>
</ul>

<p><strong>Perform a Search:</strong></p>

<ol>
  <li>After opening Khoj, press <code class="language-plaintext highlighter-rouge">s</code> for search.</li>
  <li>Type your query in natural language, for example:
    <ul>
      <li>“What meetings do I have next week?”</li>
    </ul>
  </li>
  <li>Press <code class="language-plaintext highlighter-rouge">Enter</code> to see search results from your notes.</li>
</ol>

<p><strong>Start a Chat Session:</strong></p>

<ol>
  <li>Open Khoj (<code class="language-plaintext highlighter-rouge">C-c s</code>), then press <code class="language-plaintext highlighter-rouge">c</code> for chat.</li>
  <li>Ask a question or start a conversation, such as:
    <ul>
      <li>“Summarize my notes on project X.”</li>
    </ul>
  </li>
  <li>Khoj will provide responses based on your data.</li>
</ol>

<hr />

<h3 id="tips-to-keep-things-simple"><strong>Tips to Keep Things Simple</strong></h3>

<ul>
  <li>
    <p><strong>Avoid Overloading Emacs:</strong></p>

    <ul>
      <li>Stick to this minimal setup to prevent getting overwhelmed.</li>
      <li>Refrain from adding extra plugins or configurations until you’re comfortable.</li>
    </ul>
  </li>
  <li>
    <p><strong>Learn Gradually:</strong></p>

    <ul>
      <li>Familiarize yourself with basic Emacs commands.</li>
      <li>Use <code class="language-plaintext highlighter-rouge">C-h t</code> (Ctrl + h, then t) to access the Emacs tutorial.</li>
      <li>Remember that it’s okay to take it slow.</li>
    </ul>
  </li>
  <li>
    <p><strong>Get Help When Needed:</strong></p>

    <ul>
      <li>Consult the <a href="https://docs.khoj.dev/clients/emacs">Khoj Documentation</a> for more details.</li>
      <li>Join communities or forums if you have questions.</li>
    </ul>
  </li>
</ul>

<hr />

<p><strong>You’re all set!</strong></p>

<p>With this minimal configuration, you can now use Khoj within Emacs without the complexity. Enjoy exploring your notes and leveraging Khoj’s powerful features in a simplified environment.</p>]]></content><author><name></name></author><category term="software" /></entry><entry><title type="html">oneTAB bak</title><link href="https://ib.bsb.br/onetab-bak/" rel="alternate" type="text/html" title="oneTAB bak" /><published>2025-01-28T00:00:00+00:00</published><updated>2025-02-01T21:29:53+00:00</updated><id>https://ib.bsb.br/onetab-bak</id><content type="html" xml:base="https://ib.bsb.br/onetab-bak/"><![CDATA[<p><code class="language-plaintext highlighter-rouge">https://activepieces.com</code></p>

<p><code class="language-plaintext highlighter-rouge">https://agenticengineer.com/agentic-blogs/flagship/when-to-use-prompt-chains</code></p>

<p><code class="language-plaintext highlighter-rouge">https://agentprotocol.ai</code></p>

<p><code class="language-plaintext highlighter-rouge">https://agpt.co</code></p>

<p><code class="language-plaintext highlighter-rouge">https://aimspress.com/article/doi/10.3934/aci.2024019</code></p>

<p><code class="language-plaintext highlighter-rouge">https://airexplorer.net/en/download</code></p>

<p><code class="language-plaintext highlighter-rouge">https://amazingcto.com/postgres-for-everything</code></p>

<p><code class="language-plaintext highlighter-rouge">https://amazon.com/-/es/Alphasmart-Alpha-Smart-Processing-Computadora/dp/B002WJ8VLM</code></p>

<p><code class="language-plaintext highlighter-rouge">https://anthropic.com</code></p>

<p><code class="language-plaintext highlighter-rouge">https://app.heydola.com/events/0726465e-cdd3-11ef-933a-f2b79ce5e6e5</code></p>

<p><code class="language-plaintext highlighter-rouge">https://app.netbird.io/install</code></p>

<p><code class="language-plaintext highlighter-rouge">https://app.toolhouse.ai/chat/4c838516-3d77-4a72-9d7f-ccabb7b82eee</code></p>

<p><code class="language-plaintext highlighter-rouge">https://appgen.groqlabs.com/?utm_campaign=APEX%20Weekly%20Newsletter&amp;utm_medium=email&amp;_hsenc=p2ANqtz--G-rMcjWgqzRkqx7bkCSXWb2rrz82dRueVu8P-1OX8kqnmgntVW5y8mHie0UQjO1XoeHMhtvWAPpe77_VPlQtLlyWkKw&amp;_hsmi=341519727&amp;utm_content=341519727&amp;utm_source=hs_email</code></p>

<p><code class="language-plaintext highlighter-rouge">https://apps.apple.com/us/app/grok/id6670324846</code></p>

<p><code class="language-plaintext highlighter-rouge">https://arxiv.org/abs/2410.20878v1</code></p>

<p><code class="language-plaintext highlighter-rouge">https://arxiv.org/pdf/2309.00384.pdf</code></p>

<p><code class="language-plaintext highlighter-rouge">https://belva.ai/?utm_campaign=taaft&amp;utm_source=newsletter.theresanaiforthat.com&amp;utm_medium=email&amp;utm_content=sponsored&amp;_bhlid=132c36ed4aecaec90b7d2cc0cf5e2705349c03f9</code></p>

<p><code class="language-plaintext highlighter-rouge">https://blockwebsite.tilda.ws/historyexportchrome</code></p>

<p><code class="language-plaintext highlighter-rouge">https://botpress.com</code></p>

<p><code class="language-plaintext highlighter-rouge">https://cambioml.com/anyparser</code></p>

<p><code class="language-plaintext highlighter-rouge">https://cambioml.com/introduction</code></p>

<p><code class="language-plaintext highlighter-rouge">https://carlonicolini.github.io/sections/tech/2025/01/16/Prompt-chaining-with-foundational-models.html</code></p>

<p><code class="language-plaintext highlighter-rouge">https://chrome//apps</code></p>

<p><code class="language-plaintext highlighter-rouge">https://chrome//extensions</code></p>

<p><code class="language-plaintext highlighter-rouge">https://chrome//settings/help</code></p>

<p><code class="language-plaintext highlighter-rouge">https://chromewebstore.google.com/detail/gitingest-turn-any-git-re/adfjahbijlkjfoicpjkhjicpjpjfaood</code></p>

<p><code class="language-plaintext highlighter-rouge">https://clipboard.quickaccesspopup.com</code></p>

<p><code class="language-plaintext highlighter-rouge">https://code.jeanlalonde.ca</code></p>

<p><code class="language-plaintext highlighter-rouge">https://code.jeanlalonde.ca/mytunescovers</code></p>

<p><code class="language-plaintext highlighter-rouge">https://code.jeanlalonde.ca/objcsv-library</code></p>

<p><code class="language-plaintext highlighter-rouge">https://cohere.com/llmu/chaining-prompts</code></p>

<p><code class="language-plaintext highlighter-rouge">https://cohere.com/v2/docs/llamaindex</code></p>

<p><code class="language-plaintext highlighter-rouge">https://community.koyeb.com/t/changelog-76-new-plans-deploy-ai-models-in-one-click-and-more/2906?utm_campaign=Changelog+%2377&amp;utm_content=Changelog+%2377&amp;utm_medium=email_action&amp;utm_source=kmail</code></p>

<p><code class="language-plaintext highlighter-rouge">https://community.koyeb.com/t/changelog-77-new-ai-models-in-one-click-app-catalog-faster-out-of-memory-detection-and-more/3021?utm_campaign=Changelog+%2377&amp;utm_content=Changelog+%2377&amp;utm_medium=email_action&amp;utm_source=kmail</code></p>

<p><code class="language-plaintext highlighter-rouge">https://community.openai.com/c/announcements/6</code></p>

<p><code class="language-plaintext highlighter-rouge">https://console.groq.com/docs/livekit?utm_campaign=APEX%20Weekly%20Newsletter&amp;utm_medium=email&amp;_hsenc=p2ANqtz--sloiwLakdh1LR3ivmPqgubh7eVa9H2LGA-BmRTYB0DprINxN7-AnDriiOA9Z94kmAJI-en2XAWukUPti-MnHGMEWGOA&amp;_hsmi=341519727&amp;utm_content=341519727&amp;utm_source=hs_email</code></p>

<p><code class="language-plaintext highlighter-rouge">https://console.groq.com/docs/speech-text</code></p>

<p><code class="language-plaintext highlighter-rouge">https://console.groq.com/docs/toolhouse?utm_campaign=APEX%20Weekly%20Newsletter&amp;utm_medium=email&amp;_hsenc=p2ANqtz--uPyjMrEVn1ebcJ1SiWVZZSTMpmP3dRTuIT84R_Hx5MHac4tG-gWI5OfhN_OXD1xCS0jUKNuVsKbY64dYgYh0Cbq4SqA&amp;_hsmi=342545649&amp;utm_content=342545649&amp;utm_source=hs_email</code></p>

<p><code class="language-plaintext highlighter-rouge">https://craftpolish.com/blog/2022/8/17/sustine-et-abstine-the-stoic-maxim</code></p>

<p><code class="language-plaintext highlighter-rouge">https://csvbuddy.quickaccesspopup.com</code></p>

<p><code class="language-plaintext highlighter-rouge">https://curiouscomposition.com/hi.html</code></p>

<p><code class="language-plaintext highlighter-rouge">https://datacamp.com/tutorial/prompt-chaining-llm</code></p>

<p><code class="language-plaintext highlighter-rouge">https://developer.chrome.com/blog/ai-challenge-winners?utm_source=email&amp;utm_medium=newsletter&amp;utm_campaign=dev_program_jan</code></p>

<p><code class="language-plaintext highlighter-rouge">https://docs.aide.dev/welcome/setting-up</code></p>

<p><code class="language-plaintext highlighter-rouge">https://docs.llamaindex.ai/en/latest/module_guides/workflow</code></p>

<p><code class="language-plaintext highlighter-rouge">https://docs.llamaindex.ai/en/stable/examples/agent/agent_workflow_basic</code></p>

<p><code class="language-plaintext highlighter-rouge">https://docs.llamaindex.ai/en/stable/understanding/agent/multi_agents</code></p>

<p><code class="language-plaintext highlighter-rouge">https://dottxt-ai.github.io/outlines/latest</code></p>

<p><code class="language-plaintext highlighter-rouge">https://dreams-of-an-electric-mind.webflow.io</code></p>

<p><code class="language-plaintext highlighter-rouge">https://drive.google.com/drive/search?q=xbel</code></p>

<p><code class="language-plaintext highlighter-rouge">https://dust.tt</code></p>

<p><code class="language-plaintext highlighter-rouge">https://education.github.com/discount_requests/application</code></p>

<p><code class="language-plaintext highlighter-rouge">https://education.github.com/onboardings/new</code></p>

<p><code class="language-plaintext highlighter-rouge">https://email.groq.com/e3t/Ctc/2P+113/d5cCcQ04/VVYKfP5BlLjYW9dq3cQ6tkLXhW3hB9jJ5qxX-3N3wqV7s3qgyTW7lCdLW6lZ3nWW1H8CSr3wFVYrW5RTsmJ5bdLGrW32-_YN1yXXCtN2pR0MlhgwdTW1xHnSY6PqKKnW7lFlV57p6RX_W6FDmD87WT6PwW7V_5j43nYKGsW1BpV7M4DMmzXW40czkJ6hJBFqW5_mfQ43mDvdQW2zltFC3_msxlMJJMqqbS6B4W8Yqg8R1bYmXCW7NBM5c8yddB9W51wHkR5YyJv5N8dqV7zyRN_5W8SCPhn8pCD7BVQb0GT3NsHyYVWHBHc5Q4s1LMX-T8qMNQ_dW6y-ZKt5J3ts4W7CS_Tm9jC-M-VSr6ZL5kRqnqf7Ph6Db04</code></p>

<p><code class="language-plaintext highlighter-rouge">https://enneadtheruleofnine.substack.com/p/distraction-free-writing-part-ii?utm_campaign=post&amp;utm_medium=web</code></p>

<p><code class="language-plaintext highlighter-rouge">https://file///G:/00-downloads/ec3fcf9a8dd9469b8d14b08e2fda9836%20(1).pdf</code></p>

<p><code class="language-plaintext highlighter-rouge">https://file///G:/00-downloads/SENTENCA.pdf</code></p>

<p><code class="language-plaintext highlighter-rouge">https://files.community/download</code></p>

<p><code class="language-plaintext highlighter-rouge">https://firecrawl.dev/features/extract</code></p>

<p><code class="language-plaintext highlighter-rouge">https://fireworks.ai/blog/document-inlining-launch</code></p>

<p><code class="language-plaintext highlighter-rouge">https://fireworks.ai/login</code></p>

<p><code class="language-plaintext highlighter-rouge">https://flickr.com/groups/39436080@N00/discuss/72157605359458593</code></p>

<p><code class="language-plaintext highlighter-rouge">https://fontowns.com/font/1471905</code></p>

<p><code class="language-plaintext highlighter-rouge">https://ghisler.com</code></p>

<p><code class="language-plaintext highlighter-rouge">https://ghisler.com/cloudplugin.htm</code></p>

<p><code class="language-plaintext highlighter-rouge">https://gist.github.com/breedless/dd955d45d54ff79ff9c10cb7c77d89c7</code></p>

<p><code class="language-plaintext highlighter-rouge">https://gist.github.com/cpursley/c8fb81fe8a7e5df038158bdfe0f06dbb</code></p>

<p><code class="language-plaintext highlighter-rouge">https://gist.github.com/disler/d51d7e37c3e5f8d277d8e0a71f4a1d2e</code></p>

<p><code class="language-plaintext highlighter-rouge">https://gist.github.com/maximilianh/848551a99b1a4c4ca3c9c59544784e0a</code></p>

<p><code class="language-plaintext highlighter-rouge">https://gist.github.com/username/minimal-prompt-chainables</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/101dotxyz/GPTeam</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/520yyde/pikpak-invite-Web_page_frames</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/abilzerian/LLM-Prompt-Library</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/All-Hands-AI/OpenHands</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/angryip/ipscan</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/anthropic/mirascope</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/anysphere/priompt</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/ArslanKAS/Reasoning-with-o1</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/AutoGPTQ/AutoGPTQ</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/bklieger-groq/g1</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/botpress/botpress?tab=readme-ov-file#bots</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/cbdb-project/processing-prompts-by-batch</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/Chainlit/chainlit</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/coder/coder</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/codestoryai/binaries/releases/tag/1.96.2.25015</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/crewAIInc/crewAI</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/crewAIInc/crewAI-examples</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/crewAIInc/crewAI-tools</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/dair-ai/Prompt-Engineering-Guide</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/DarkCaster/Perpetual</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/dasAtRagedy/NateAI</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/data-science-on-aws/mlops-workshop/blob/main/modules/10-langchain/10-langchain-prompt-engineering.ipynb</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/dottxt-ai/outlines</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/dylanpieper/batchLLM</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/e2b-dev/awesome-ai-agents</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/education/students</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/ElricLiu/AutoGPT-Next-Web</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/en/copilot/managing-copilot/configure-personal-settings/installing-the-github-copilot-extension-in-your-environment?tool=jetbrains</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/EwingYangs/awesome-open-gpt</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/files-community/Files</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/Forethought-Technologies/AutoChain</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/glzr-io/glazewm</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/griptape-ai/griptape</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/groq/groq-api-cookbook/blob/main/tutorials/audio-chunking/audio_chunking_tutorial.ipynb?utm_campaign=APEX%20Weekly%20Newsletter&amp;utm_medium=email&amp;_hsenc=p2ANqtz-8RpTUmMSAvF-mwEaY2OTewLVMKpwGaLjT6zABBuh3cJmqYxFvonnOSf7JUiRJSz1N1DpFOghIIl43jn9NWwjwDEputLg&amp;_hsmi=341519727&amp;utm_content=341519727&amp;utm_source=hs_email</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/groq/groq-api-cookbook/blob/main/tutorials/benchmarking-rag-langchain/benchmarking_rag.ipynb?utm_campaign=APEX%20Weekly%20Newsletter&amp;utm_medium=email&amp;_hsenc=p2ANqtz-9G9G6kOnRhM3iWglIsMXYwjMIJZfcfGaCS1pJI8VhofNPFFQo5vduJQfcnX5PAqYxSkBIfz0AEuB95Kq1qtnULfsZgFw&amp;_hsmi=343567888&amp;utm_content=343567888&amp;utm_source=hs_email</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/groq/groq-api-cookbook/blob/main/tutorials/crewai-mixture-of-agents/Mixture-of-Agents-Crew-AI-Groq.ipynb?utm_campaign=APEX%20Weekly%20Newsletter&amp;utm_medium=email&amp;_hsenc=p2ANqtz-9loNuzD8xteASki9PXSAd1OCaiWj8lJ8LnjiGYskKStwSgddoziwffTDL96W9i-QYXqe_Yi5Q5AjCT1dXVwdUh1kB-jw&amp;_hsmi=343567888&amp;utm_content=343567888&amp;utm_source=hs_email</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/groq/groq-api-cookbook/blob/main/tutorials/structured-output-instructor/structured_output_instructor.ipynb?utm_campaign=APEX%20Weekly%20Newsletter&amp;utm_medium=email&amp;_hsenc=p2ANqtz-8cDjk96rve4ELfX--l9AmHGxMqINjCC140xG2CXj6vCUdohJ4TlX8o9CvXOdQSROdX3wPU-dLjYH2dSqV5u5Yp8DGdaw&amp;_hsmi=343567888&amp;utm_content=343567888&amp;utm_source=hs_email</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/guidance-ai/guidance</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/hamishwhc/priompt</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/ianarawjo/ChainForge</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/ib-bsb-br/ib-bsb-br.github.io</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/ib-bsb-br/ib-bsb-br.github.io/actions/runs/12831673062/job/35782660633</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/ib-bsb-br/ib-bsb-br.github.io/actions/runs/12950028818/job/36122268813</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/ib-bsb-br/ib-bsb-br.github.io/blob/main/_posts/2024-04-13-reassess.md</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/ib-bsb-br/ib-bsb-br.github.io/blob/main/_posts/2024-12-17-merge.md</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/ib-bsb-br/ib-bsb-br.github.io/blob/main/_posts/2024-12-31-windows-11-maintenancerepair-via-powershell.md</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/ib-bsb-br/ib-bsb-br.github.io/blob/main/_posts/2025-01-17-preparando-a-viagem-em-famlia-caldas-novas.md</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/ib-bsb-br/ib-bsb-br.github.io/commits/main</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/ib-bsb-br/ib-bsb-br.github.io/edit/main/_posts/2024-04-13-reassess.md</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/KeepShareOrg/keepshare</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/langchain-ai/langchain</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/langgenius/dify</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/lavague-ai/LaVague</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/lavague-ai/webscrapbook</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/le0zh0u/ToMemo-doc/blob/main/docs/guide/openai.md</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/LeslieLeung/PTPT</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/lightpanda-io/browser?utm_source=tldrai</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/lin-ycv/EverythingPowerToys</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/lin-ycv/EverythingPowerToys/releases</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/lin-ycv/EverythingPowerToys/wiki</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/lin-ycv/EverythingPowerToys/wiki/Features</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/longguandev/PromptAppGPT</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/LxFee/pikpakfs</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/magic-wormhole/magic-wormhole</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/MarisaIsNoob/pikpak_auto_invite2</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/matatonic/openedai-whisper</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/MIATECHPARTNERS/PromptChains</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/microsoft/BatchPrompt</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/microsoft/guidance</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/microsoft/promptflow</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/microsoft/semantic-kernel</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/Mirascope/mirascope</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/mirascope/mirascope</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/mleoking/PromptAppGPT</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/mountaineerbr/shellChatGPT</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/netbirdio/docs</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/NimaBoscarino/priompt</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/NirDiamant/Prompt_Engineering/blob/main/all_prompt_engineering_techniques/prompt-chaining-sequencing.ipynb</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/NovaSky-AI/SkyThought</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/Olshansk/postgres_for_everything?tab=readme-ov-file#miscellaneous</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/OpenBioLink/ThoughtSource</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/orgs/nmap/repositories</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/oughtinc/ice</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/oureveryday/PikPak_By_Shimily_Keygen</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/outlines-dev/outlines</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/priompt/priompt</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/promptappgpt/promptappgpt</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/promptfoo/promptfoo</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/promptslab/Promptify</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/QL-Win/QuickLook</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/ReanSn0w/wddl</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/reworkd/AgentGPT</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/rsrohan99/llamaindex-trip-planner</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/rsrohan99/presenter</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/RUCAIBox/TextBox</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/run-llama/create-llama</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/run-llama/llama_index</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/run-llama/llama_index?__s=m7m4wuwr8r8tu1nu2irh&amp;utm_source=drip&amp;utm_medium=email&amp;utm_campaign=LlamaIndex+Newsletter+2025-01-28</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/run-llama/llamacloud-demo/blob/main/examples/demo_aws_bedrock.ipynb</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/schollz</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/schollz/croc</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/scottviteri/UniversalBackrooms</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/search?q=%22o1-preview%22&amp;type=code</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/search?q=%22o1-preview%22&amp;type=commits</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/search?q=%22o1-preview%22&amp;type=issues&amp;s=comments&amp;o=desc&amp;p=2</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/search?q=%22o1-preview%22&amp;type=pullrequests&amp;s=comments&amp;o=desc</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/search?q=agent+gpt+stars%3A%3E999&amp;type=repositories&amp;ref=advsearch&amp;s=updated&amp;o=desc</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/search?q=stars%3A%3E9999+fork%3Atrue&amp;type=Repositories&amp;ref=advsearch&amp;l=&amp;l=&amp;s=stars&amp;o=desc</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/Significant-Gravitas/AutoGPT/releases</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/Significant-Gravitas/AutoGPT/tree/master</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/simonw/files-to-prompt</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/slives-lab/sglang_distill_deepseek</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/slowernews</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/slowernews?tab=repositories</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/slowernews/hamster-system</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/slowernews/hamster-system/blob/master/README.md</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/slowernews/notebook</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/slowernews/notebook/blob/master/on-bookmarks.md</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/slowernews/notebook/blob/master/on-crypto.md</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/slowernews/notebook/blob/master/on-other.md</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/slowernews/notebook/blob/master/on-toolbox.md</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/slowernews/wisdom-tldr</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/SpotX-Official/SpotX</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/SpotX-Official/SpotX/releases</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/srwi/EverythingToolbar</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/ssui-liu/self-prompting-re</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/strnad/CrewAI-Studio</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/strnad/crewAI-tools</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/tbckr/sgpt</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/thunlp/OpenPrompt</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/TracksApp/tracks</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/UallenQbit/PikPakWeb</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/ufal/whisper_streaming</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/Upsonic/gpt-computer-assistant</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/username/prompt-engineering-techniques</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/valinet?tab=repositories</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/valinet/ExplorerPatcher</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/valinet/ExplorerPatcher/releases</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/valinet/ExplorerPatcher/wiki/About-advanced-settings</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/valinet/ExplorerPatcher/wiki/ExplorerPatcher's-taskbar-implementation#%EF%B8%8F-warning---read-thoroughly-before-using</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/valinet/ExplorerPatcher/wiki/Simple-Window-Switcher</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/valinet/sws</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/valinet/sws/issues</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/yamadashy/repomix</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/YiVal/YiVal</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/ykxVK8yL5L/pikpak-webdav</code></p>

<p><code class="language-plaintext highlighter-rouge">https://github.com/zerotier/toss</code></p>

<p><code class="language-plaintext highlighter-rouge">https://gitingest.com</code></p>

<p><code class="language-plaintext highlighter-rouge">https://gitingest.com/slowernews/hamster-system</code></p>

<p><code class="language-plaintext highlighter-rouge">https://glarysoft.com/glary-utilities</code></p>

<p><code class="language-plaintext highlighter-rouge">https://guidance.readtheio/en/latest</code></p>

<p><code class="language-plaintext highlighter-rouge">https://h5.ruguoapp.com/jk-product-launch-event/404</code></p>

<p><code class="language-plaintext highlighter-rouge">https://hailuo.ai/?utm_source=nofil.beehiiv.com&amp;utm_medium=newsletter&amp;utm_campaign=stop-using-chatgpt&amp;_bhlid=69944e7efffc9d64dee9b1050dffb10db7796880</code></p>

<p><code class="language-plaintext highlighter-rouge">https://huggingface.co/deepseek-ai/DeepSeek-R1?utm_source=newsletter.theresanaiforthat.com&amp;utm_medium=newsletter&amp;utm_campaign=ai-extending-life-by-10-years&amp;_bhlid=6b68acfef05af7e9ba51e797e67b61c977112450</code></p>

<p><code class="language-plaintext highlighter-rouge">https://ibm.com/think/tutorials/prompt-chaining-langchain</code></p>

<p><code class="language-plaintext highlighter-rouge">https://idx.dev/blog/article/interactive-chat?utm_source=email&amp;utm_medium=newsletter&amp;utm_campaign=dev_program_jan</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/index.xml</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/infinitedigits</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/music</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/portfolio</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tags/newyorker</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tags/Portfolio</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tags/Software</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/2022</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/220102</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/221103</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/221106</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/221116</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/221130</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/221201</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/221202</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/221220</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/221224</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/221231</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/abacus</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/ai-bot</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/aurora</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/barcode</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/bike</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/blndr</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/books</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/books-2008</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/books-2017</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/books-2018</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/books-2019</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/charities</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/chickens</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/chords</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/consensus-cookery</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/cowyo</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/crawdad</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/croc</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/croc6</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/croc9</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/devine-lu-linvega</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/faas</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/find3</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/fossil</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/genesis</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/go-and-zig</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/go-docker</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/go-in-vim</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/granchild</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/graveyard</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/habitus</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/heartbeat</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/hostyoself</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/icarus</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/ice-cubes</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/ingredients</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/installing-keybase-on-chromebook</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/internorns</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/ipfs-archive</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/kolor</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/makemydrivefun</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/marathons-2018</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/midi2midi</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/miti</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/monotron</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/mxsamples</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/norns</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/norns.online</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/nowwhatdoiread</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/offlinenotepad</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/one-line</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/oooooo</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/op1</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/peerdiscovery</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/phasedistortion</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/photos-2018</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/photos-2019</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/pi-monotron</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/piano-ai</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/pianos-for-travelers</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/plonky</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/po32</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/podcasts-2017</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/podcasts-2018</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/poetry</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/portmidi</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/pottery</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/primitives</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/progressbar</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/quines</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/radio</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/rand</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/recursive-recipes</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/rwtxt</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/sampler</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/sampswap</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/sdcard</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/shallow-go-get</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/share</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/spotify</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/stream</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/supertonic</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/tape-synth</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/templates</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/ten-commandments</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/thirtythree</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/thx</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/tone-to-drone</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/tunneling</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/ube</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/vim</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/watercolor</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/waveforms</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/web3</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/websockets-with-golang</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/wobblewobble</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/wordpress</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/worker-pool</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/tinker/zeptocore</code></p>

<p><code class="language-plaintext highlighter-rouge">https://infinitedigits.co/wares</code></p>

<p><code class="language-plaintext highlighter-rouge">https://instagram.com/infinitedigits</code></p>

<p><code class="language-plaintext highlighter-rouge">https://instagram.com/nicolewebercnpi/reel/DEPhaKPuxRC</code></p>

<p><code class="language-plaintext highlighter-rouge">https://inteligenciafinanceira.com.br/onde-investir/investimentos/imab11-biti11-etfs-recomendados-ion-itau/amp</code></p>

<p><code class="language-plaintext highlighter-rouge">https://langchain.com</code></p>

<p><code class="language-plaintext highlighter-rouge">https://lavague.ai/en/latest</code></p>

<p><code class="language-plaintext highlighter-rouge">https://learnprompting.org/docs/tooling/tools</code></p>

<p><code class="language-plaintext highlighter-rouge">https://link.mail.beehiiv.com/ss/c/u001.QrdFCFVMMDh8bI7FbOUOtlqsvirkNkHdv4t8aRd5yGUitg4hkpTMkev0RW6GC4JGfdrWXv_jv13vWcwvCCCdh2MzCaqZCLYmjYppdwUTb5tkGcObdkhEbw4IRzUDbFbzb8-DLz_3xJ6sy987Zg3XYT_bNZNIUMQNdHzh_sfawpOlzaGmLNkEqG-Fv-edR0YrCOHxPTTmogK2gUcv4SFuD7MU4Ya0N4hm71YvDc4k4LjXxo2tKoC0fqCMUCnPtlzs/4db/-icg4QbJRXi50282WWQ8LQ/h20/h001.4SVb5lwMIx90IG2Gb8RwCGR_IG_mwgXIWt31ulIFBo8</code></p>

<p><code class="language-plaintext highlighter-rouge">https://link.mail.beehiiv.com/ss/c/u001.XiW3uyBR-hv9LJd49_WJjgB6xdFa-Jh9_HJmeY2lZTA6McNDd04BL8DsL8xvLzBCqjKImCZ7HJXbp-WdITDpzptajtsG8K5xGNeURYhm7BeLAKfEJaqOaSr6W8j4hC-qsKeDmKE2gevc0TU1V-MQh9-IzTMTVSqgdNd28fZyxD8CGfDt3Vlk6svI8baYbmCZBqvzB99T0_ZlBg5akBgCiGsQoaMZodKdHjAECtf4idI/4db/-icg4QbJRXi50282WWQ8LQ/h19/h001.HANemL2Rp3g17lYZSOY5QgsgL_3KVD8EhtUbNOa03Uc</code></p>

<p><code class="language-plaintext highlighter-rouge">https://link.softoroom.org/mtags13.html</code></p>

<p><code class="language-plaintext highlighter-rouge">https://linkedin.com/posts/hemanthhm_ai-llm-crewai-activity-7283293976797855744-yUYZ/?utm_campaign=APEX%20Weekly%20Newsletter&amp;utm_medium=email&amp;_hsenc=p2ANqtz-_n0PAR0A3Apl3oHAbZWe_9CDxCp2gUR1LJnVRND3KRm6F7w2tZzFbL-Z3UgoPClZHKZ1_LASeYmrHE84BpamQ-mLF6ig&amp;_hsmi=342545649&amp;utm_content=342545649&amp;utm_source=hs_email</code></p>

<p><code class="language-plaintext highlighter-rouge">https://listary.com/blog/best-file-search-tools-of-2024-everything-vs-listary</code></p>

<p><code class="language-plaintext highlighter-rouge">https://listary.com/pro</code></p>

<p><code class="language-plaintext highlighter-rouge">https://llamaindex.ai</code></p>

<p><code class="language-plaintext highlighter-rouge">https://llamaindex.ai/blog/document-research-assistant-for-blog-creation-with-nvidia-nim-microservices</code></p>

<p><code class="language-plaintext highlighter-rouge">https://llamaindex.ai/blog/introducing-agentic-document-workflows</code></p>

<p><code class="language-plaintext highlighter-rouge">https://llamaindex.ai/blog/introducing-agentworkflow-a-powerful-system-for-building-ai-agent-systems</code></p>

<p><code class="language-plaintext highlighter-rouge">https://llamaindex.ai/en/latest</code></p>

<p><code class="language-plaintext highlighter-rouge">https://llmnanban.akmmusai.pro/Progressive/Batch-Prompting-explained</code></p>

<p><code class="language-plaintext highlighter-rouge">https://lpat.prf.gov.br/lpat/protegido/boletim/inicio</code></p>

<p><code class="language-plaintext highlighter-rouge">https://m.youtube.com/watch?v=uq-deRtvedI</code></p>

<p><code class="language-plaintext highlighter-rouge">https://mail.google.com/mail/u/0/#spam</code></p>

<p><code class="language-plaintext highlighter-rouge">https://markdownlivepreview.com</code></p>

<p><code class="language-plaintext highlighter-rouge">https://medium.com</code></p>

<p><code class="language-plaintext highlighter-rouge">https://medium.com/@andrewmelder/how-distraction-free-devices-make-you-more-productive-4bb59c05d3ec</code></p>

<p><code class="language-plaintext highlighter-rouge">https://medium.com/@author/chain-of-thought-prompting</code></p>

<p><code class="language-plaintext highlighter-rouge">https://medium.com/@pankaj_pandey/chain-of-thought-prompting-guiding-llms-step-by-step-e6eac32d02d8</code></p>

<p><code class="language-plaintext highlighter-rouge">https://medium.com/@yourgpt/prompt-chaining-vs-chain-of-thought-cot-prompting-a-comprehensive-guide-9c51c994879f</code></p>

<p><code class="language-plaintext highlighter-rouge">https://mega.nz/file/rjghwbhR#kIXH55zS2PBnGMh4vAYFn2sw0tEhrX-G4VVxV8CALbw</code></p>

<p><code class="language-plaintext highlighter-rouge">https://meupatrimonio.com/vale-a-pena-investir-no-etf-de-renda-fixa-imab11</code></p>

<p><code class="language-plaintext highlighter-rouge">https://mirascope.com/blog/langchain-alternatives</code></p>

<p><code class="language-plaintext highlighter-rouge">https://mirascope.com/WELCOME</code></p>

<p><code class="language-plaintext highlighter-rouge">https://mozilla.org/en-US</code></p>

<p><code class="language-plaintext highlighter-rouge">https://mpesch3.de/1by1.html</code></p>

<p><code class="language-plaintext highlighter-rouge">https://multa.prf.gov.br/multa2</code></p>

<p><code class="language-plaintext highlighter-rouge">https://multcloud.com/new-year-email-2025-sale.html?type=f&amp;code=06303e25f96444c6b8a306521fd866c9</code></p>

<p><code class="language-plaintext highlighter-rouge">https://multiplatform.ai/minichain-revolutionizing-prompt-chaining-for-llm-development/?utm_source=chatgpt.com</code></p>

<p><code class="language-plaintext highlighter-rouge">https://nadaconsta.prf.gov.br/nada_consta/index.jsf</code></p>

<p><code class="language-plaintext highlighter-rouge">https://netbird.io/pricing</code></p>

<p><code class="language-plaintext highlighter-rouge">https://ng.craft.me/menu</code></p>

<p><code class="language-plaintext highlighter-rouge">https://nirsoft.net/utils/shexview.html#google_vignette</code></p>

<p><code class="language-plaintext highlighter-rouge">https://nitroflare.com/view/4D7FAABF85C028E/Directory.Opus.13.12.x64.rar</code></p>

<p><code class="language-plaintext highlighter-rouge">https://npmjs.com</code></p>

<p><code class="language-plaintext highlighter-rouge">https://npmjs.com/login?next=%2Fpackage%2F%40promptify%2Fcore</code></p>

<p><code class="language-plaintext highlighter-rouge">https://npmjs.com/package/@promptify/core</code></p>

<p><code class="language-plaintext highlighter-rouge">https://npmjs.com/package/promptify</code></p>

<p><code class="language-plaintext highlighter-rouge">https://old.starbreaker.org/grimoire/topics/index.html</code></p>

<p><code class="language-plaintext highlighter-rouge">https://one-tab.com/web/images/default-bookmark-icon.png</code></p>

<p><code class="language-plaintext highlighter-rouge">https://oo-software.com/en/shutup10/latest-version</code></p>

<p><code class="language-plaintext highlighter-rouge">https://orq.ai</code></p>

<p><code class="language-plaintext highlighter-rouge">https://orq.ai/blog/prompt-structure-chaining</code></p>

<p><code class="language-plaintext highlighter-rouge">https://pagenotes.app</code></p>

<p><code class="language-plaintext highlighter-rouge">https://pesquisa-auto.prf.gov.br/#/pesquisa/consultar-debitos</code></p>

<p><code class="language-plaintext highlighter-rouge">https://pikpak-plus.com/login</code></p>

<p><code class="language-plaintext highlighter-rouge">https://platform.openai.com/playground/chat?preset=eQ4Vx7OO4jR0QZUkTZhwit9K</code></p>

<p><code class="language-plaintext highlighter-rouge">https://platform.openai.com/settings/organization/usage/activity</code></p>

<p><code class="language-plaintext highlighter-rouge">https://previews.123rf.com/images/djvstock/djvstock1705/djvstock170514643/78918096-cute-baby-girl-face-icon-over-white-background-vector-illustration.jpg</code></p>

<p><code class="language-plaintext highlighter-rouge">https://producthunt.com/posts/browser-use?utm_campaign=36921_2025-01-19&amp;utm_medium=newsletter&amp;utm_source=Weekly+Digest&amp;utm_term=featured</code></p>

<p><code class="language-plaintext highlighter-rouge">https://producthunt.com/posts/drymerge-2?utm_campaign=36921_2025-01-19&amp;utm_medium=newsletter&amp;utm_source=Weekly+Digest&amp;utm_term=featured</code></p>

<p><code class="language-plaintext highlighter-rouge">https://producthunt.com/posts/extract-by-firecrawl</code></p>

<p><code class="language-plaintext highlighter-rouge">https://producthunt.com/posts/extract-by-firecrawl?utm_campaign=37119_2025-01-26&amp;utm_medium=newsletter&amp;utm_source=Weekly+Digest&amp;utm_term=featured</code></p>

<p><code class="language-plaintext highlighter-rouge">https://producthunt.com/posts/lovable-builder-io?utm_campaign=37119_2025-01-26&amp;utm_medium=newsletter&amp;utm_source=Weekly+Digest&amp;utm_term=featured</code></p>

<p><code class="language-plaintext highlighter-rouge">https://producthunt.com/posts/trae?utm_campaign=37119_2025-01-26&amp;utm_medium=newsletter&amp;utm_source=Weekly+Digest&amp;utm_term=featured</code></p>

<p><code class="language-plaintext highlighter-rouge">https://producthunt.com/products/anyparser?utm_source=Weekly%20Digest&amp;utm_medium=newsletter&amp;utm_campaign=36723_2025-01-12&amp;utm_term=featured#anyparser-pro</code></p>

<p><code class="language-plaintext highlighter-rouge">https://producthunt.com/products/grok-ai-assistant?utm_source=Weekly%20Digest&amp;utm_medium=newsletter&amp;utm_campaign=36723_2025-01-12&amp;utm_term=featured#grok-for-ios</code></p>

<p><code class="language-plaintext highlighter-rouge">https://promptfoo.dev</code></p>

<p><code class="language-plaintext highlighter-rouge">https://promptfoo.dev/docs/configuration/testing-llm-chains</code></p>

<p><code class="language-plaintext highlighter-rouge">https://prompthub.deeplearning.ai</code></p>

<p><code class="language-plaintext highlighter-rouge">https://prompthub.deepset.ai</code></p>

<p><code class="language-plaintext highlighter-rouge">https://prompthub.org</code></p>

<p><code class="language-plaintext highlighter-rouge">https://prompthub.us</code></p>

<p><code class="language-plaintext highlighter-rouge">https://prompthub.us/blog/prompt-chaining-guide</code></p>

<p><code class="language-plaintext highlighter-rouge">https://promptify.readtheio/en/latest</code></p>

<p><code class="language-plaintext highlighter-rouge">https://pulumi.com/blog/pulumi-copilot-rest/?utm_campaign=Newsletter&amp;utm_medium=email&amp;_hsenc=p2ANqtz-8bHjD9RMsUzt0wM7Yt5xwkk_N1Fzeg5zlTAjoCPlc-RtAfyd1joe7l46RGv5QxRI9FRE2-tBtGwsJ8j-l7iZ9OVHl4Kw&amp;_hsmi=342865257&amp;utm_content=342865257&amp;utm_source=hs_email</code></p>

<p><code class="language-plaintext highlighter-rouge">https://pycopaste.foxfortmobile.com</code></p>

<p><code class="language-plaintext highlighter-rouge">https://quickaccesspopup.com</code></p>

<p><code class="language-plaintext highlighter-rouge">https://quickaccesspopup.com/?s=messenger</code></p>

<p><code class="language-plaintext highlighter-rouge">https://quickaccesspopup.com/?s=total</code></p>

<p><code class="language-plaintext highlighter-rouge">https://quickaccesspopup.com/?s=total#import</code></p>

<p><code class="language-plaintext highlighter-rouge">https://quickaccesspopup.com/category/faq/snippets</code></p>

<p><code class="language-plaintext highlighter-rouge">https://quickaccesspopup.com/download-quick-access-popup</code></p>

<p><code class="language-plaintext highlighter-rouge">https://quickaccesspopup.com/giving-more-power-to-power-users</code></p>

<p><code class="language-plaintext highlighter-rouge">https://radicalsimpli.city</code></p>

<p><code class="language-plaintext highlighter-rouge">https://raw.githubusercontent.com/ib-bsb-br/ib-bsb-br.github.io/refs/heads/main/_includes/toc.html</code></p>

<p><code class="language-plaintext highlighter-rouge">https://raw.githubusercontent.com/ib-bsb-br/ib-bsb-br.github.io/refs/heads/main/_plugins/code_block_tag.rb</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/AlphaSmart/comments/1agdopn/alphasmart_3000_update_from_12_to_301</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/AlphaSmart/comments/1bjwhmx/pulled_the_trigger_on_the_mechanical_keyboard_mod</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/BogleheadsBrasil/comments/1b25v5g/corretoras_com_taxa_zero_que_disponibilizam_etfs</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/BogleheadsBrasil/comments/1b74g76/wrld11_e_imab_s%C3%B3_isso</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/BogleheadsBrasil/comments/1bj0vcj/qual_etf_de_imab</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/BogleheadsBrasil/comments/1c7j7yo/comparativo_imab_imab_5_p2_e_imab_5_para_auxiliar</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/BogleheadsBrasil/comments/1cxndzs/etfs_de_renda_fixa_no_br_para_longo_prazo</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/BogleheadsBrasil/comments/1due2vk/fwra_vs_vwra_b5p211_vs_imab11</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/BogleheadsBrasil/comments/1g4fzhk/opine_sobre_minha_carteira</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/BogleheadsBrasil/comments/1g7vv87/l%C3%A1_vem_a_investo_aprontar_com_rf_de_novo_lftb11</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/BogleheadsBrasil/comments/1gdbp5g/quanto_etf_de_ipca_versus_ivvb11_fronteiras_de</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/ClaudeAI/comments/1bzmen4/looking_for_the_best_web_interface_to_access</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/comfyui/comments/1gqpoaa/how_to_batch_prompt_results_from_3_different_llm</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/investimentos/comments/1b5q8z3/b5p211_vs_imab11</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/investimentos/comments/1cbc1rn/analise_comparativa_entre_rela%C3%A7%C3%A3o_de_pre%C3%A7o_x</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/investimentos/comments/1fbkzge/etf_renda_fixa_vale_a_pena_para_prazo_incerto</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/investimentos/comments/1g4a3zx/carteira_com_rendimento_abaixo_do_cdi_em_5_anos</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/investimentos/comments/1gm8bgk/lftb11_x_b5p211_etfs_de_renda_fixa_briga_de_fundo</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/investimentos/comments/1gxxl6x/imab11_ou_investir_direto_no_tesouro</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/investimentos/comments/1hl3iq0/existe_algum_fundo_de_previd%C3%AAncia_privada_de</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/LocalLLaMA/comments/1d1j31r/faster_whisper_server_an_openai_compatible_server</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/LocalLLaMA/comments/1dfa02r/openaicompatible_tts_wrapper_ie_for_openwebuis</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/LocalLLaMA/comments/1ew4gzf/diy_transcription_app_how_to_set_up_openais</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/LocalLLaMA/comments/1f1ivnd/i_found_an_all_in_one_webui</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/LocalLLaMA/comments/1ftlznt/openais_new_whisper_turbo_model_running_100</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/ollama/comments/1dl412v/can_i_somehow_install_whisper</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/OpenAI/comments/1aj61hj/ways_to_use_whisper_for_speechtotext</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/OpenAI/comments/1c85mek/local_whisper_api</code></p>

<p><code class="language-plaintext highlighter-rouge">https://reddit.com/r/OpenAI/comments/1fygbba/what_is_the_best_way_to_use_whisper_to_transcribe</code></p>

<p><code class="language-plaintext highlighter-rouge">https://repomix.com</code></p>

<p><code class="language-plaintext highlighter-rouge">https://resource.dopus.com/c/tools/25?ascending=false&amp;order=views</code></p>

<p><code class="language-plaintext highlighter-rouge">https://resource.dopus.com/t/can-opus-replace-the-file-open-save-dialogs-other-programs-use/36127</code></p>

<p><code class="language-plaintext highlighter-rouge">https://resource.dopus.com/t/direct-folders/7873/22</code></p>

<p><code class="language-plaintext highlighter-rouge">https://resource.dopus.com/t/find-possible-duplicates-of-a-selected-file-whilst-using-everything-voidtools/42097</code></p>

<p><code class="language-plaintext highlighter-rouge">https://resource.dopus.com/t/listary/23431/5</code></p>

<p><code class="language-plaintext highlighter-rouge">https://sagethumbs.en.lo4d.com/windows</code></p>

<p><code class="language-plaintext highlighter-rouge">https://samwald.info</code></p>

<p><code class="language-plaintext highlighter-rouge">https://schollz.com/tinker/croc6</code></p>

<p><code class="language-plaintext highlighter-rouge">https://serokell.io</code></p>

<p><code class="language-plaintext highlighter-rouge">https://serokell.io/blog/chain-of-thought-prompting</code></p>

<p><code class="language-plaintext highlighter-rouge">https://simmering.dev/blog/structured_output</code></p>

<p><code class="language-plaintext highlighter-rouge">https://softoroom.org/page2.html</code></p>

<p><code class="language-plaintext highlighter-rouge">https://softoroom.org/topic323.html</code></p>

<p><code class="language-plaintext highlighter-rouge">https://softoroom.org/topic323.html?pid=617205&amp;st=460&amp;#entry617205</code></p>

<p><code class="language-plaintext highlighter-rouge">https://softoroom.org/topic323s460.html</code></p>

<p><code class="language-plaintext highlighter-rouge">https://softoroom.org/topic9283.html?pid=613774&amp;st=30&amp;#entry613774</code></p>

<p><code class="language-plaintext highlighter-rouge">https://softoroom.org/topic42099.html?pid=617398&amp;st=30&amp;#entry617398</code></p>

<p><code class="language-plaintext highlighter-rouge">https://softoroom.org/topic42099s20.html</code></p>

<p><code class="language-plaintext highlighter-rouge">https://softoroom.org/topic89043.html?pid=617386&amp;st=210&amp;#entry617386</code></p>

<p><code class="language-plaintext highlighter-rouge">https://spacedrive.com</code></p>

<p><code class="language-plaintext highlighter-rouge">https://techcrunch.com/2025/01/21/anthropic-plans-to-release-a-two-way-voice-mode-for-claude/?utm_source=newsletter.theresanaiforthat.com&amp;utm_medium=newsletter&amp;utm_campaign=take-ai-images-to-the-next-level&amp;_bhlid=963590ceb34894124f45551b39ab3c8dc9be77c3</code></p>

<p><code class="language-plaintext highlighter-rouge">https://technologyreview.com/2025/01/20/1110180/the-second-wave-of-ai-coding-is-here/?_bhlid=f37a702faba15126af3f79d2e0c841808ad7027b</code></p>

<p><code class="language-plaintext highlighter-rouge">https://terminaltrove.com/wut/?utm_source=nl&amp;utm_medium=email&amp;ref=nl&amp;utm_term=2025-01-28&amp;utm_campaign=Terminal+Trove+Weekly+Issue+56</code></p>

<p><code class="language-plaintext highlighter-rouge">https://thenewstack.io/build-a-serverless-todo-app-with-aws-pulumi-and-python/?utm_campaign=Newsletter&amp;utm_medium=email&amp;_hsenc=p2ANqtz-9DfPuNZj7TnwiCKVaXITXGL8ml2z4cYSSTu0KnyWipPbfhbBzqV5v9eFyhVsp9LiEfSgSa2EMh3yOXA73tSugo8DkREQ&amp;_hsmi=342865257&amp;utm_content=342865257&amp;utm_source=hs_email</code></p>

<p><code class="language-plaintext highlighter-rouge">https://theresanaiforthat.com/ai/deja-vu/?ref=email&amp;utm_source=newsletter.theresanaiforthat.com&amp;utm_medium=newsletter&amp;utm_campaign=deepseek-passes-chatgpt&amp;_bhlid=9b874b8bc4be2c16df5daeb9c2b6988362ccb48b</code></p>

<p><code class="language-plaintext highlighter-rouge">https://theresanaiforthat.com/ai/flashback-study/?ref=email&amp;utm_source=newsletter.theresanaiforthat.com&amp;utm_medium=newsletter&amp;utm_campaign=2024-s-best-ai-tool&amp;_bhlid=d192334a405d84939c81a8846331a07fc44277f7</code></p>

<p><code class="language-plaintext highlighter-rouge">https://theresanaiforthat.com/ai/multi-search-multi-ai/?ref=email&amp;utm_source=newsletter.theresanaiforthat.com&amp;utm_medium=newsletter&amp;utm_campaign=take-ai-images-to-the-next-level&amp;_bhlid=e0eaeae802fc1f5f4c911c1cc1e5ab7bef7e7fb0</code></p>

<p><code class="language-plaintext highlighter-rouge">https://theresanaiforthat.com/ai/n8n-io/?utm_campaign=taaft&amp;utm_source=theresanaiforthat.com&amp;utm_content=referral&amp;_bhlid=51acdddee3e80ce452906df84e9c69cf8159f758</code></p>

<p><code class="language-plaintext highlighter-rouge">https://theresanaiforthat.com/ai/notex-ai-note-taker/?ref=email&amp;utm_source=newsletter.theresanaiforthat.com&amp;utm_medium=newsletter&amp;utm_campaign=the-future-of-ai-work-and-humans&amp;_bhlid=e2f0bf3c627caf0d973c304b735ce1c9dd1c87b2</code></p>

<p><code class="language-plaintext highlighter-rouge">https://theresanaiforthat.com/ai/notis-ai/?ref=email&amp;utm_source=newsletter.theresanaiforthat.com&amp;utm_medium=newsletter&amp;utm_campaign=ai-extending-life-by-10-years&amp;_bhlid=e564acbf9a1180633424228bd321dd6a7fa80433</code></p>

<p><code class="language-plaintext highlighter-rouge">https://theresanaiforthat.com/ai/prompt-engine/?ref=email&amp;utm_source=newsletter.theresanaiforthat.com&amp;utm_medium=newsletter&amp;utm_campaign=the-future-of-ai-work-and-humans&amp;_bhlid=069d2f50fda470d0056aca1e797103d641078700</code></p>

<p><code class="language-plaintext highlighter-rouge">https://theresanaiforthat.com/ai/rankbot/?ref=email&amp;utm_source=newsletter.theresanaiforthat.com&amp;utm_medium=newsletter&amp;utm_campaign=take-ai-images-to-the-next-level&amp;_bhlid=1c662fd2ba3e4297daa7e3422e2c22504a477904</code></p>

<p><code class="language-plaintext highlighter-rouge">https://theresanaiforthat.com/ai/speedstudy/?ref=email&amp;utm_source=newsletter.theresanaiforthat.com&amp;utm_medium=newsletter&amp;utm_campaign=the-future-of-ai-work-and-humans&amp;_bhlid=3565fac3731732c9b410c7f57087af2380d804a9</code></p>

<p><code class="language-plaintext highlighter-rouge">https://theresanaiforthat.com/ai/talktext/?ref=email&amp;utm_source=newsletter.theresanaiforthat.com&amp;utm_medium=newsletter&amp;utm_campaign=take-ai-images-to-the-next-level&amp;_bhlid=a6490202fc4f6d0bf89f76ffe71bbe5a1acafc22</code></p>

<p><code class="language-plaintext highlighter-rouge">https://theresanaiforthat.com/ai/the-mumble-app/?ref=email&amp;utm_source=newsletter.theresanaiforthat.com&amp;utm_medium=newsletter&amp;utm_campaign=the-future-of-ai-work-and-humans&amp;_bhlid=945619612b0477e3c4bd16dea06989c47c70fd01</code></p>

<p><code class="language-plaintext highlighter-rouge">https://theresanaiforthat.com/best-ai-tool-2024-vote/?utm_source=newsletter.theresanaiforthat.com&amp;utm_medium=newsletter&amp;utm_campaign=2024-s-best-ai-tool&amp;_bhlid=2d3ae17ae77ce7be678511465a588928dd7120e1</code></p>

<p><code class="language-plaintext highlighter-rouge">https://thunlp.github.io/OpenPrompt</code></p>

<p><code class="language-plaintext highlighter-rouge">https://totalcmd.net/plugring/android_adb.html</code></p>

<p><code class="language-plaintext highlighter-rouge">https://totalcmd.net/plugring/Google_like_QS.html</code></p>

<p><code class="language-plaintext highlighter-rouge">https://totalcmd.net/plugring/iso.html</code></p>

<p><code class="language-plaintext highlighter-rouge">https://totalcmd.net/plugring/tc_plugman.html</code></p>

<p><code class="language-plaintext highlighter-rouge">https://totalcmd.net/plugring/virtdisk.html</code></p>

<p><code class="language-plaintext highlighter-rouge">https://totalcmd.net/plugring/xBaseView.html</code></p>

<p><code class="language-plaintext highlighter-rouge">https://towardsdev.com/llm-chains-using-sequentialchain-routerchain-964c9aa14f8b</code></p>

<p><code class="language-plaintext highlighter-rouge">https://transcribe.bloat.app</code></p>

<p><code class="language-plaintext highlighter-rouge">https://turbidplaque.com/wp/2024/09/16/updating-an-alphasmart-3000-on-linux</code></p>

<p><code class="language-plaintext highlighter-rouge">https://typecast.munk.org/2024/05/09/testing-alphaaverage-replacement-battery-for-alphasmart-dana-and-neo</code></p>

<p><code class="language-plaintext highlighter-rouge">https://uderzo.it/main_products/space_sniffer/tips_and_tricks.html</code></p>

<p><code class="language-plaintext highlighter-rouge">https://valinet.ro</code></p>

<p><code class="language-plaintext highlighter-rouge">https://voidtools.com</code></p>

<p><code class="language-plaintext highlighter-rouge">https://voidtools.com/forum/viewtopic.php?f=12&amp;t=9787</code></p>

<p><code class="language-plaintext highlighter-rouge">https://voidtools.com/forum/viewtopic.php?t=9787&amp;start=150</code></p>

<p><code class="language-plaintext highlighter-rouge">https://voidtools.com/forum/viewtopic.php?t=9787#download</code></p>

<p><code class="language-plaintext highlighter-rouge">https://voidtools.com/forum/viewtopic.php?t=12733</code></p>

<p><code class="language-plaintext highlighter-rouge">https://voidtools.com/forum/viewtopic.php?t=15798</code></p>

<p><code class="language-plaintext highlighter-rouge">https://voidtools.com/forum/viewtopic.php?t=16066</code></p>

<p><code class="language-plaintext highlighter-rouge">https://voidtools.com/support/everything/command_line_options/#etp</code></p>

<p><code class="language-plaintext highlighter-rouge">https://voidtools.com/support/everything/etp</code></p>

<p><code class="language-plaintext highlighter-rouge">https://voidtools.com/support/everything/everything_service</code></p>

<p><code class="language-plaintext highlighter-rouge">https://voidtools.com/support/everything/ini/#etp</code></p>

<p><code class="language-plaintext highlighter-rouge">https://voidtools.com/support/everything/ini/#http</code></p>

<p><code class="language-plaintext highlighter-rouge">https://voidtools.com/support/everything/multiple_instances</code></p>

<p><code class="language-plaintext highlighter-rouge">https://voidtools.com/support/everything/options/#etp_ftp_server</code></p>

<p><code class="language-plaintext highlighter-rouge">https://voidtools.com/support/everything/options/#http_server</code></p>

<p><code class="language-plaintext highlighter-rouge">https://voidtools.com/support/everything/whats_new</code></p>

<p><code class="language-plaintext highlighter-rouge">https://wdho.ru/bSuW</code></p>

<p><code class="language-plaintext highlighter-rouge">https://web.archive.org/web/*/*files.community/files/*</code></p>

<p><code class="language-plaintext highlighter-rouge">https://web.archive.org/web/20240822192505/cdn.files.community/files/download/Files.Stable.exe</code></p>

<p><code class="language-plaintext highlighter-rouge">https://wired.com/story/how-to-turn-off-apple-intelligence/?lctg=1503154&amp;utm_source=digitaltrends&amp;utm_medium=email&amp;utm_content=subscriber_id:1503154&amp;utm_campaign=DTDaily20250128</code></p>

<p><code class="language-plaintext highlighter-rouge">https://x.com/akshay_pachaar/status/1883497754649047192?__s=m7m4wuwr8r8tu1nu2irh&amp;utm_source=drip&amp;utm_medium=email&amp;utm_campaign=LlamaIndex+Newsletter+2025-01-28</code></p>

<p><code class="language-plaintext highlighter-rouge">https://x.com/btibor91/status/1881110210867290191?utm_source=newsletter.theresanaiforthat.com&amp;utm_medium=newsletter&amp;utm_campaign=take-ai-images-to-the-next-level&amp;_bhlid=f38eebaa1fa94a7a89fc2838f839461bab1884f6</code></p>

<p><code class="language-plaintext highlighter-rouge">https://x.com/charliebholtz/status/1867989498291974266?utm_source=nofil.beehiiv.com&amp;utm_medium=newsletter&amp;utm_campaign=stop-using-chatgpt&amp;_bhlid=1223d2812f27b6c991ba9301e59b7c3d36f6bcbb</code></p>

<p><code class="language-plaintext highlighter-rouge">https://x.com/chrisalbon/status/1752850359759016352</code></p>

<p><code class="language-plaintext highlighter-rouge">https://x.com/chrismanfrank/status/1879624682678387143?utm_source=nofil.beehiiv.com&amp;utm_medium=newsletter&amp;utm_campaign=stop-using-chatgpt&amp;_bhlid=b3fe98c4e1e83f62edc57cc8cd1de759c6906d29</code></p>

<p><code class="language-plaintext highlighter-rouge">https://x.com/i/flow/login?redirect_after_login=%2Fsfwriterguy</code></p>

<p><code class="language-plaintext highlighter-rouge">https://x.com/llama_index/status/1880283649033269712?__s=m7m4wuwr8r8tu1nu2irh&amp;utm_source=drip&amp;utm_medium=email&amp;utm_campaign=LlamaIndex+Newsletter+2025-01-28</code></p>

<p><code class="language-plaintext highlighter-rouge">https://x.com/MarcusSchiesser/status/1866718714000970094?__s=m7m4wuwr8r8tu1nu2irh&amp;utm_source=drip&amp;utm_medium=email&amp;utm_campaign=LlamaIndex+Newsletter+2025-01-28</code></p>

<p><code class="language-plaintext highlighter-rouge">https://yourgpt.ai</code></p>

<p><code class="language-plaintext highlighter-rouge">https://yourgpt.ai/blog</code></p>

<p><code class="language-plaintext highlighter-rouge">https://yourgpt.ai/blog/general/prompt-chaining-vs-chain-of-thoughts</code></p>

<p><code class="language-plaintext highlighter-rouge">https://yourgpt.ai/blog/prompt-chaining-vs-chain-of-thought-prompting-which-one-is-better</code></p>

<p><code class="language-plaintext highlighter-rouge">https://yourgpt.io/blog/prompt-chaining-vs-cot</code></p>

<p><code class="language-plaintext highlighter-rouge">https://youtube.com/watch?v=DzHPehP-3hk</code></p>

<p><code class="language-plaintext highlighter-rouge">https://youtube.com/watch?v=K8MIkul6L74</code></p>]]></content><author><name></name></author><category term="scratchpad" /></entry><entry><title type="html">batch</title><link href="https://ib.bsb.br/batch/" rel="alternate" type="text/html" title="batch" /><published>2025-01-27T00:00:00+00:00</published><updated>2025-02-01T21:29:53+00:00</updated><id>https://ib.bsb.br/batch</id><content type="html" xml:base="https://ib.bsb.br/batch/"><![CDATA[<section data-filename="_code-block.txt" data-code="Consider this original system message prompt:
~~~
placeholder
~~~
Now, use the following instructions to structure your response:
1. Begin your answer with a Markdown code block containing the precise details of the task you are performing, ensuring nothing precedes this code block.
2. Outside the code block, split the original system message prompt provided above into multiple subtasks, separated by three consecutive colons (&quot;:::&quot;), to segment individual subtasks.
3. Verify that each subtask is self-contained, coherent, cohesive and holistic consistent.
4. End your response only after you have presented all subtasks." data-download-link="" data-download-link-label="Download "><code class="language-">Consider this original system message prompt:
~~~
placeholder
~~~
Now, use the following instructions to structure your response:
1. Begin your answer with a Markdown code block containing the precise details of the task you are performing, ensuring nothing precedes this code block.
2. Outside the code block, split the original system message prompt provided above into multiple subtasks, separated by three consecutive colons (":::"), to segment individual subtasks.
3. Verify that each subtask is self-contained, coherent, cohesive and holistic consistent.
4. End your response only after you have presented all subtasks.
</code></section>]]></content><author><name></name></author><category term="AI&gt;prompt" /></entry><entry><title type="html">chamber</title><link href="https://ib.bsb.br/chamber/" rel="alternate" type="text/html" title="chamber" /><published>2025-01-24T00:00:00+00:00</published><updated>2025-02-01T21:29:53+00:00</updated><id>https://ib.bsb.br/chamber</id><content type="html" xml:base="https://ib.bsb.br/chamber/"><![CDATA[<section data-filename="_code-block.txt" data-code="Lastly, provide a detailed and precise description of the task you are expected to perform; enclose this description within a markdown code block placed at the very beginning of your response without any preceding text; follow these steps in sequence: (1) begin with a code block containing the full task description, (2) exclude all commentary before or within the initial code block, (3) execute the task requirements after the code block while strictly adhering to the provided instructions; structure your output by starting with the task description in a code block followed by its completion." data-download-link="" data-download-link-label="Download "><code class="language-">Lastly, provide a detailed and precise description of the task you are expected to perform; enclose this description within a markdown code block placed at the very beginning of your response without any preceding text; follow these steps in sequence: (1) begin with a code block containing the full task description, (2) exclude all commentary before or within the initial code block, (3) execute the task requirements after the code block while strictly adhering to the provided instructions; structure your output by starting with the task description in a code block followed by its completion.

</code></section>]]></content><author><name></name></author><category term="AI&gt;prompt" /></entry></feed>