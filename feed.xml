<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://ib.bsb.br/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ib.bsb.br/" rel="alternate" type="text/html" /><updated>2024-11-29T15:19:29+00:00</updated><id>https://ib.bsb.br/feed.xml</id><title type="html">infoBAG</title><entry><title type="html">Documentation of Modifiable Variables for LPAT</title><link href="https://ib.bsb.br/documentation-of-modifiable-variables-for-lpat/" rel="alternate" type="text/html" title="Documentation of Modifiable Variables for LPAT" /><published>2024-11-29T00:00:00+00:00</published><updated>2024-11-29T15:17:04+00:00</updated><id>https://ib.bsb.br/documentation-of-modifiable-variables-for-lpat</id><content type="html" xml:base="https://ib.bsb.br/documentation-of-modifiable-variables-for-lpat/"><![CDATA[<h3 id="coordinate-system">Coordinate System</h3>

<ul>
  <li><strong>Origin:</strong> Top-left corner <code class="language-plaintext highlighter-rouge">(0,0)</code></li>
  <li><strong>Axes:</strong>
    <ul>
      <li><strong>X-axis:</strong> Increases to the right</li>
      <li><strong>Y-axis:</strong> Increases downward</li>
    </ul>
  </li>
  <li><strong>Units:</strong> Pixels</li>
</ul>

<h2 id="object-types-and-their-modifiable-properties">Object Types and Their Modifiable Properties</h2>

<h3 id="1-rectangle-rect">1. Rectangle (<code class="language-plaintext highlighter-rouge">rect</code>)</h3>

<p><strong>Purpose:</strong> Represents rectangular shapes such as vehicles, road areas, or other structural elements.</p>

<p><strong>Key Properties:</strong></p>

<ul>
  <li><strong>Positioning:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">left</code> <em>(Number)</em>: Horizontal position relative to the origin.</li>
      <li><code class="language-plaintext highlighter-rouge">top</code> <em>(Number)</em>: Vertical position relative to the origin.</li>
    </ul>
  </li>
  <li><strong>Dimensions:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">width</code> <em>(Number)</em>: Base width before scaling.</li>
      <li><code class="language-plaintext highlighter-rouge">height</code> <em>(Number)</em>: Base height before scaling.</li>
    </ul>
  </li>
  <li><strong>Styling:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">fill</code> <em>(String)</em>: Fill color (e.g., <code class="language-plaintext highlighter-rouge">"#247a49"</code>).</li>
      <li>
        <table>
          <tbody>
            <tr>
              <td><code class="language-plaintext highlighter-rouge">stroke</code> *(String</td>
              <td>null)*: Border color. <code class="language-plaintext highlighter-rouge">null</code> if no stroke.</td>
            </tr>
          </tbody>
        </table>
      </li>
      <li><code class="language-plaintext highlighter-rouge">strokeWidth</code> <em>(Number)</em>: Thickness of the border.</li>
      <li><code class="language-plaintext highlighter-rouge">fillRule</code> <em>(String)</em>: Determines how the interior of the shape is determined (e.g., <code class="language-plaintext highlighter-rouge">"nonzero"</code>).</li>
    </ul>
  </li>
  <li><strong>Transformations:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">scaleX</code> <em>(Number)</em>: Horizontal scaling factor.</li>
      <li><code class="language-plaintext highlighter-rouge">scaleY</code> <em>(Number)</em>: Vertical scaling factor.</li>
      <li><code class="language-plaintext highlighter-rouge">angle</code> <em>(Number)</em>: Rotation angle in degrees.</li>
      <li><code class="language-plaintext highlighter-rouge">flipX</code> <em>(Boolean)</em>: Flips the shape horizontally if <code class="language-plaintext highlighter-rouge">true</code>.</li>
      <li><code class="language-plaintext highlighter-rouge">flipY</code> <em>(Boolean)</em>: Flips the shape vertically if <code class="language-plaintext highlighter-rouge">true</code>.</li>
      <li><code class="language-plaintext highlighter-rouge">skewX</code> <em>(Number)</em>: Skews the shape along the X-axis.</li>
      <li><code class="language-plaintext highlighter-rouge">skewY</code> <em>(Number)</em>: Skews the shape along the Y-axis.</li>
    </ul>
  </li>
  <li><strong>Appearance:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">opacity</code> <em>(Number)</em>: Transparency level (0 to 1).</li>
      <li><code class="language-plaintext highlighter-rouge">backgroundColor</code> <em>(String)</em>: Background color inside the shape.</li>
      <li><code class="language-plaintext highlighter-rouge">visible</code> <em>(Boolean)</em>: Determines if the shape is rendered.</li>
    </ul>
  </li>
  <li><strong>Interactivity:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">selectable</code> <em>(Boolean)</em>: If <code class="language-plaintext highlighter-rouge">true</code>, the shape can be selected.</li>
      <li><code class="language-plaintext highlighter-rouge">hasBorders</code> <em>(Boolean)</em>: If <code class="language-plaintext highlighter-rouge">true</code>, borders are shown when selected.</li>
      <li><code class="language-plaintext highlighter-rouge">hasControls</code> <em>(Boolean)</em>: If <code class="language-plaintext highlighter-rouge">true</code>, control handles are available for transformation.</li>
      <li><code class="language-plaintext highlighter-rouge">lockMovementX</code> <em>(Boolean)</em>: Prevents horizontal movement if <code class="language-plaintext highlighter-rouge">true</code>.</li>
      <li><code class="language-plaintext highlighter-rouge">lockMovementY</code> <em>(Boolean)</em>: Prevents vertical movement if <code class="language-plaintext highlighter-rouge">true</code>.</li>
    </ul>
  </li>
</ul>

<p><strong>Example Modification:</strong></p>

<p>To change the color and size of a vehicle:</p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"rect"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fill"</span><span class="p">:</span><span class="w"> </span><span class="s2">"#ff0000"</span><span class="p">,</span><span class="w">           </span><span class="err">//</span><span class="w"> </span><span class="err">Changes</span><span class="w"> </span><span class="err">fill</span><span class="w"> </span><span class="err">color</span><span class="w"> </span><span class="err">to</span><span class="w"> </span><span class="err">red</span><span class="w">
  </span><span class="nl">"scaleX"</span><span class="p">:</span><span class="w"> </span><span class="mi">30</span><span class="p">,</span><span class="w">                </span><span class="err">//</span><span class="w"> </span><span class="err">Increases</span><span class="w"> </span><span class="err">width</span><span class="w"> </span><span class="err">scaling</span><span class="w">
  </span><span class="nl">"scaleY"</span><span class="p">:</span><span class="w"> </span><span class="mi">15</span><span class="p">,</span><span class="w">                </span><span class="err">//</span><span class="w"> </span><span class="err">Increases</span><span class="w"> </span><span class="err">height</span><span class="w"> </span><span class="err">scaling</span><span class="w">
  </span><span class="nl">"angle"</span><span class="p">:</span><span class="w"> </span><span class="mi">45</span><span class="w">                  </span><span class="err">//</span><span class="w"> </span><span class="err">Rotates</span><span class="w"> </span><span class="err">the</span><span class="w"> </span><span class="err">rectangle</span><span class="w"> </span><span class="err">by</span><span class="w"> </span><span class="mi">45</span><span class="w"> </span><span class="err">degrees</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h3 id="2-path-path">2. Path (<code class="language-plaintext highlighter-rouge">path</code>)</h3>

<p><strong>Purpose:</strong> Defines complex shapes and lines, such as roads, tire marks, arrows, and custom symbols.</p>

<p><strong>Key Properties:</strong></p>

<ul>
  <li><strong>Positioning:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">left</code> <em>(Number)</em>: Horizontal position relative to the origin.</li>
      <li><code class="language-plaintext highlighter-rouge">top</code> <em>(Number)</em>: Vertical position relative to the origin.</li>
      <li><code class="language-plaintext highlighter-rouge">pathOffset</code> <em>(Object)</em>: <code class="language-plaintext highlighter-rouge">{x: Number, y: Number}</code> shifts the path coordinates.</li>
    </ul>
  </li>
  <li><strong>Dimensions:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">width</code> <em>(Number)</em>: Base width.</li>
      <li><code class="language-plaintext highlighter-rouge">height</code> <em>(Number)</em>: Base height.</li>
    </ul>
  </li>
  <li><strong>Styling:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">fill</code> <em>(String)</em>: Fill color.</li>
      <li>
        <table>
          <tbody>
            <tr>
              <td><code class="language-plaintext highlighter-rouge">stroke</code> *(String</td>
              <td>null)*: Border color.</td>
            </tr>
          </tbody>
        </table>
      </li>
      <li><code class="language-plaintext highlighter-rouge">strokeWidth</code> <em>(Number)</em>: Thickness of the border.</li>
      <li>
        <table>
          <tbody>
            <tr>
              <td><code class="language-plaintext highlighter-rouge">strokeDashArray</code> *(Array</td>
              <td>null)*: Creates dashed lines (e.g., <code class="language-plaintext highlighter-rouge">[10, 20]</code>).</td>
            </tr>
          </tbody>
        </table>
      </li>
    </ul>
  </li>
  <li><strong>Transformations:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">scaleX</code>, <code class="language-plaintext highlighter-rouge">scaleY</code>, <code class="language-plaintext highlighter-rouge">angle</code>, <code class="language-plaintext highlighter-rouge">flipX</code>, <code class="language-plaintext highlighter-rouge">flipY</code>, <code class="language-plaintext highlighter-rouge">skewX</code>, <code class="language-plaintext highlighter-rouge">skewY</code> <em>(Same as <code class="language-plaintext highlighter-rouge">rect</code>)</em></li>
    </ul>
  </li>
  <li><strong>Path Definition:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">path</code> <em>(Array)</em>: Array of drawing commands defining the shape.
        <ul>
          <li><strong>Commands:</strong>
            <ul>
              <li><code class="language-plaintext highlighter-rouge">"M"</code>: Move to</li>
              <li><code class="language-plaintext highlighter-rouge">"L"</code>: Line to</li>
              <li><code class="language-plaintext highlighter-rouge">"C"</code>: Cubic Bézier curve</li>
              <li><code class="language-plaintext highlighter-rouge">"c"</code>: Relative cubic Bézier curve</li>
              <li><code class="language-plaintext highlighter-rouge">"Z"</code>: Close path</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>Appearance:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">opacity</code>, <code class="language-plaintext highlighter-rouge">backgroundColor</code>, <code class="language-plaintext highlighter-rouge">fillRule</code>, <code class="language-plaintext highlighter-rouge">visible</code> <em>(Same as <code class="language-plaintext highlighter-rouge">rect</code>)</em></li>
    </ul>
  </li>
  <li><strong>Interactivity:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">selectable</code>, <code class="language-plaintext highlighter-rouge">hasBorders</code>, <code class="language-plaintext highlighter-rouge">hasControls</code>, <code class="language-plaintext highlighter-rouge">lockMovementX</code>, <code class="language-plaintext highlighter-rouge">lockMovementY</code> <em>(Same as <code class="language-plaintext highlighter-rouge">rect</code>)</em></li>
    </ul>
  </li>
</ul>

<p><strong>Example Modification:</strong></p>

<p>To change the road’s color and make it dashed:</p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"path"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fill"</span><span class="p">:</span><span class="w"> </span><span class="s2">"gray"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"stroke"</span><span class="p">:</span><span class="w"> </span><span class="s2">"black"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"strokeWidth"</span><span class="p">:</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span><span class="w">
  </span><span class="nl">"strokeDashArray"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="mi">5</span><span class="p">,</span><span class="w"> </span><span class="mi">15</span><span class="p">],</span><span class="w">
  </span><span class="nl">"scaleX"</span><span class="p">:</span><span class="w"> </span><span class="mf">1.5</span><span class="p">,</span><span class="w">
  </span><span class="nl">"scaleY"</span><span class="p">:</span><span class="w"> </span><span class="mf">1.5</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h3 id="3-group-group">3. Group (<code class="language-plaintext highlighter-rouge">group</code>)</h3>

<p><strong>Purpose:</strong> Groups multiple objects together, allowing collective transformations and property settings.</p>

<p><strong>Key Properties:</strong></p>

<ul>
  <li><strong>Positioning:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">left</code>, <code class="language-plaintext highlighter-rouge">top</code> <em>(Number)</em>: Position of the group.</li>
      <li><code class="language-plaintext highlighter-rouge">width</code>, <code class="language-plaintext highlighter-rouge">height</code> <em>(Number)</em>: Dimensions of the group.</li>
    </ul>
  </li>
  <li><strong>Styling and Transformations:</strong>
    <ul>
      <li>Inherits styling and transformation properties that can be applied to all nested objects.</li>
      <li><code class="language-plaintext highlighter-rouge">fill</code>, <code class="language-plaintext highlighter-rouge">stroke</code>, etc., can be overridden within nested objects.</li>
    </ul>
  </li>
  <li><strong>Nested Objects:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">objects</code> <em>(Array)</em>: Contains child objects (<code class="language-plaintext highlighter-rouge">rect</code>, <code class="language-plaintext highlighter-rouge">path</code>, <code class="language-plaintext highlighter-rouge">text</code>, etc.).</li>
    </ul>
  </li>
  <li><strong>Appearance:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">opacity</code>, <code class="language-plaintext highlighter-rouge">visible</code>, <code class="language-plaintext highlighter-rouge">clipTo</code>, <code class="language-plaintext highlighter-rouge">backgroundColor</code>, <code class="language-plaintext highlighter-rouge">fillRule</code> <em>(Same as above)</em></li>
    </ul>
  </li>
  <li><strong>Interactivity:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">selectable</code>, <code class="language-plaintext highlighter-rouge">hasBorders</code>, <code class="language-plaintext highlighter-rouge">hasControls</code>, <code class="language-plaintext highlighter-rouge">lockMovementX</code>, <code class="language-plaintext highlighter-rouge">lockMovementY</code> <em>(Same as above)</em></li>
    </ul>
  </li>
</ul>

<p><strong>Example Modification:</strong></p>

<p>To rotate all elements within a group:</p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"group"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"angle"</span><span class="p">:</span><span class="w"> </span><span class="mi">90</span><span class="p">,</span><span class="w">
  </span><span class="nl">"objects"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="err">//</span><span class="w"> </span><span class="err">Nested</span><span class="w"> </span><span class="err">objects</span><span class="w"> </span><span class="err">here</span><span class="w">
  </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h3 id="4-interactive-text-i-text-and-text-text">4. Interactive Text (<code class="language-plaintext highlighter-rouge">i-text</code>) and Text (<code class="language-plaintext highlighter-rouge">text</code>)</h3>

<p><strong>Purpose:</strong> Displays textual information on the image. <code class="language-plaintext highlighter-rouge">i-text</code> allows interactivity such as editing.</p>

<p><strong>Key Properties:</strong></p>

<ul>
  <li><strong>Positioning:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">left</code>, <code class="language-plaintext highlighter-rouge">top</code> <em>(Number)</em>: Position of the text.</li>
    </ul>
  </li>
  <li><strong>Content:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">text</code> <em>(String)</em>: The actual text content.</li>
    </ul>
  </li>
  <li><strong>Styling:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">fontSize</code> <em>(Number)</em>: Size of the text.</li>
      <li>
        <table>
          <tbody>
            <tr>
              <td><code class="language-plaintext highlighter-rouge">fontWeight</code> *(String</td>
              <td>Number)*: Thickness of the text (e.g., <code class="language-plaintext highlighter-rouge">"bold"</code>, <code class="language-plaintext highlighter-rouge">800</code>).</td>
            </tr>
          </tbody>
        </table>
      </li>
      <li><code class="language-plaintext highlighter-rouge">fontFamily</code> <em>(String)</em>: Font type (e.g., <code class="language-plaintext highlighter-rouge">"Helvetica"</code>, <code class="language-plaintext highlighter-rouge">"monospace"</code>).</li>
      <li><code class="language-plaintext highlighter-rouge">fontStyle</code> <em>(String)</em>: Style of the font (e.g., <code class="language-plaintext highlighter-rouge">"italic"</code>).</li>
      <li><code class="language-plaintext highlighter-rouge">fill</code> <em>(String)</em>: Text color.</li>
      <li>
        <table>
          <tbody>
            <tr>
              <td><code class="language-plaintext highlighter-rouge">stroke</code> *(String</td>
              <td>null)*: Outline color around text.</td>
            </tr>
          </tbody>
        </table>
      </li>
      <li><code class="language-plaintext highlighter-rouge">strokeWidth</code> <em>(Number)</em>: Thickness of the text outline.</li>
      <li><code class="language-plaintext highlighter-rouge">textAlign</code> <em>(String)</em>: Alignment (<code class="language-plaintext highlighter-rouge">"left"</code>, <code class="language-plaintext highlighter-rouge">"center"</code>, <code class="language-plaintext highlighter-rouge">"right"</code>).</li>
      <li><code class="language-plaintext highlighter-rouge">lineHeight</code> <em>(Number)</em>: Spacing between lines.</li>
      <li><code class="language-plaintext highlighter-rouge">textDecoration</code> <em>(String)</em>: Decorations (<code class="language-plaintext highlighter-rouge">"underline"</code>, <code class="language-plaintext highlighter-rouge">"strikethrough"</code>).</li>
      <li><code class="language-plaintext highlighter-rouge">charSpacing</code> <em>(Number)</em>: Spacing between characters.</li>
      <li><code class="language-plaintext highlighter-rouge">textBackgroundColor</code> <em>(String)</em>: Background color behind the text.</li>
    </ul>
  </li>
  <li><strong>Transformations:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">scaleX</code>, <code class="language-plaintext highlighter-rouge">scaleY</code>, <code class="language-plaintext highlighter-rouge">angle</code>, <code class="language-plaintext highlighter-rouge">flipX</code>, <code class="language-plaintext highlighter-rouge">flipY</code> <em>(Same as <code class="language-plaintext highlighter-rouge">rect</code>)</em></li>
    </ul>
  </li>
  <li><strong>Appearance:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">opacity</code>, <code class="language-plaintext highlighter-rouge">visible</code>, <code class="language-plaintext highlighter-rouge">backgroundColor</code> <em>(Same as above)</em></li>
    </ul>
  </li>
  <li><strong>Interactivity:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">selectable</code>, <code class="language-plaintext highlighter-rouge">hasBorders</code>, <code class="language-plaintext highlighter-rouge">hasControls</code>, <code class="language-plaintext highlighter-rouge">lockMovementX</code>, <code class="language-plaintext highlighter-rouge">lockMovementY</code> <em>(Same as <code class="language-plaintext highlighter-rouge">rect</code>)</em></li>
    </ul>
  </li>
</ul>

<p><strong>Example Modification:</strong></p>

<p>To change the text content and font size:</p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"i-text"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"text"</span><span class="p">:</span><span class="w"> </span><span class="s2">"New Accident Report"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fontSize"</span><span class="p">:</span><span class="w"> </span><span class="mi">24</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fill"</span><span class="p">:</span><span class="w"> </span><span class="s2">"#ff0000"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h3 id="5-additional-properties">5. Additional Properties</h3>

<p><strong>Purpose:</strong> Define behaviors and additional styling not covered by the main categories.</p>

<ul>
  <li>
    <table>
      <tbody>
        <tr>
          <td><strong><code class="language-plaintext highlighter-rouge">shadow</code></strong> *(Object</td>
          <td>null)*: Adds shadow effects to the object.</td>
        </tr>
      </tbody>
    </table>
    <ul>
      <li><strong>Properties:</strong> <code class="language-plaintext highlighter-rouge">color</code>, <code class="language-plaintext highlighter-rouge">blur</code>, <code class="language-plaintext highlighter-rouge">offsetX</code>, <code class="language-plaintext highlighter-rouge">offsetY</code></li>
    </ul>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td><strong><code class="language-plaintext highlighter-rouge">clipTo</code></strong> *(Function</td>
          <td>null)*: Defines clipping regions for the object.</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <p><strong><code class="language-plaintext highlighter-rouge">backgroundColor</code></strong> <em>(String)</em>: Sets a background color within the object bounds.</p>
  </li>
  <li>
    <p><strong><code class="language-plaintext highlighter-rouge">fillRule</code></strong> <em>(String)</em>: Determines the filling rule for complex paths.</p>
  </li>
  <li>
    <p><strong><code class="language-plaintext highlighter-rouge">globalCompositeOperation</code></strong> <em>(String)</em>: Defines how the object is drawn relative to existing canvas content (e.g., <code class="language-plaintext highlighter-rouge">"source-over"</code>, <code class="language-plaintext highlighter-rouge">"multiply"</code>).</p>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td><strong><code class="language-plaintext highlighter-rouge">transformMatrix</code></strong> *(Array</td>
          <td>null)*: Custom transformation matrix for advanced transformations.</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li><strong><code class="language-plaintext highlighter-rouge">rx</code>, <code class="language-plaintext highlighter-rouge">ry</code></strong> <em>(Number)</em>: Defines the radius for rounded corners in rectangles.</li>
</ul>

<h3 id="6-understanding-path-definitions">6. Understanding <code class="language-plaintext highlighter-rouge">path</code> Definitions</h3>

<p>Paths define intricate shapes using a series of drawing commands. Understanding the <code class="language-plaintext highlighter-rouge">path</code> array is crucial for modifying complex elements.</p>

<p><strong>Common Commands:</strong></p>

<ul>
  <li><strong><code class="language-plaintext highlighter-rouge">"M x y"</code></strong>: Move to point <code class="language-plaintext highlighter-rouge">(x, y)</code> without drawing.</li>
  <li><strong><code class="language-plaintext highlighter-rouge">"L x y"</code></strong>: Draw a straight line to point <code class="language-plaintext highlighter-rouge">(x, y)</code>.</li>
  <li><strong><code class="language-plaintext highlighter-rouge">"C x1 y1 x2 y2 x y"</code></strong>: Draw a cubic Bézier curve with control points <code class="language-plaintext highlighter-rouge">(x1, y1)</code> and <code class="language-plaintext highlighter-rouge">(x2, y2)</code> ending at <code class="language-plaintext highlighter-rouge">(x, y)</code>.</li>
  <li><strong><code class="language-plaintext highlighter-rouge">"c dx1 dy1 dx2 dy2 dx dy"</code></strong>: Draw a relative cubic Bézier curve.</li>
  <li><strong><code class="language-plaintext highlighter-rouge">"Z"</code></strong>: Close the current path by drawing a straight line back to the start.</li>
</ul>

<p><strong>Example Modification:</strong></p>

<p>To alter the shape of a tire mark:</p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"path"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"path"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="p">[</span><span class="s2">"M"</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">],</span><span class="w">
    </span><span class="p">[</span><span class="s2">"L"</span><span class="p">,</span><span class="w"> </span><span class="mi">50</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">],</span><span class="w">
    </span><span class="p">[</span><span class="s2">"L"</span><span class="p">,</span><span class="w"> </span><span class="mi">50</span><span class="p">,</span><span class="w"> </span><span class="mi">10</span><span class="p">],</span><span class="w">
    </span><span class="p">[</span><span class="s2">"L"</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">10</span><span class="p">],</span><span class="w">
    </span><span class="p">[</span><span class="s2">"Z"</span><span class="p">]</span><span class="w">
  </span><span class="p">],</span><span class="w">
  </span><span class="nl">"fill"</span><span class="p">:</span><span class="w"> </span><span class="s2">"#000000"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"stroke"</span><span class="p">:</span><span class="w"> </span><span class="s2">"#ff0000"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"strokeWidth"</span><span class="p">:</span><span class="w"> </span><span class="mi">2</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h3 id="7-interactive-properties">7. Interactive Properties</h3>

<p>These properties control how users can interact with the objects within the web application.</p>

<ul>
  <li><strong><code class="language-plaintext highlighter-rouge">selectable</code></strong> <em>(Boolean)</em>: Determines if the object can be selected by the user.</li>
  <li><strong><code class="language-plaintext highlighter-rouge">hasBorders</code></strong> <em>(Boolean)</em>: If <code class="language-plaintext highlighter-rouge">true</code>, borders appear when the object is selected.</li>
  <li><strong><code class="language-plaintext highlighter-rouge">hasControls</code></strong> <em>(Boolean)</em>: If <code class="language-plaintext highlighter-rouge">true</code>, control handles (for scaling, rotating) are displayed.</li>
  <li><strong><code class="language-plaintext highlighter-rouge">lockMovementX</code></strong>, <strong><code class="language-plaintext highlighter-rouge">lockMovementY</code></strong> <em>(Boolean)</em>: Prevents movement along the respective axis when <code class="language-plaintext highlighter-rouge">true</code>.</li>
</ul>

<p><strong>Example Modification:</strong></p>

<p>To make an object non-interactive:</p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"rect"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"selectable"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
  </span><span class="nl">"hasBorders"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
  </span><span class="nl">"hasControls"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
  </span><span class="nl">"lockMovementX"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
  </span><span class="nl">"lockMovementY"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h3 id="8-grouping-and-hierarchical-transformations">8. Grouping and Hierarchical Transformations</h3>

<p>Groups (<code class="language-plaintext highlighter-rouge">group</code> objects) allow multiple objects to be manipulated collectively. Transformations applied to a group affect all nested objects unless overridden.</p>

<p><strong>Example Modification:</strong></p>

<p>To uniformly scale all elements within a group:</p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"group"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"scaleX"</span><span class="p">:</span><span class="w"> </span><span class="mf">1.5</span><span class="p">,</span><span class="w">
  </span><span class="nl">"scaleY"</span><span class="p">:</span><span class="w"> </span><span class="mf">1.5</span><span class="p">,</span><span class="w">
  </span><span class="nl">"objects"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="err">//</span><span class="w"> </span><span class="err">Nested</span><span class="w"> </span><span class="err">objects</span><span class="w"> </span><span class="err">here</span><span class="w">
  </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h3 id="9-custom-properties">9. Custom Properties</h3>

<p>Some objects contain custom properties that define specific behaviors or characteristics.</p>

<ul>
  <li><strong><code class="language-plaintext highlighter-rouge">tipo</code></strong> <em>(String)</em>: Defines the type or category of the object (e.g., <code class="language-plaintext highlighter-rouge">"MarcoQuilometrico"</code>, <code class="language-plaintext highlighter-rouge">"txtBR"</code>, <code class="language-plaintext highlighter-rouge">"SetaD"</code>).</li>
  <li><strong><code class="language-plaintext highlighter-rouge">pathOffset</code></strong> <em>(Object)</em>: <code class="language-plaintext highlighter-rouge">{x: Number, y: Number}</code> used for adjusting the positioning of paths within group objects.</li>
</ul>

<p><strong>Example Modification:</strong></p>

<p>To change the type of a marker:</p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"i-text"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"tipo"</span><span class="p">:</span><span class="w"> </span><span class="s2">"txtNewType"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h2 id="practical-examples-of-modifications">Practical Examples of Modifications</h2>

<h3 id="example-1-changing-the-road-color-and-style">Example 1: Changing the Road Color and Style</h3>

<p><strong>Original Road Object:</strong></p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"path"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fill"</span><span class="p">:</span><span class="s2">"gray"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"stroke"</span><span class="p">:</span><span class="kc">null</span><span class="p">,</span><span class="w">
  </span><span class="nl">"strokeWidth"</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span><span class="w">
  </span><span class="nl">"path"</span><span class="p">:[[</span><span class="s2">"M"</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">250</span><span class="p">],[</span><span class="s2">"L"</span><span class="p">,</span><span class="mi">1300</span><span class="p">,</span><span class="mi">250</span><span class="p">],[</span><span class="s2">"L"</span><span class="p">,</span><span class="mi">1300</span><span class="p">,</span><span class="mi">150</span><span class="p">],[</span><span class="s2">"L"</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">150</span><span class="p">],[</span><span class="s2">"Z"</span><span class="p">]]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p><strong>Modification Objectives:</strong></p>
<ul>
  <li>Change road color to dark gray.</li>
  <li>Add a dashed line pattern.</li>
</ul>

<p><strong>Modified Road Object:</strong></p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"path"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fill"</span><span class="p">:</span><span class="s2">"#4d4d4d"</span><span class="p">,</span><span class="w">               </span><span class="err">//</span><span class="w"> </span><span class="err">Dark</span><span class="w"> </span><span class="err">gray</span><span class="w"> </span><span class="err">fill</span><span class="w">
  </span><span class="nl">"stroke"</span><span class="p">:</span><span class="s2">"#ffffff"</span><span class="p">,</span><span class="w">             </span><span class="err">//</span><span class="w"> </span><span class="err">White</span><span class="w"> </span><span class="err">border</span><span class="w">
  </span><span class="nl">"strokeWidth"</span><span class="p">:</span><span class="mi">2</span><span class="p">,</span><span class="w">
  </span><span class="nl">"strokeDashArray"</span><span class="p">:[</span><span class="mi">10</span><span class="p">,</span><span class="w"> </span><span class="mi">15</span><span class="p">],</span><span class="w">     </span><span class="err">//</span><span class="w"> </span><span class="err">Dashed</span><span class="w"> </span><span class="err">pattern</span><span class="w">
  </span><span class="nl">"path"</span><span class="p">:[[</span><span class="s2">"M"</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">250</span><span class="p">],[</span><span class="s2">"L"</span><span class="p">,</span><span class="mi">1300</span><span class="p">,</span><span class="mi">250</span><span class="p">],[</span><span class="s2">"L"</span><span class="p">,</span><span class="mi">1300</span><span class="p">,</span><span class="mi">150</span><span class="p">],[</span><span class="s2">"L"</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">150</span><span class="p">],[</span><span class="s2">"Z"</span><span class="p">]]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h3 id="example-2-adjusting-vehicle-position-and-orientation">Example 2: Adjusting Vehicle Position and Orientation</h3>

<p><strong>Original Vehicle Object:</strong></p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"rect"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"left"</span><span class="p">:</span><span class="mf">-11.5</span><span class="p">,</span><span class="w">
  </span><span class="nl">"top"</span><span class="p">:</span><span class="mf">-141.25</span><span class="p">,</span><span class="w">
  </span><span class="nl">"width"</span><span class="p">:</span><span class="mi">50</span><span class="p">,</span><span class="w">
  </span><span class="nl">"height"</span><span class="p">:</span><span class="mi">50</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fill"</span><span class="p">:</span><span class="s2">"#247a49"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"scaleX"</span><span class="p">:</span><span class="mf">23.88</span><span class="p">,</span><span class="w">
  </span><span class="nl">"scaleY"</span><span class="p">:</span><span class="mf">12.95</span><span class="p">,</span><span class="w">
  </span><span class="nl">"angle"</span><span class="p">:</span><span class="mi">0</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p><strong>Modification Objectives:</strong></p>
<ul>
  <li>Move vehicle to a new position.</li>
  <li>Rotate vehicle by 30 degrees.</li>
</ul>

<p><strong>Modified Vehicle Object:</strong></p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"rect"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"left"</span><span class="p">:</span><span class="mi">100</span><span class="p">,</span><span class="w">                      </span><span class="err">//</span><span class="w"> </span><span class="err">New</span><span class="w"> </span><span class="err">X</span><span class="w"> </span><span class="err">position</span><span class="w">
  </span><span class="nl">"top"</span><span class="p">:</span><span class="mi">200</span><span class="p">,</span><span class="w">                       </span><span class="err">//</span><span class="w"> </span><span class="err">New</span><span class="w"> </span><span class="err">Y</span><span class="w"> </span><span class="err">position</span><span class="w">
  </span><span class="nl">"width"</span><span class="p">:</span><span class="mi">50</span><span class="p">,</span><span class="w">
  </span><span class="nl">"height"</span><span class="p">:</span><span class="mi">50</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fill"</span><span class="p">:</span><span class="s2">"#247a49"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"scaleX"</span><span class="p">:</span><span class="mf">23.88</span><span class="p">,</span><span class="w">
  </span><span class="nl">"scaleY"</span><span class="p">:</span><span class="mf">12.95</span><span class="p">,</span><span class="w">
  </span><span class="nl">"angle"</span><span class="p">:</span><span class="mi">30</span><span class="w">                       </span><span class="err">//</span><span class="w"> </span><span class="err">Rotate</span><span class="w"> </span><span class="err">by</span><span class="w"> </span><span class="mi">30</span><span class="w"> </span><span class="err">degrees</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h3 id="example-3-updating-text-information">Example 3: Updating Text Information</h3>

<p><strong>Original Text Object:</strong></p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"i-text"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"text"</span><span class="p">:</span><span class="s2">"BR-158"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fontSize"</span><span class="p">:</span><span class="mi">10</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fontWeight"</span><span class="p">:</span><span class="s2">"800"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fontFamily"</span><span class="p">:</span><span class="s2">"monospace"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fill"</span><span class="p">:</span><span class="s2">"white"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"left"</span><span class="p">:</span><span class="mi">-19</span><span class="p">,</span><span class="w">
  </span><span class="nl">"top"</span><span class="p">:</span><span class="mi">-29</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p><strong>Modification Objectives:</strong></p>
<ul>
  <li>Change text to “BR-159”.</li>
  <li>Increase font size.</li>
  <li>Change text color to yellow.</li>
</ul>

<p><strong>Modified Text Object:</strong></p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"i-text"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"text"</span><span class="p">:</span><span class="s2">"BR-159"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fontSize"</span><span class="p">:</span><span class="mi">14</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fontWeight"</span><span class="p">:</span><span class="s2">"800"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fontFamily"</span><span class="p">:</span><span class="s2">"monospace"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fill"</span><span class="p">:</span><span class="s2">"#FFFF00"</span><span class="p">,</span><span class="w">               </span><span class="err">//</span><span class="w"> </span><span class="err">Yellow</span><span class="w"> </span><span class="err">color</span><span class="w">
  </span><span class="nl">"left"</span><span class="p">:</span><span class="mi">-19</span><span class="p">,</span><span class="w">
  </span><span class="nl">"top"</span><span class="p">:</span><span class="mi">-29</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h2 id="understanding-transformation-properties">Understanding Transformation Properties</h2>

<p>Transformation properties adjust the object’s size, rotation, and orientation.</p>

<ul>
  <li><strong><code class="language-plaintext highlighter-rouge">scaleX</code> and <code class="language-plaintext highlighter-rouge">scaleY</code>:</strong> Scale factors along the X and Y axes. Values greater than 1 enlarge the object, while values between 0 and 1 reduce its size.</li>
  <li><strong><code class="language-plaintext highlighter-rouge">angle</code>:</strong> Rotates the object clockwise by the specified degrees.</li>
  <li><strong><code class="language-plaintext highlighter-rouge">flipX</code> and <code class="language-plaintext highlighter-rouge">flipY</code>:</strong> Flips the object horizontally or vertically.</li>
  <li><strong><code class="language-plaintext highlighter-rouge">skewX</code> and <code class="language-plaintext highlighter-rouge">skewY</code>:</strong> Shears the object along the X or Y axis.</li>
</ul>

<p><strong>Example:</strong></p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"scaleX"</span><span class="p">:</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span><span class="w">        </span><span class="err">//</span><span class="w"> </span><span class="err">Doubles</span><span class="w"> </span><span class="err">the</span><span class="w"> </span><span class="err">width</span><span class="w">
  </span><span class="nl">"scaleY"</span><span class="p">:</span><span class="w"> </span><span class="mf">0.5</span><span class="p">,</span><span class="w">      </span><span class="err">//</span><span class="w"> </span><span class="err">Halves</span><span class="w"> </span><span class="err">the</span><span class="w"> </span><span class="err">height</span><span class="w">
  </span><span class="nl">"angle"</span><span class="p">:</span><span class="w"> </span><span class="mi">45</span><span class="p">,</span><span class="w">        </span><span class="err">//</span><span class="w"> </span><span class="err">Rotates</span><span class="w"> </span><span class="mi">45</span><span class="w"> </span><span class="err">degrees</span><span class="w"> </span><span class="err">clockwise</span><span class="w">
  </span><span class="nl">"flipX"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">      </span><span class="err">//</span><span class="w"> </span><span class="err">Flips</span><span class="w"> </span><span class="err">horizontally</span><span class="w">
  </span><span class="nl">"flipY"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
  </span><span class="nl">"skewX"</span><span class="p">:</span><span class="w"> </span><span class="mi">10</span><span class="p">,</span><span class="w">        </span><span class="err">//</span><span class="w"> </span><span class="err">Shears</span><span class="w"> </span><span class="err">along</span><span class="w"> </span><span class="err">X-axis</span><span class="w"> </span><span class="err">by</span><span class="w"> </span><span class="mi">10</span><span class="w"> </span><span class="err">degrees</span><span class="w">
  </span><span class="nl">"skewY"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h2 id="handling-nested-groups">Handling Nested Groups</h2>

<p>Groups can contain multiple objects, allowing collective transformations and styling.</p>

<p><strong>Original Group Object:</strong></p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"group"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"left"</span><span class="p">:</span><span class="mi">10</span><span class="p">,</span><span class="w">
  </span><span class="nl">"top"</span><span class="p">:</span><span class="mi">10</span><span class="p">,</span><span class="w">
  </span><span class="nl">"width"</span><span class="p">:</span><span class="mi">50</span><span class="p">,</span><span class="w">
  </span><span class="nl">"height"</span><span class="p">:</span><span class="mi">70</span><span class="p">,</span><span class="w">
  </span><span class="nl">"objects"</span><span class="p">:[</span><span class="w">
    </span><span class="err">//</span><span class="w"> </span><span class="err">Nested</span><span class="w"> </span><span class="err">objects</span><span class="w">
  </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p><strong>Modification Objectives:</strong></p>
<ul>
  <li>Rotate the entire group by 15 degrees.</li>
  <li>Change the fill color of all nested rectangles.</li>
</ul>

<p><strong>Modified Group Object:</strong></p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"group"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"left"</span><span class="p">:</span><span class="mi">10</span><span class="p">,</span><span class="w">
  </span><span class="nl">"top"</span><span class="p">:</span><span class="mi">10</span><span class="p">,</span><span class="w">
  </span><span class="nl">"width"</span><span class="p">:</span><span class="mi">50</span><span class="p">,</span><span class="w">
  </span><span class="nl">"height"</span><span class="p">:</span><span class="mi">70</span><span class="p">,</span><span class="w">
  </span><span class="nl">"angle"</span><span class="p">:</span><span class="mi">15</span><span class="p">,</span><span class="w">                      </span><span class="err">//</span><span class="w"> </span><span class="err">Rotate</span><span class="w"> </span><span class="err">group</span><span class="w">
  </span><span class="nl">"objects"</span><span class="p">:[</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"rect"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"fill"</span><span class="p">:</span><span class="s2">"#FF5733"</span><span class="p">,</span><span class="w">            </span><span class="err">//</span><span class="w"> </span><span class="err">Change</span><span class="w"> </span><span class="err">fill</span><span class="w"> </span><span class="err">color</span><span class="w"> </span><span class="err">of</span><span class="w"> </span><span class="err">nested</span><span class="w"> </span><span class="err">rectangle</span><span class="w">
      </span><span class="err">//</span><span class="w"> </span><span class="err">Other</span><span class="w"> </span><span class="err">properties</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="err">//</span><span class="w"> </span><span class="err">Other</span><span class="w"> </span><span class="err">nested</span><span class="w"> </span><span class="err">objects</span><span class="w">
  </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h2 id="interactive-elements">Interactive Elements</h2>

<p>Interactive properties enhance user engagement and control within the web application.</p>

<ul>
  <li><strong><code class="language-plaintext highlighter-rouge">selectable</code>:</strong> Allows users to select the object for modifications.</li>
  <li><strong><code class="language-plaintext highlighter-rouge">hasBorders</code> and <code class="language-plaintext highlighter-rouge">hasControls</code>:</strong> Display borders and control handles when the object is selected.</li>
  <li><strong><code class="language-plaintext highlighter-rouge">lockMovementX</code> and <code class="language-plaintext highlighter-rouge">lockMovementY</code>:</strong> Restrict object movement along specific axes.</li>
</ul>

<p><strong>Example:</strong></p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"rect"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"selectable"</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span><span class="w">
  </span><span class="nl">"hasBorders"</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span><span class="w">
  </span><span class="nl">"hasControls"</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span><span class="w">
  </span><span class="nl">"lockMovementX"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="w">
  </span><span class="nl">"lockMovementY"</span><span class="p">:</span><span class="kc">false</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h2 id="custom-attributes">Custom Attributes</h2>

<p>Some objects include custom properties that define specific characteristics or behaviors.</p>

<ul>
  <li><strong><code class="language-plaintext highlighter-rouge">tipo</code>:</strong> A string identifier denoting the object’s category or purpose.
    <ul>
      <li><strong>Example Values:</strong> <code class="language-plaintext highlighter-rouge">"MarcoQuilometrico"</code>, <code class="language-plaintext highlighter-rouge">"SetaD"</code>, <code class="language-plaintext highlighter-rouge">"SetaE"</code>, <code class="language-plaintext highlighter-rouge">"txtBR"</code>, <code class="language-plaintext highlighter-rouge">"txtKM"</code></li>
    </ul>
  </li>
  <li><strong><code class="language-plaintext highlighter-rouge">pathOffset</code>:</strong> Defines the offset position for path elements within a group.
    <ul>
      <li><strong>Structure:</strong> <code class="language-plaintext highlighter-rouge">{ x: Number, y: Number }</code></li>
    </ul>
  </li>
  <li><strong><code class="language-plaintext highlighter-rouge">backgroundColor</code>:</strong> Sets a background color distinct from the <code class="language-plaintext highlighter-rouge">fill</code> property.</li>
</ul>

<p><strong>Example Modification:</strong></p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"tipo"</span><span class="p">:</span><span class="w"> </span><span class="s2">"NewType"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"pathOffset"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="nl">"x"</span><span class="p">:</span><span class="w"> </span><span class="mi">10</span><span class="p">,</span><span class="w"> </span><span class="nl">"y"</span><span class="p">:</span><span class="w"> </span><span class="mi">20</span><span class="w"> </span><span class="p">},</span><span class="w">
  </span><span class="nl">"backgroundColor"</span><span class="p">:</span><span class="w"> </span><span class="s2">"#FFFFFF"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h2 id="managing-opacity-and-visibility">Managing Opacity and Visibility</h2>

<ul>
  <li><strong><code class="language-plaintext highlighter-rouge">opacity</code>:</strong> Controls the transparency of the object.
    <ul>
      <li><strong>Range:</strong> <code class="language-plaintext highlighter-rouge">0</code> (completely transparent) to <code class="language-plaintext highlighter-rouge">1</code> (fully opaque)</li>
    </ul>
  </li>
  <li><strong><code class="language-plaintext highlighter-rouge">visible</code>:</strong> Toggles the visibility of the object.
    <ul>
      <li><strong>Values:</strong> <code class="language-plaintext highlighter-rouge">true</code> (visible), <code class="language-plaintext highlighter-rouge">false</code> (hidden)</li>
    </ul>
  </li>
</ul>

<p><strong>Example:</strong></p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"opacity"</span><span class="p">:</span><span class="w"> </span><span class="mf">0.5</span><span class="p">,</span><span class="w">     </span><span class="err">//</span><span class="w"> </span><span class="mi">50</span><span class="err">%</span><span class="w"> </span><span class="err">transparency</span><span class="w">
  </span><span class="nl">"visible"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">     </span><span class="err">//</span><span class="w"> </span><span class="err">Object</span><span class="w"> </span><span class="err">is</span><span class="w"> </span><span class="err">visible</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h2 id="utilizing-shadows">Utilizing Shadows</h2>

<p>Shadows add depth and emphasis to objects.</p>

<p><strong>Shadow Properties:</strong></p>
<ul>
  <li><strong><code class="language-plaintext highlighter-rouge">color</code></strong> <em>(String)</em>: Color of the shadow (e.g., <code class="language-plaintext highlighter-rouge">"rgba(0,0,0,0.5)"</code>).</li>
  <li><strong><code class="language-plaintext highlighter-rouge">blur</code></strong> <em>(Number)</em>: Blur radius of the shadow.</li>
  <li><strong><code class="language-plaintext highlighter-rouge">offsetX</code></strong> <em>(Number)</em>: Horizontal offset of the shadow.</li>
  <li><strong><code class="language-plaintext highlighter-rouge">offsetY</code></strong> <em>(Number)</em>: Vertical offset of the shadow.</li>
</ul>

<p><strong>Example Modification:</strong></p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"shadow"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"color"</span><span class="p">:</span><span class="w"> </span><span class="s2">"rgba(0,0,0,0.3)"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"blur"</span><span class="p">:</span><span class="w"> </span><span class="mi">10</span><span class="p">,</span><span class="w">
    </span><span class="nl">"offsetX"</span><span class="p">:</span><span class="w"> </span><span class="mi">5</span><span class="p">,</span><span class="w">
    </span><span class="nl">"offsetY"</span><span class="p">:</span><span class="w"> </span><span class="mi">5</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h2 id="example-comprehensive-modification">Example: Comprehensive Modification</h2>

<p><strong>Objective:</strong> Modify multiple aspects of the accident scene to represent a different scenario.</p>

<p><strong>Modifications:</strong></p>
<ul>
  <li>Change road color to dark gray with a dashed center line.</li>
  <li>Relocate the vehicle to a new position and rotate it by 30 degrees.</li>
  <li>Update text labels to reflect new information.</li>
  <li>Add shadow effects to the vehicle.</li>
  <li>Group elements to allow collective scaling.</li>
</ul>

<p><strong>Modified JSON Objects:</strong></p>

<ol>
  <li><strong>Road Path:</strong>
    <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"path"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fill"</span><span class="p">:</span><span class="s2">"#4d4d4d"</span><span class="p">,</span><span class="w">               </span><span class="err">//</span><span class="w"> </span><span class="err">Dark</span><span class="w"> </span><span class="err">gray</span><span class="w"> </span><span class="err">fill</span><span class="w">
  </span><span class="nl">"stroke"</span><span class="p">:</span><span class="s2">"#ffeb3b"</span><span class="p">,</span><span class="w">             </span><span class="err">//</span><span class="w"> </span><span class="err">Yellow</span><span class="w"> </span><span class="err">dashed</span><span class="w"> </span><span class="err">line</span><span class="w">
  </span><span class="nl">"strokeWidth"</span><span class="p">:</span><span class="mi">3</span><span class="p">,</span><span class="w">
  </span><span class="nl">"strokeDashArray"</span><span class="p">:[</span><span class="mi">15</span><span class="p">,</span><span class="w"> </span><span class="mi">10</span><span class="p">],</span><span class="w">     </span><span class="err">//</span><span class="w"> </span><span class="err">Dashed</span><span class="w"> </span><span class="err">pattern</span><span class="w">
  </span><span class="nl">"path"</span><span class="p">:[[</span><span class="s2">"M"</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">250</span><span class="p">],[</span><span class="s2">"L"</span><span class="p">,</span><span class="mi">1300</span><span class="p">,</span><span class="mi">250</span><span class="p">],[</span><span class="s2">"L"</span><span class="p">,</span><span class="mi">1300</span><span class="p">,</span><span class="mi">150</span><span class="p">],[</span><span class="s2">"L"</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">150</span><span class="p">],[</span><span class="s2">"Z"</span><span class="p">]],</span><span class="w">
  </span><span class="nl">"selectable"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="w">
  </span><span class="nl">"hasBorders"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="w">
  </span><span class="nl">"hasControls"</span><span class="p">:</span><span class="kc">false</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div>    </div>
  </li>
  <li><strong>Vehicle Rectangle:</strong>
    <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"rect"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"left"</span><span class="p">:</span><span class="mi">300</span><span class="p">,</span><span class="w">                      </span><span class="err">//</span><span class="w"> </span><span class="err">New</span><span class="w"> </span><span class="err">X</span><span class="w"> </span><span class="err">position</span><span class="w">
  </span><span class="nl">"top"</span><span class="p">:</span><span class="mi">400</span><span class="p">,</span><span class="w">                       </span><span class="err">//</span><span class="w"> </span><span class="err">New</span><span class="w"> </span><span class="err">Y</span><span class="w"> </span><span class="err">position</span><span class="w">
  </span><span class="nl">"width"</span><span class="p">:</span><span class="mi">50</span><span class="p">,</span><span class="w">
  </span><span class="nl">"height"</span><span class="p">:</span><span class="mi">50</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fill"</span><span class="p">:</span><span class="s2">"#247a49"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"stroke"</span><span class="p">:</span><span class="s2">"#000000"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"strokeWidth"</span><span class="p">:</span><span class="mi">2</span><span class="p">,</span><span class="w">
  </span><span class="nl">"scaleX"</span><span class="p">:</span><span class="mi">25</span><span class="p">,</span><span class="w">
  </span><span class="nl">"scaleY"</span><span class="p">:</span><span class="mi">15</span><span class="p">,</span><span class="w">
  </span><span class="nl">"angle"</span><span class="p">:</span><span class="mi">30</span><span class="p">,</span><span class="w">                      </span><span class="err">//</span><span class="w"> </span><span class="err">Rotated</span><span class="w"> </span><span class="mi">30</span><span class="w"> </span><span class="err">degrees</span><span class="w">
  </span><span class="nl">"opacity"</span><span class="p">:</span><span class="mf">0.9</span><span class="p">,</span><span class="w">
  </span><span class="nl">"shadow"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
 </span><span class="nl">"color"</span><span class="p">:</span><span class="w"> </span><span class="s2">"rgba(0,0,0,0.5)"</span><span class="p">,</span><span class="w">
 </span><span class="nl">"blur"</span><span class="p">:</span><span class="w"> </span><span class="mi">15</span><span class="p">,</span><span class="w">
 </span><span class="nl">"offsetX"</span><span class="p">:</span><span class="w"> </span><span class="mi">10</span><span class="p">,</span><span class="w">
 </span><span class="nl">"offsetY"</span><span class="p">:</span><span class="w"> </span><span class="mi">10</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"selectable"</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span><span class="w">
  </span><span class="nl">"hasBorders"</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span><span class="w">
  </span><span class="nl">"hasControls"</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span><span class="w">
  </span><span class="nl">"lockMovementX"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="w">
  </span><span class="nl">"lockMovementY"</span><span class="p">:</span><span class="kc">false</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div>    </div>
  </li>
  <li><strong>Vehicle Label (<code class="language-plaintext highlighter-rouge">i-text</code>):</strong>
    <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"i-text"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"text"</span><span class="p">:</span><span class="s2">"V2"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fontSize"</span><span class="p">:</span><span class="mi">20</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fontWeight"</span><span class="p">:</span><span class="s2">"bold"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fontFamily"</span><span class="p">:</span><span class="s2">"Arial"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fill"</span><span class="p">:</span><span class="s2">"#FFFFFF"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"left"</span><span class="p">:</span><span class="mi">290</span><span class="p">,</span><span class="w">                      </span><span class="err">//</span><span class="w"> </span><span class="err">Positioned</span><span class="w"> </span><span class="err">relative</span><span class="w"> </span><span class="err">to</span><span class="w"> </span><span class="err">vehicle</span><span class="w">
  </span><span class="nl">"top"</span><span class="p">:</span><span class="mi">380</span><span class="p">,</span><span class="w">
  </span><span class="nl">"angle"</span><span class="p">:</span><span class="mi">30</span><span class="p">,</span><span class="w">
  </span><span class="nl">"selectable"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="w">
  </span><span class="nl">"hasBorders"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="w">
  </span><span class="nl">"hasControls"</span><span class="p">:</span><span class="kc">false</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div>    </div>
  </li>
  <li><strong>Grouped Elements:</strong>
    <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"group"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"left"</span><span class="p">:</span><span class="mi">300</span><span class="p">,</span><span class="w">
  </span><span class="nl">"top"</span><span class="p">:</span><span class="mi">400</span><span class="p">,</span><span class="w">
  </span><span class="nl">"angle"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="w">
  </span><span class="nl">"objects"</span><span class="p">:[</span><span class="w">
 </span><span class="p">{</span><span class="w">
   </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"rect"</span><span class="p">,</span><span class="w">
   </span><span class="nl">"left"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="w">
   </span><span class="nl">"top"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="w">
   </span><span class="nl">"width"</span><span class="p">:</span><span class="mi">50</span><span class="p">,</span><span class="w">
   </span><span class="nl">"height"</span><span class="p">:</span><span class="mi">50</span><span class="p">,</span><span class="w">
   </span><span class="nl">"fill"</span><span class="p">:</span><span class="s2">"#247a49"</span><span class="p">,</span><span class="w">
   </span><span class="nl">"stroke"</span><span class="p">:</span><span class="s2">"#000000"</span><span class="p">,</span><span class="w">
   </span><span class="nl">"strokeWidth"</span><span class="p">:</span><span class="mi">2</span><span class="p">,</span><span class="w">
   </span><span class="nl">"scaleX"</span><span class="p">:</span><span class="mi">25</span><span class="p">,</span><span class="w">
   </span><span class="nl">"scaleY"</span><span class="p">:</span><span class="mi">15</span><span class="p">,</span><span class="w">
   </span><span class="nl">"opacity"</span><span class="p">:</span><span class="mf">0.9</span><span class="w">
 </span><span class="p">},</span><span class="w">
 </span><span class="p">{</span><span class="w">
   </span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"i-text"</span><span class="p">,</span><span class="w">
   </span><span class="nl">"text"</span><span class="p">:</span><span class="s2">"V2"</span><span class="p">,</span><span class="w">
   </span><span class="nl">"fontSize"</span><span class="p">:</span><span class="mi">20</span><span class="p">,</span><span class="w">
   </span><span class="nl">"fontWeight"</span><span class="p">:</span><span class="s2">"bold"</span><span class="p">,</span><span class="w">
   </span><span class="nl">"fontFamily"</span><span class="p">:</span><span class="s2">"Arial"</span><span class="p">,</span><span class="w">
   </span><span class="nl">"fill"</span><span class="p">:</span><span class="s2">"#FFFFFF"</span><span class="p">,</span><span class="w">
   </span><span class="nl">"left"</span><span class="p">:</span><span class="mi">-10</span><span class="p">,</span><span class="w">
   </span><span class="nl">"top"</span><span class="p">:</span><span class="mi">-20</span><span class="w">
 </span><span class="p">}</span><span class="w">
  </span><span class="p">],</span><span class="w">
  </span><span class="nl">"scaleX"</span><span class="p">:</span><span class="mf">1.2</span><span class="p">,</span><span class="w">                      </span><span class="err">//</span><span class="w"> </span><span class="err">Collective</span><span class="w"> </span><span class="err">scaling</span><span class="w">
  </span><span class="nl">"scaleY"</span><span class="p">:</span><span class="mf">1.2</span><span class="p">,</span><span class="w">
  </span><span class="nl">"selectable"</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span><span class="w">
  </span><span class="nl">"hasBorders"</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span><span class="w">
  </span><span class="nl">"hasControls"</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span><span class="w">
  </span><span class="nl">"lockMovementX"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="w">
  </span><span class="nl">"lockMovementY"</span><span class="p">:</span><span class="kc">false</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div>    </div>
  </li>
</ol>

<h2 id="summary-of-modifiable-variables">Summary of Modifiable Variables</h2>

<table>
  <thead>
    <tr>
      <th><strong>Property</strong></th>
      <th><strong>Description</strong></th>
      <th><strong>Possible Values/Examples</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">type</code></td>
      <td>Defines the object type</td>
      <td><code class="language-plaintext highlighter-rouge">"rect"</code>, <code class="language-plaintext highlighter-rouge">"path"</code>, <code class="language-plaintext highlighter-rouge">"group"</code>, <code class="language-plaintext highlighter-rouge">"i-text"</code>, <code class="language-plaintext highlighter-rouge">"text"</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">left</code> / <code class="language-plaintext highlighter-rouge">top</code></td>
      <td>Positioning coordinates</td>
      <td>Numeric values (e.g., <code class="language-plaintext highlighter-rouge">100</code>, <code class="language-plaintext highlighter-rouge">200</code>)</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">width</code> / <code class="language-plaintext highlighter-rouge">height</code></td>
      <td>Base dimensions before scaling</td>
      <td>Numeric values (e.g., <code class="language-plaintext highlighter-rouge">50</code>, <code class="language-plaintext highlighter-rouge">100</code>)</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">fill</code></td>
      <td>Fill color</td>
      <td>Hex codes (e.g., <code class="language-plaintext highlighter-rouge">"#ff0000"</code>), color names</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">stroke</code></td>
      <td>Border color</td>
      <td>Hex codes, color names, <code class="language-plaintext highlighter-rouge">null</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">strokeWidth</code></td>
      <td>Thickness of the border</td>
      <td>Numeric values (e.g., <code class="language-plaintext highlighter-rouge">1</code>, <code class="language-plaintext highlighter-rouge">2</code>, <code class="language-plaintext highlighter-rouge">5</code>)</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">strokeDashArray</code></td>
      <td>Dash pattern for borders</td>
      <td>Arrays of numbers (e.g., <code class="language-plaintext highlighter-rouge">[10, 5]</code>)</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">scaleX</code> / <code class="language-plaintext highlighter-rouge">scaleY</code></td>
      <td>Scaling factors</td>
      <td>Numeric values &gt;0 (e.g., <code class="language-plaintext highlighter-rouge">1</code>, <code class="language-plaintext highlighter-rouge">1.5</code>, <code class="language-plaintext highlighter-rouge">0.5</code>)</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">angle</code></td>
      <td>Rotation angle in degrees</td>
      <td>Numeric values (e.g., <code class="language-plaintext highlighter-rouge">0</code>, <code class="language-plaintext highlighter-rouge">45</code>, <code class="language-plaintext highlighter-rouge">90</code>)</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">flipX</code> / <code class="language-plaintext highlighter-rouge">flipY</code></td>
      <td>Horizontal and vertical flip flags</td>
      <td><code class="language-plaintext highlighter-rouge">true</code> or <code class="language-plaintext highlighter-rouge">false</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">skewX</code> / <code class="language-plaintext highlighter-rouge">skewY</code></td>
      <td>Shear transformations</td>
      <td>Numeric values (degrees or radians)</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">opacity</code></td>
      <td>Transparency level</td>
      <td><code class="language-plaintext highlighter-rouge">0</code> (transparent) to <code class="language-plaintext highlighter-rouge">1</code> (opaque)</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">backgroundColor</code></td>
      <td>Background color within the object</td>
      <td>Hex codes, color names</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">fillRule</code></td>
      <td>Defines how the interior is determined for complex paths</td>
      <td><code class="language-plaintext highlighter-rouge">"nonzero"</code>, <code class="language-plaintext highlighter-rouge">"evenodd"</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">globalCompositeOperation</code></td>
      <td>Determines how shapes are drawn over each other</td>
      <td><code class="language-plaintext highlighter-rouge">"source-over"</code>, <code class="language-plaintext highlighter-rouge">"multiply"</code>, etc.</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">transformMatrix</code></td>
      <td>Custom transformation matrix</td>
      <td>Arrays defining transformation matrices</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">rx</code> / <code class="language-plaintext highlighter-rouge">ry</code></td>
      <td>Radii for rounded corners in rectangles</td>
      <td>Numeric values (e.g., <code class="language-plaintext highlighter-rouge">0</code>, <code class="language-plaintext highlighter-rouge">10</code>)</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">path</code></td>
      <td>Defines the shape via drawing commands</td>
      <td>Arrays of drawing commands</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">pathOffset</code></td>
      <td>Offset for path positioning within groups</td>
      <td><code class="language-plaintext highlighter-rouge">{ "x": Number, "y": Number }</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">shadow</code></td>
      <td>Shadow effect properties</td>
      <td>Objects with <code class="language-plaintext highlighter-rouge">color</code>, <code class="language-plaintext highlighter-rouge">blur</code>, <code class="language-plaintext highlighter-rouge">offsetX</code>, <code class="language-plaintext highlighter-rouge">offsetY</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">clipTo</code></td>
      <td>Function defining clipping regions</td>
      <td>Function or <code class="language-plaintext highlighter-rouge">null</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">selectable</code></td>
      <td>If the object can be selected</td>
      <td><code class="language-plaintext highlighter-rouge">true</code> or <code class="language-plaintext highlighter-rouge">false</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">hasBorders</code></td>
      <td>If borders are displayed when selected</td>
      <td><code class="language-plaintext highlighter-rouge">true</code> or <code class="language-plaintext highlighter-rouge">false</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">hasControls</code></td>
      <td>If control handles are available</td>
      <td><code class="language-plaintext highlighter-rouge">true</code> or <code class="language-plaintext highlighter-rouge">false</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">lockMovementX</code> / <code class="language-plaintext highlighter-rouge">lockMovementY</code></td>
      <td>Lock movement along axes</td>
      <td><code class="language-plaintext highlighter-rouge">true</code> or <code class="language-plaintext highlighter-rouge">false</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">tipo</code></td>
      <td>Custom identifier for object type</td>
      <td>Custom strings (e.g., <code class="language-plaintext highlighter-rouge">"MarcoQuilometrico"</code>)</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">text</code></td>
      <td>Content of text objects</td>
      <td>Strings (e.g., <code class="language-plaintext highlighter-rouge">"BR-158"</code>)</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">fontSize</code></td>
      <td>Size of the text</td>
      <td>Numeric values (e.g., <code class="language-plaintext highlighter-rouge">10</code>, <code class="language-plaintext highlighter-rouge">15</code>, <code class="language-plaintext highlighter-rouge">20</code>)</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">fontWeight</code></td>
      <td>Thickness of the text font</td>
      <td><code class="language-plaintext highlighter-rouge">"normal"</code>, <code class="language-plaintext highlighter-rouge">"bold"</code>, numeric values (e.g., <code class="language-plaintext highlighter-rouge">800</code>)</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">fontFamily</code></td>
      <td>Typeface of the text</td>
      <td>Font names (e.g., <code class="language-plaintext highlighter-rouge">"Helvetica"</code>, <code class="language-plaintext highlighter-rouge">"monospace"</code>)</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">fontStyle</code></td>
      <td>Style of the text font</td>
      <td><code class="language-plaintext highlighter-rouge">"normal"</code>, <code class="language-plaintext highlighter-rouge">"italic"</code>, etc.</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">textAlign</code></td>
      <td>Alignment of the text</td>
      <td><code class="language-plaintext highlighter-rouge">"left"</code>, <code class="language-plaintext highlighter-rouge">"center"</code>, <code class="language-plaintext highlighter-rouge">"right"</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">lineHeight</code></td>
      <td>Spacing between lines in text</td>
      <td>Numeric values (e.g., <code class="language-plaintext highlighter-rouge">1</code>, <code class="language-plaintext highlighter-rouge">1.5</code>)</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">textDecoration</code></td>
      <td>Decorations on the text</td>
      <td><code class="language-plaintext highlighter-rouge">"underline"</code>, <code class="language-plaintext highlighter-rouge">"strikethrough"</code>, etc.</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">charSpacing</code></td>
      <td>Spacing between characters</td>
      <td>Numeric values (e.g., <code class="language-plaintext highlighter-rouge">0</code>, <code class="language-plaintext highlighter-rouge">1</code>, <code class="language-plaintext highlighter-rouge">2</code>)</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">textBackgroundColor</code></td>
      <td>Background color behind the text</td>
      <td>Hex codes, color names</td>
    </tr>
  </tbody>
</table>

<h2 id="best-practices-for-modifying-variables">Best Practices for Modifying Variables</h2>

<ol>
  <li><strong>Incremental Changes:</strong>
    <ul>
      <li>Make small adjustments to variables to observe their effects before committing to larger changes.</li>
    </ul>
  </li>
  <li><strong>Backup Original Data:</strong>
    <ul>
      <li>Always keep a copy of the original JSON data to revert changes if necessary.</li>
    </ul>
  </li>
  <li><strong>Consistent Styling:</strong>
    <ul>
      <li>Maintain a consistent color scheme and styling across similar objects for visual coherence.</li>
    </ul>
  </li>
  <li><strong>Understand Dependencies:</strong>
    <ul>
      <li>Recognize how transformations on parent groups affect nested objects.</li>
    </ul>
  </li>
  <li><strong>Test Interactivity:</strong>
    <ul>
      <li>After modifying interactive properties, test object behaviors within the web application to ensure desired functionality.</li>
    </ul>
  </li>
  <li><strong>Validate JSON Structure:</strong>
    <ul>
      <li>Ensure that the JSON syntax remains correct after modifications to prevent errors during import.</li>
    </ul>
  </li>
</ol>

<h2 id="conclusion">Conclusion</h2>

<p>By meticulously adjusting the properties outlined above, users can effectively modify various aspects of the accident scene visualization. Whether it’s altering colors, repositioning elements, changing text content, or adjusting interactivity, understanding these variables allows for precise and meaningful customizations within the web application.</p>]]></content><author><name></name></author><category term="trabalho" /></entry><entry><title type="html">2W1H</title><link href="https://ib.bsb.br/2w1h/" rel="alternate" type="text/html" title="2W1H" /><published>2024-11-28T00:00:00+00:00</published><updated>2024-11-28T20:46:42+00:00</updated><id>https://ib.bsb.br/2w1h</id><content type="html" xml:base="https://ib.bsb.br/2w1h/"><![CDATA[<section data-filename="_code-block.txt" data-code="How, why, and in what ways does
```
something
```
consist?" data-download-link="" data-download-link-label="Download "><code class="language-">How, why, and in what ways does
```
something
```
consist?</code></section>

<hr />
<section data-filename="_code-block.txt" data-code="In what does
```
something
```
consist?" data-download-link="" data-download-link-label="Download "><code class="language-">In what does
```
something
```
consist?</code></section>]]></content><author><name></name></author><category term="AI&gt;prompt" /></entry><entry><title type="html">Setup FTP Server on Debian and Connect a Windows Machine</title><link href="https://ib.bsb.br/ftpd/" rel="alternate" type="text/html" title="Setup FTP Server on Debian and Connect a Windows Machine" /><published>2024-11-21T00:00:00+00:00</published><updated>2024-11-21T17:36:02+00:00</updated><id>https://ib.bsb.br/ftpd</id><content type="html" xml:base="https://ib.bsb.br/ftpd/"><![CDATA[<h3 id="setup-ftp-server-using-pure-ftpd-on-debian-bullseye">Setup FTP Server Using <code class="language-plaintext highlighter-rouge">pure-ftpd</code> on Debian Bullseye</h3>

<ol>
  <li><strong>Update Your System</strong>
    <ul>
      <li>Ensure your Debian system is up-to-date to avoid any compatibility issues. Open a terminal and execute the following commands:
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt-get update
<span class="nb">sudo </span>apt-get upgrade
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
  <li><strong>Install <code class="language-plaintext highlighter-rouge">pure-ftpd</code></strong>
    <ul>
      <li>Install the <code class="language-plaintext highlighter-rouge">pure-ftpd</code> package by running:
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt-get <span class="nb">install </span>pure-ftpd
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
  <li><strong>Basic Configuration</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">pure-ftpd</code> comes with a sensible set of defaults, but you can customize its behavior by creating configuration files in <code class="language-plaintext highlighter-rouge">/etc/pure-ftpd/conf/</code>.</li>
      <li><strong>Enable Passive Mode Ports:</strong>
        <ul>
          <li>Define a range of ports for passive mode to enhance firewall compatibility.
            <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo</span> <span class="s2">"30000 35000"</span> | <span class="nb">sudo tee</span> /etc/pure-ftpd/conf/PassivePortRange
</code></pre></div>            </div>
          </li>
        </ul>
      </li>
      <li><strong>Restrict to Local Users:</strong>
        <ul>
          <li>Ensure only local system users can access the FTP server.
            <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo</span> <span class="s2">"yes"</span> | <span class="nb">sudo tee</span> /etc/pure-ftpd/conf/NoAnonymous
</code></pre></div>            </div>
          </li>
        </ul>
      </li>
      <li><strong>Enable TLS (Optional for FTPS):</strong>
        <ul>
          <li>For encrypted connections, generate a TLS certificate.
            <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>openssl req <span class="nt">-x509</span> <span class="nt">-nodes</span> <span class="nt">-days</span> 365 <span class="nt">-newkey</span> rsa:2048 <span class="nt">-keyout</span> /etc/ssl/private/pure-ftpd.pem <span class="nt">-out</span> /etc/ssl/private/pure-ftpd.pem
<span class="nb">sudo chmod </span>600 /etc/ssl/private/pure-ftpd.pem
<span class="nb">echo</span> <span class="s2">"2"</span> | <span class="nb">sudo tee</span> /etc/pure-ftpd/conf/TLS
</code></pre></div>            </div>
          </li>
        </ul>
      </li>
      <li><strong>Restart <code class="language-plaintext highlighter-rouge">pure-ftpd</code> to Apply Changes:</strong>
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl restart pure-ftpd
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
  <li><strong>Creating an FTP User</strong>
    <ul>
      <li>It’s a good practice to create a dedicated user for FTP access to limit system exposure and enhance security.</li>
      <li><strong>Create a New User <code class="language-plaintext highlighter-rouge">ftpuser</code> with a Home Directory:</strong>
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>useradd <span class="nt">-m</span> ftpuser <span class="nt">-d</span> /home/ftpuser <span class="nt">-s</span> /usr/sbin/nologin
<span class="nb">sudo </span>passwd ftpuser
</code></pre></div>        </div>
      </li>
      <li><strong>Set Appropriate Permissions:</strong>
        <ul>
          <li>Ensure the FTP user has necessary permissions on their home directory.
            <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo chown</span> <span class="nt">-R</span> ftpuser:ftpuser /home/ftpuser
</code></pre></div>            </div>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>Adjust Firewall Settings</strong>
    <ul>
      <li>If you have a firewall enabled, ensure it allows traffic on the FTP port (<code class="language-plaintext highlighter-rouge">21</code> by default) and the passive mode port range defined earlier.</li>
      <li><strong>Using UFW:</strong>
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>ufw allow 21/tcp
<span class="nb">sudo </span>ufw allow 30000:35000/tcp
<span class="nb">sudo </span>ufw reload
</code></pre></div>        </div>
      </li>
      <li><strong>Using iptables:</strong>
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>iptables <span class="nt">-A</span> INPUT <span class="nt">-p</span> tcp <span class="nt">--dport</span> 21 <span class="nt">-j</span> ACCEPT
<span class="nb">sudo </span>iptables <span class="nt">-A</span> INPUT <span class="nt">-p</span> tcp <span class="nt">--dport</span> 30000:35000 <span class="nt">-j</span> ACCEPT
<span class="nb">sudo </span>netfilter-persistent save
</code></pre></div>        </div>
      </li>
      <li><em>Ensure that your server’s firewall rules are configured correctly to allow FTP traffic.</em></li>
    </ul>
  </li>
  <li><strong>Start and Enable <code class="language-plaintext highlighter-rouge">pure-ftpd</code></strong>
    <ul>
      <li>To ensure <code class="language-plaintext highlighter-rouge">pure-ftpd</code> starts automatically at boot, enable it using:
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl <span class="nb">enable </span>pure-ftpd
</code></pre></div>        </div>
      </li>
      <li>Start the <code class="language-plaintext highlighter-rouge">pure-ftpd</code> service:
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl start pure-ftpd
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
</ol>

<h3 id="connect-a-windows-11-machine-to-the-debian-ftp-server-using-filezilla">Connect a Windows 11 Machine to the Debian FTP Server Using FileZilla</h3>

<h4 id="prerequisites">Prerequisites</h4>
<ul>
  <li><strong>FTP Server Details:</strong> Ensure you have the Debian server’s IP address, FTP username (<code class="language-plaintext highlighter-rouge">ftpuser</code>), and password.</li>
  <li><strong>FileZilla Client Installed:</strong> Download and install the <a href="https://filezilla-project.org/download.php?platform=win64">FileZilla Client</a> on your Windows machine.</li>
</ul>

<h4 id="step-by-step-process">Step-by-Step Process</h4>

<ol>
  <li><strong>Download and Install FileZilla</strong>
    <ul>
      <li>Visit the <a href="https://filezilla-project.org/download.php?platform=win64">FileZilla download page</a> to download the FileZilla FTP client for Windows.</li>
      <li>Run the installer and follow the on-screen instructions to complete the installation.</li>
    </ul>
  </li>
  <li><strong>Launch FileZilla</strong>
    <ul>
      <li>Open the FileZilla application. Upon first launch, a welcome pop-up may appear; click <strong>OK</strong> to proceed.</li>
    </ul>
  </li>
  <li><strong>Configure FTP Connection</strong>
    <ul>
      <li>At the top of the FileZilla window, locate the <strong>Quickconnect</strong> bar with fields for <strong>Host</strong>, <strong>Username</strong>, <strong>Password</strong>, and <strong>Port</strong>.</li>
      <li><strong>Enter the Following Details:</strong>
        <ul>
          <li><strong>Host:</strong> <code class="language-plaintext highlighter-rouge">&lt;IP-of-the-FTP-Server&gt;</code> (e.g., <code class="language-plaintext highlighter-rouge">192.168.1.100</code>)</li>
          <li><strong>Username:</strong> <code class="language-plaintext highlighter-rouge">ftpuser</code></li>
          <li><strong>Password:</strong> <em>Your FTP user’s password</em></li>
          <li><strong>Port:</strong> <code class="language-plaintext highlighter-rouge">21</code> for FTP or <code class="language-plaintext highlighter-rouge">22</code> for SFTP (if configured)</li>
        </ul>
      </li>
      <li><strong>Example:</strong>
        <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Host: 192.168.1.100
Username: ftpuser
Password: yourpassword
Port: 21
</code></pre></div>        </div>
        <p><em>Note: Do not include <code class="language-plaintext highlighter-rouge">ftp://</code> in the Host field.</em></p>
      </li>
    </ul>
  </li>
  <li><strong>Connect to the FTP Server</strong>
    <ul>
      <li>Click the <strong>Quickconnect</strong> button.</li>
      <li><strong>Security Prompt:</strong> If connecting via FTPS, a certificate warning may appear. Verify the certificate details and click <strong>Yes</strong> to trust the connection.</li>
      <li><strong>Successful Connection Indicators:</strong>
        <ul>
          <li>The <strong>Remote Site</strong> pane (right side) will populate with directories from the Debian FTP server.</li>
          <li>The <strong>Local Site</strong> pane (left side) displays your Windows machine’s directories.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>Browse and Transfer Files</strong>
    <ul>
      <li><strong>Uploading Files:</strong>
        <ul>
          <li>Navigate to the desired local directory in the <strong>Local Site</strong> pane.</li>
          <li>Drag and drop files or folders to the desired location in the <strong>Remote Site</strong> pane.</li>
        </ul>
      </li>
      <li><strong>Downloading Files:</strong>
        <ul>
          <li>Navigate to the desired directory in the <strong>Remote Site</strong> pane.</li>
          <li>Drag and drop files or folders to the desired location in the <strong>Local Site</strong> pane.</li>
        </ul>
      </li>
      <li><em>File transfers will display progress and status in the bottom pane.</em></li>
    </ul>
  </li>
  <li><strong>Using Site Manager for Future Connections (Optional)</strong>
    <ul>
      <li><strong>Save Connection Details for Easy Access:</strong>
        <ul>
          <li>Go to <strong>File</strong> &gt; <strong>Site Manager</strong>.</li>
          <li>Click <strong>New Site</strong> and enter a name (e.g., <code class="language-plaintext highlighter-rouge">Debian FTP Server</code>).</li>
          <li><strong>Enter Connection Details:</strong>
            <ul>
              <li><strong>Host:</strong> <code class="language-plaintext highlighter-rouge">&lt;IP-of-the-FTP-Server&gt;</code></li>
              <li><strong>Port:</strong> <code class="language-plaintext highlighter-rouge">21</code> for FTP or <code class="language-plaintext highlighter-rouge">22</code> for SFTP</li>
              <li><strong>Protocol:</strong> Choose <strong>FTP - File Transfer Protocol</strong> or <strong>SFTP - SSH File Transfer Protocol</strong> based on your server configuration.</li>
              <li><strong>Encryption:</strong> Select <strong>Use explicit FTP over TLS if available</strong> for FTPS or <strong>Only use plain FTP (not recommended)</strong>.</li>
              <li><strong>Logon Type:</strong> Select <strong>Normal</strong>.</li>
              <li><strong>User:</strong> <code class="language-plaintext highlighter-rouge">ftpuser</code></li>
              <li><strong>Password:</strong> <em>Your FTP user’s password</em></li>
            </ul>
          </li>
          <li>Click <strong>Connect</strong> to save and establish the connection.</li>
        </ul>
      </li>
      <li><strong>Access Saved Sites Quickly:</strong>
        <ul>
          <li>Launch FileZilla and open <strong>Site Manager</strong>.</li>
          <li>Select your saved site and click <strong>Connect</strong> to establish a connection without re-entering credentials.</li>
        </ul>
      </li>
    </ul>
  </li>
</ol>

<h3 id="security-best-practices">Security Best Practices</h3>

<ul>
  <li><strong>Use SFTP or FTPS:</strong> To secure your FTP connections, consider using SFTP (which uses SSH) or FTPS (FTP over TLS). This encrypts data transfers, protecting sensitive information.</li>
  <li><strong>Strong Passwords:</strong> Ensure that FTP user accounts use strong, unique passwords to prevent unauthorized access.</li>
  <li><strong>Limit User Permissions:</strong> Restrict FTP users to only the directories they need access to, minimizing potential security risks.</li>
  <li><strong>Regular Updates:</strong> Keep both the FTP server (<code class="language-plaintext highlighter-rouge">pure-ftpd</code>) and FileZilla client updated to the latest versions to benefit from security patches and new features.</li>
</ul>

<h3 id="troubleshooting-common-issues">Troubleshooting Common Issues</h3>

<ol>
  <li><strong>Cannot Connect to FTP Server:</strong>
    <ul>
      <li><strong>Check Server Status:</strong> Ensure that the <code class="language-plaintext highlighter-rouge">pure-ftpd</code> service is running on the Debian server.
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl status pure-ftpd
</code></pre></div>        </div>
      </li>
      <li><strong>Verify Firewall Settings:</strong> Confirm that the firewall allows traffic on the FTP and passive ports.</li>
      <li><strong>Confirm Credentials:</strong> Double-check the FTP username and password for accuracy.</li>
    </ul>
  </li>
  <li><strong>Connection Times Out:</strong>
    <ul>
      <li><strong>Network Issues:</strong> Verify that both machines are on the same network or that the server is accessible over the internet.</li>
      <li><strong>Port Blocking:</strong> Ensure that no intermediate firewalls or network policies are blocking FTP ports.</li>
    </ul>
  </li>
  <li><strong>Permission Denied Errors:</strong>
    <ul>
      <li><strong>User Permissions:</strong> Ensure the FTP user has the necessary permissions for the target directories.</li>
      <li><strong>Directory Ownership:</strong> Verify that directories are owned by the FTP user.
        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo chown</span> <span class="nt">-R</span> ftpuser:ftpuser /home/ftpuser
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
  <li><strong>Encryption Errors with FTPS/SFTP:</strong>
    <ul>
      <li><strong>Certificate Validity:</strong> Ensure that the TLS certificate is correctly configured and not expired.</li>
      <li><strong>Protocol Compatibility:</strong> Confirm that both FileZilla and <code class="language-plaintext highlighter-rouge">pure-ftpd</code> are configured to use compatible encryption settings.</li>
    </ul>
  </li>
</ol>]]></content><author><name></name></author><category term="linux" /></entry><entry><title type="html">Setting Up GPU Drivers on RK3588</title><link href="https://ib.bsb.br/setting-up-gpu-drivers-on-rk3588/" rel="alternate" type="text/html" title="Setting Up GPU Drivers on RK3588" /><published>2024-11-21T00:00:00+00:00</published><updated>2024-11-21T19:12:31+00:00</updated><id>https://ib.bsb.br/setting-up-gpu-drivers-on-rk3588</id><content type="html" xml:base="https://ib.bsb.br/setting-up-gpu-drivers-on-rk3588/"><![CDATA[<p>MLC LLM is a universal deployment solution that allows efficient CPU/GPU code generation without AutoTVM-based performance tuning. This guide focuses on setting up a generic GPU environment and troubleshooting common issues on the RK3588 (RK3588 based SBC).</p>

<h2 id="table-of-contents">Table of Contents</h2>
<ol>
  <li><a href="#prerequisites">Prerequisites</a></li>
  <li><a href="#opencl-sdk-installation">OpenCL SDK Installation</a></li>
  <li><a href="#orange-pi-5-setup">RK3588 Setup</a>
    <ul>
      <li><a href="#installing-ubuntu-2204">Installing Ubuntu 22.04</a></li>
      <li><a href="#installing-mali-gpu-driver">Installing Mali GPU Driver</a></li>
      <li><a href="#configuring-opencl-icd-loader">Configuring OpenCL ICD Loader</a></li>
      <li><a href="#installing-opencl-libraries">Installing OpenCL Libraries</a></li>
      <li><a href="#installing-dependencies">Installing Dependencies</a></li>
      <li><a href="#verifying-installation-with-clinfo">Verifying Installation with clinfo</a></li>
    </ul>
  </li>
  <li><a href="#troubleshooting">Troubleshooting</a></li>
  <li><a href="#references">References</a></li>
</ol>

<h2 id="prerequisites">Prerequisites</h2>

<p>Before beginning the installation process, ensure that you have:</p>

<ul>
  <li>An RK3588 (RK3588 based Single Board Computer)</li>
  <li>A stable internet connection</li>
  <li>Basic knowledge of using the Linux command line</li>
  <li>Physical access to the RK3588 for setup</li>
</ul>

<h2 id="opencl-sdk-installation">OpenCL SDK Installation</h2>

<p>The OpenCL SDK is essential if you plan to build your own models for the OpenCL backend. Follow the steps below to install the OpenCL SDK:</p>

<ol>
  <li>
    <p><strong>Access OpenCL’s GitHub Repository:</strong></p>

    <p>Visit the <a href="https://github.com/KhronosGroup/OpenCL-SDK">OpenCL SDK GitHub Repository</a> for detailed installation instructions and resources.</p>
  </li>
</ol>

<h2 id="rk3588-setup">RK3588 Setup</h2>

<p>This section guides you through setting up the RK3588 for running models using the OpenCL backend.</p>

<h3 id="installing-ubuntu-2204">Installing Ubuntu 22.04</h3>

<ol>
  <li>
    <p><strong>Download Ubuntu 22.04 Image:</strong></p>

    <p>Download the Ubuntu 22.04 image tailored for the RK3588 from <a href="https://github.com/Joshua-Riek/ubuntu-rockchip/releases/tag/v1.22">here</a>.</p>
  </li>
  <li>
    <p><strong>Flash Ubuntu to SD Card:</strong></p>

    <p>Use a tool like <code class="language-plaintext highlighter-rouge">balenaEtcher</code> or <code class="language-plaintext highlighter-rouge">Rufus</code> to flash the downloaded image onto an SD card.</p>
  </li>
  <li>
    <p><strong>Boot RK3588:</strong></p>

    <p>Insert the SD card into your RK3588 and power it on. Follow the on-screen instructions to complete the initial setup.</p>
  </li>
</ol>

<h3 id="installing-mali-gpu-driver">Installing Mali GPU Driver</h3>

<p>To enable the Mali GPU for OpenCL operations, install the Mali GPU driver.</p>

<ol>
  <li>
    <p><strong>Download <code class="language-plaintext highlighter-rouge">libmali-g610.so</code>:</strong></p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> /usr/lib
<span class="nb">sudo </span>wget https://github.com/JeffyCN/mirrors/raw/libmali/lib/aarch64-linux-gnu/libmali-valhall-g610-g6p0-x11-wayland-gbm.so <span class="nt">-O</span> libmali-g610.so
</code></pre></div>    </div>
  </li>
  <li>
    <p><strong>Ensure Firmware File Exists:</strong></p>

    <p>Verify if <code class="language-plaintext highlighter-rouge">mali_csffw.bin</code> exists in the <code class="language-plaintext highlighter-rouge">/lib/firmware</code> directory:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> /lib/firmware
<span class="nb">ls </span>mali_csffw.bin
</code></pre></div>    </div>

    <p>If the file does not exist, download it:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>wget https://github.com/JeffyCN/mirrors/raw/libmali/firmware/g610/mali_csffw.bin
</code></pre></div>    </div>
  </li>
</ol>

<h3 id="configuring-opencl-icd-loader">Configuring OpenCL ICD Loader</h3>

<p>Set up the OpenCL Installable Client Driver (ICD) loader to recognize the Mali GPU.</p>

<ol>
  <li>
    <p><strong>Update Package List:</strong></p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt update
</code></pre></div>    </div>
  </li>
  <li>
    <p><strong>Install Mesa OpenCL ICD:</strong></p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>mesa-opencl-icd <span class="nt">-y</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p><strong>Create OpenCL Vendors Directory:</strong></p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo mkdir</span> <span class="nt">-p</span> /etc/OpenCL/vendors
</code></pre></div>    </div>
  </li>
  <li>
    <p><strong>Add Mali ICD Configuration:</strong></p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo</span> <span class="s2">"/usr/lib/libmali-g610.so"</span> | <span class="nb">sudo tee</span> /etc/OpenCL/vendors/mali.icd
</code></pre></div>    </div>
  </li>
</ol>

<h3 id="installing-opencl-libraries">Installing OpenCL Libraries</h3>

<p>Install the OpenCL development libraries required for compiling OpenCL applications.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>ocl-icd-opencl-dev <span class="nt">-y</span>
</code></pre></div></div>

<h3 id="installing-dependencies">Installing Dependencies</h3>

<p>Install necessary dependencies for the Mali OpenCL backend.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>libxcb-dri2-0 libxcb-dri3-0 libwayland-client0 libwayland-server0 libx11-xcb1 <span class="nt">-y</span>
</code></pre></div></div>

<h3 id="verifying-installation-with-clinfo">Verifying Installation with clinfo</h3>

<ol>
  <li>
    <p><strong>Install clinfo:</strong></p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>clinfo <span class="nt">-y</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p><strong>Run clinfo to Validate Installation:</strong></p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>clinfo
</code></pre></div>    </div>

    <p><strong>Expected Output:</strong></p>

    <p>Look for GPU information similar to the following in the output:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>arm_release_ver: g13p0-01eac0, rk_so_ver: 3
Number of platforms: 2
Platform Name: ARM Platform
Platform Vendor: ARM
Platform Version: OpenCL 2.1 v1.g6p0-01eac0.2819f9d4dbe0b5a2f89c835d8484f9cd
Platform Profile: FULL_PROFILE
...
</code></pre></div>    </div>

    <p>This output confirms that the OpenCL runtime and Mali GPU driver are correctly installed and recognized by the system.</p>
  </li>
</ol>

<h2 id="troubleshooting">Troubleshooting</h2>

<p>If you encounter issues during the installation process, consider the following steps:</p>

<ul>
  <li><strong>Check Network Connectivity:</strong> Ensure that your RK3588 has a stable internet connection for downloading packages and dependencies.</li>
  <li><strong>Verify File Downloads:</strong> Re-download any files if the download was interrupted or corrupted.</li>
  <li><strong>Review Command Outputs:</strong> Carefully read any error messages during command execution to identify missing dependencies or permissions issues.</li>
  <li><strong>Consult Logs:</strong> Check system logs for detailed error information using <code class="language-plaintext highlighter-rouge">dmesg</code> or reviewing logs in <code class="language-plaintext highlighter-rouge">/var/log/</code>.</li>
</ul>

<h2 id="references">References</h2>

<ol>
  <li><a href="https://github.com/KhronosGroup/OpenCL-SDK">OpenCL SDK GitHub Repository</a></li>
  <li><a href="https://github.com/mlc-ai/mlc-llm">MLC LLM GitHub Repository</a></li>
  <li><a href="https://github.com/Joshua-Riek/ubuntu-rockchip/releases/tag/v1.22">Ubuntu Rockchip Releases</a></li>
  <li><a href="https://github.com/JeffyCN/mirrors/raw/libmali/lib/aarch64-linux-gnu/">Mali GPU Drivers</a></li>
  <li><a href="https://www.orangepi.org/">Orange Pi Official Website</a></li>
  <li><a href="https://github.com/obfuscated12/clinfo">clinfo Documentation</a></li>
  <li><a href="https://ubuntu.com/tutorials">Ubuntu Official Documentation</a></li>
</ol>

<hr />

<p>By following this comprehensive guide, you should be able to successfully set up GPU drivers and SDKs on your RK3588, enabling efficient OpenCL backend operations with MLC LLM.</p>]]></content><author><name></name></author><category term="linux," /><category term="hardware" /></entry><entry><title type="html">Meta-Prompt for Better API Integration</title><link href="https://ib.bsb.br/meta-prompt-for-better-api-integration/" rel="alternate" type="text/html" title="Meta-Prompt for Better API Integration" /><published>2024-11-20T00:00:00+00:00</published><updated>2024-11-20T15:13:57+00:00</updated><id>https://ib.bsb.br/meta-prompt-for-better-api-integration</id><content type="html" xml:base="https://ib.bsb.br/meta-prompt-for-better-api-integration/"><![CDATA[<p>URL Source: <code class="language-plaintext highlighter-rouge">https://jina.ai/news/meta-prompt-for-better-jina-api-integration-and-codegen/</code></p>

<p>We recently published <a href="https://docs.jina.ai/">Meta-Prompt</a>, a single text file that outlines all of our API specifications. You can think of it as documentation for LLMs, and use it to automatically generate integrations of our APIs including Reader, Embeddings, Reranker, and more.</p>

<p>0:00</p>

<p>/1:44</p>

<p><img src="https://jina-ai-gmbh.ghost.io/content/media/2024/11/meta-prompt-square-VEED_thumb.jpg" alt="Image 1" /></p>

<p>It’s as simple as copying and pasting our prompt into ChatGPT/Claude, or piping it into the <a href="https://github.com/simonw/llm"><code class="language-plaintext highlighter-rouge">llm</code></a> command as a system prompt, then adding your own prompt to specify what you want to build (which we do below). It’s great if you want to use LLMs to quickly build apps that scrape the web, work with embeddings, or even full-blown RAG systems. All that with minimal hallucinations.</p>

<p>Let’s say you want to use an LLM to generate code that uses Jina’s APIs. Let’s ask GPT-4o to do just that:</p>

<p>0:00</p>

<p>/0:27</p>

<p><img src="https://jina-ai-gmbh.ghost.io/content/media/2024/11/output_thumb.jpg" alt="Image 2" /></p>

<p>Looks good, right? It’s got the <code class="language-plaintext highlighter-rouge">from jina import Client</code> and everything.</p>

<p>One small problem: The Jina package is in maintenance mode, and it is <em>not</em> the way to access our APIs. Even if you <em>do</em> install the Jina package, the generated program will crash when you try to run it:</p>

<p>0:00</p>

<p>/0:21</p>

<p><img src="https://jina-ai-gmbh.ghost.io/content/media/2024/11/Screencast-from-2024-11-11-14-43-51_thumb.jpg" alt="Image 3" /></p>

<p>So what? We can just ask GPT to search the web for Jina’s APIs, right? Here’s what we get:</p>

<p>0:00</p>

<p>/1:14</p>

<p><img src="https://jina-ai-gmbh.ghost.io/content/media/2024/11/Screencast-from-2024-11-11-14-45-33_thumb.jpg" alt="Image 4" /></p>

<p>However, if you look at the code it <em>doesn’t</em> use all of the relevant Jina APIs. It very clearly didn’t find out that Reader is a thing, instead making us install <a href="https://pypi.org/project/beautifulsoup4/">BeautifulSoup</a> to do the scraping. And, even when it <em>could</em> (supposedly) do the scraping with BeautifulSoup, it didn’t accurately parse the response format for Jina Embeddings, leading to a crash:</p>

<p>0:00</p>

<p>/0:16</p>

<p><img src="https://jina-ai-gmbh.ghost.io/content/media/2024/11/Screencast-from-2024-11-11-14-50-35--1-_thumb.jpg" alt="Image 5" /></p>

<p>Yet, even if ChatGPT <em>could</em> do it properly by searching, many other LLMs (like Claude) don’t currently support web search, severely limiting your options.</p>

<p>This is where Meta-Prompt shines. With Meta-Prompt, you can load all the context and specifications of Jina’s APIs into the LLM. This means the LLM can generate code that leverages Jina’s APIs directly, without hallucinations or unnecessary workarounds, giving you code that works <em>the first time</em>.</p>

<p>💡</p>

<p>Okay, <strong>usually</strong> the first time. LLMs can be unpredictable, but as you can see below, things went well in our experiments.</p>

<p>To put the Meta-Prompt through its paces, we ran a few experiments and evaluated the results. Unless otherwise specified, we used <a href="https://www.anthropic.com/news/claude-3-5-sonnet">Claude-3.5-Sonnet</a> as the LLM.</p>

<p>For all experiments, we specified relevant API keys (like <code class="language-plaintext highlighter-rouge">JINA_API_KEY</code> and <code class="language-plaintext highlighter-rouge">ANTHROPIC_API_KEY</code>) as environment variables before running the generated code.</p>

<h3 id="experiment-1-verifying-statements-using-meta-prompt-in-chatgpt"><a href="https://jina.ai/news/meta-prompt-for-better-jina-api-integration-and-codegen/#experiment-1-verifying-statements-using-meta-prompt-in-chatgpt" title="Experiment 1: Verifying Statements Using Meta-Prompt in ChatGPT"></a>Experiment 1: Verifying Statements Using Meta-Prompt in ChatGPT</h3>

<p>We’re writing this just after the US elections, where more disinformation than ever was flying around. How can we separate the signal from the noise in our feeds, and get just the good stuff with none of the lies?</p>

<p>Let’s say we want to check whether a new UK law is accurately reported on <a href="http://bbc.com/">BBC.com</a>, specifically the claim:</p>

<blockquote>
  <p>“The UK government has announced a new law that will require social media companies to verify the age of their users.”</p>
</blockquote>

<p>We can copy-paste the Meta-Prompt into ChatGPT, then type our own prompt to generate the code to do that, like:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Write the JavaScript code to check the validity
of the following statement on bbc.com: 

"The UK government has announced a new law 
that will require social media companies to 
verify the age of their users."
</code></pre></div></div>

<p>0:00</p>

<p>/0:35</p>

<p><img src="https://jina-ai-gmbh.ghost.io/content/media/2024/11/grounding-chatgpt_thumb.jpg" alt="Image 6" /></p>

<p>We can then run that with <code class="language-plaintext highlighter-rouge">node grounding.js</code> (after installing any prerequisite packages like <a href="https://www.npmjs.com/package/axios">axios</a>). We get output like this, showing that the claim is true, along with sources:</p>

<p>0:00</p>

<p>/0:04</p>

<p><img src="https://jina-ai-gmbh.ghost.io/content/media/2024/11/grounding-run-1_thumb.jpg" alt="Image 7" /></p>

<h3 id="experiment-2-visualizing-hacker-news-from-the-cli"><a href="https://jina.ai/news/meta-prompt-for-better-jina-api-integration-and-codegen/#experiment-2-visualizing-hacker-news-from-the-cli" title="Experiment 2: Visualizing Hacker News from the CLI"></a>Experiment 2: Visualizing Hacker News from the CLI</h3>

<p>If you’re more of a command line warrior, you can use Meta-Prompt from the CLI via cURL. First, you’ll need to install the <code class="language-plaintext highlighter-rouge">llm</code> Python package:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pip install llm
</code></pre></div></div>

<p>And then the Claude-3 plugin:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>llm install llm-claude-3
</code></pre></div></div>

<p>For the last stage of setup, specify your Anthropic API key:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>export ANTHROPIC_API_KEY=&lt;your key&gt;
</code></pre></div></div>

<p>Now, let’s write a prompt to visualize every sentence from the Hacker News front page:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>grab every sentence from hackernews frontpage and 
visualize them in a 2d umap using matplotlib
</code></pre></div></div>

<p>We can <a href="https://wizardzines.com/comics/bash-pipes/">pipe</a> this into the <code class="language-plaintext highlighter-rouge">llm</code> command with:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl docs.jina.ai | llm -s "grab every sentence from hackernews frontpage and visualize them in a 2d umap using matplotlib" -m claude-3.5-sonnet
</code></pre></div></div>

<p>0:00</p>

<p>/0:24</p>

<p><img src="https://jina-ai-gmbh.ghost.io/content/media/2024/11/Screencast-from-2024-11-11-11-23-03_thumb.jpg" alt="Image 8" /></p>

<p>If we extract and and run the generated code, we get something like this:</p>

<p>0:00</p>

<p>/0:38</p>

<p><img src="https://jina-ai-gmbh.ghost.io/content/media/2024/11/Screencast-from-2024-11-11-11-28-43_thumb.jpg" alt="Image 9" /></p>

<p>💡</p>

<p>One current limitation (though I’m sure with some extra coding from the user there’s a way around it) is that you’ll need to install requirements manually. No <code class="language-plaintext highlighter-rouge">requirements.txt</code> is generated. In this case we needed <a href="https://umap-learn.readthedocs.io/en/latest/">UMAP</a> and <a href="https://matplotlib.org/">Matplotlib</a>, though your mileage may vary.</p>

<h3 id="experiment-3-building-a-simple-rag-system-with-json-storage"><a href="https://jina.ai/news/meta-prompt-for-better-jina-api-integration-and-codegen/#experiment-3-building-a-simple-rag-system-with-json-storage" title="Experiment 3: Building a Simple RAG System with JSON Storage"></a>Experiment 3: Building a Simple RAG System with JSON Storage</h3>

<p>To push things even farther, let’s create a simple RAG system. In my spare time I’m learning <a href="https://github.com/jeff-dh/SolidPython">SolidPython</a> so we’ll use the repo and wiki as a knowledge base. To keep things simple, we won’t use a database, but rather just store the data in a JSON file.</p>

<p>Here’s the prompt, stored in the file <code class="language-plaintext highlighter-rouge">prompt.txt</code>:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Create a simple RAG system using pages from these sources:

- repo: &lt;https://github.com/jeff-dh/SolidPython&gt;
- wiki: &lt;https://github.com/jeff-dh/SolidPython/wiki&gt; (and all the subpages)

Scrape no other pages.

Instead of using vector database, use JSON file

You can access an LLM with the CLI command: llm 'your prompt' -m claude-3.5-sonnet

After segmenting and indexing all the pages, present a prompt for the user to ask a
question. To answer the question, find the top three segments and pass them to the LLM
with the prompt:

--- prompt start ---
Based on these segments:

- {segment 1}
- {segment 2}
- {segment 3}

Answer the question: {question}
--- prompt end ---
</code></pre></div></div>

<p>As you can see, we can give the LLM additional tools by specifying them in the prompt. Without this, Claude often hallucinates a less optimal (or even broken) way to add the LLM to the RAG system.</p>

<p>Since this is a very long prompt (with plenty of punctuation that may break any pipe we run it in), we’ll use the text <code class="language-plaintext highlighter-rouge">$(cat prompt.txt)</code> rather than the prompt itself when we run our command:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl docs.jina.ai/v4 | llm -s "$(cat prompt.txt)" -m claude-3.5-sonnet
</code></pre></div></div>

<p>0:00</p>

<p>/0:34</p>

<p><img src="https://jina-ai-gmbh.ghost.io/content/media/2024/11/docsqa-claude_thumb.jpg" alt="Image 10" /></p>

<p>Phew! That’s a lot of output. But (like with the Hacker News example) it’s a pain in the neck to extract and run the code from that big blob of text. Of course, there’s no problem that can’t be solved by just throwing more LLM at it, right? So let’s add another prompt to “de-blob” the original output:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>leave just the code in this file, remove all surrounding explanatory text. 
do not wrap code in backticks, just return "pure code"
</code></pre></div></div>

<p>Now we add that to our command pipeline and run it:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl docs.jina.ai/v4 | llm -s "$(cat prompt.txt)" -m claude-3.5-sonnet | llm -s 'leave just the code in this file, remove all surrounding explanatory text. do not wrap code in backticks, just return "pure code"' -m claude-3.5-sonnet &gt; app.py
</code></pre></div></div>

<p>💡</p>

<p>Since we’re using <code class="language-plaintext highlighter-rouge">&gt; app.py</code> at the end of our command to direct all output into a file, there’s nothing to show in a video.</p>

<p>We can then run that app with <code class="language-plaintext highlighter-rouge">python app.py</code> and we get our RAG program. As you can see, it can answer questions and maintain a working memory:</p>

<p>0:00</p>

<p>/0:34</p>

<p><img src="https://jina-ai-gmbh.ghost.io/content/media/2024/11/docsqa-run_thumb.jpg" alt="Image 11" /></p>

<p>💡</p>

<p>The first run of this took a little longer, since it had to segment and encode all the data. For subsequent runs it loaded that from a JSON file to save time and cost.</p>

<h3 id="experiment-4-building-an-app-factory-with-meta-prompt"><a href="https://jina.ai/news/meta-prompt-for-better-jina-api-integration-and-codegen/#experiment-4-building-an-app-factory-with-meta-prompt" title="Experiment 4: Building an App Factory with Meta-Prompt"></a>Experiment 4: Building an App Factory with Meta-Prompt</h3>

<p>Now that we can generate scripts and apps non-interactively, we can easily automate an “app factory” - a script that iterates over prompts and produces Python scripts as output. You can get the app factory script in a <a href="https://gist.github.com/alexcg1/4150f2e7dfe0d635260c71d59324172b">GitHub gist</a> for now:</p>

<p><a href="https://gist.github.com/alexcg1/4150f2e7dfe0d635260c71d59324172b">App Factory with Jina AI Meta-Prompt App Factory with Jina AI Meta-Prompt. GitHub Gist: instantly share code, notes, and snippets. <img src="https://jina-ai-gmbh.ghost.io/content/images/icon/pinned-octocat-093da3e6fa40.svg" alt="Image 12" />262588213843476 <img src="https://jina-ai-gmbh.ghost.io/content/images/thumbnail/gist-og-image-54fd7dc0713e.png" alt="Image 13" /></a></p>

<p>What it does, in short, is:</p>

<ul>
  <li>Iterate through the <code class="language-plaintext highlighter-rouge">prompts</code> directory which contains (you guessed it) prompt files.</li>
  <li>Pass the Meta-Prompt and each prompt text to Claude-3.5-Sonnet (via <code class="language-plaintext highlighter-rouge">llm</code>).</li>
  <li>Take the output and pass that to Claude <em>again</em>, this time with the prompt telling it to just leave the code.</li>
  <li>Write that to a file in the <code class="language-plaintext highlighter-rouge">apps</code> directory.</li>
</ul>

<p>We’d show a demo, but there’s not much to see. It just logs which prompt filename it’s working on, and otherwise operates silently with no interesting output to the screen.</p>

<p>💡</p>

<p><strong>Testing</strong> the apps it generates is another matter, one that I can’t solve off the top of my head. In our experience, we often specify the data we want to use in our prompts, usually by passing an external URL to download with Reader. Yet sometimes the LLM hallucinates mock data, and the script runs without obvious issues — it just “lies” about what it’s doing.</p>

<p>To take the app factory to the next level, you could go full <a href="https://www.notion.so/Meta-Prompt-LLM-Generated-Code-without-The-Hallucinations-333ad1ddc735470e83f987d7dd6a644f?pvs=21">Factorio</a> and write <em>another</em> script to generate app ideas and from there generate prompts to feed into the factory. We haven’t done that yet, but we leave it as an exercise for you, the reader.</p>

<p>We learned a lot from using Meta-Prompt, both about what to put in our own prompts and how different LLMs generate different output.</p>

<h3 id="general-observations"><a href="https://jina.ai/news/meta-prompt-for-better-jina-api-integration-and-codegen/#general-observations" title="General Observations"></a>General Observations</h3>

<ul>
  <li><strong>API Specialization</strong>: Using task-specific APIs (e.g., <a href="https://developers.google.com/books">Google Books</a> for book-related queries) ensures more consistent results than general-purpose search APIs, which can reduce token usage and improve reliability.</li>
  <li><strong>Custom Prompts for Reusability</strong>: For non-interactive setups, saving prompts as <code class="language-plaintext highlighter-rouge">.txt</code> files and piping them into the CLI enables efficient code-only outputs without extra explanatory text cluttering things up.</li>
  <li><strong>Structured Output</strong>: Storing outputs (usually in JSON format) and reloading them as needed saves tokens and streamlines tasks like generating embeddings, where token usage can be expensive.</li>
</ul>

<h3 id="insights-from-using-different-llms"><a href="https://jina.ai/news/meta-prompt-for-better-jina-api-integration-and-codegen/#insights-from-using-different-llms" title="Insights from Using Different LLMs"></a>Insights from Using Different LLMs</h3>

<p><strong>GPT</strong></p>

<ul>
  <li><strong>Prompt Retention Issues</strong>: GPT-4o sometimes loses details with lengthy instructions, leading to issues when it “forgets” key elements mid-discussion. This leads to a <em>lot</em> of frustration when you have to remind it of simple things.</li>
  <li><strong>API Integration Challenges</strong>: In cases like integrating <a href="https://milvus.io/docs/milvus_lite.md">Milvus Lite</a> with <code class="language-plaintext highlighter-rouge">jina-embeddings-v3</code>, even when we provide the Milvus Lite API instructions, GPT-4o fails completely and repeatedly, generating code that creates databases that lack the embeddings that the code just generated, making semantic search applications impossible.</li>
</ul>

<p><strong>Claude</strong></p>

<ul>
  <li><strong>Code Output Limitations</strong>: Claude-3.5 often produces scripts that appear complete but contain silent issues, like missing error handling or failing to account for missing API keys. Additionally, it sometimes falls back on pre-set examples rather than generating responses tailored to specific instructions.</li>
  <li><strong>Silent Output</strong>: With LLM-generated code it <em>really</em> helps to have some logging of what’s happening behind the scenes when you run the program, just to make sure the model didn’t mess things up. Unless you directly specify to do so, apps created with Claude will often run silently, leaving you with no clue what’s happening.</li>
  <li><strong>Interaction with CLI</strong>: You need to clearly specify that CLI commands are <em>CLI</em> commands. If you tell Claude it can use the <code class="language-plaintext highlighter-rouge">llm</code> command, often it will try to call a Python <code class="language-plaintext highlighter-rouge">llm()</code> function which doesn’t exist.</li>
  <li><strong>Claude 3.5-Sonnet Is the Way to Go:</strong> Claude-3.5-Haiku also seemed to work okay in initial tests, but Opus and Sonnet-3 just summarize the Jina API instructions, without taking into account the user prompt.</li>
</ul>

<h2 id="conclusion"><a href="https://jina.ai/news/meta-prompt-for-better-jina-api-integration-and-codegen/#conclusion" title="Conclusion"></a>Conclusion</h2>

<p>Using Meta-Prompt provides new ways to integrate Jina’s APIs with LLMs, allowing you to run experiments and build apps that work on the first try. No more crashes, missed API connections, or hallucinated functions — Meta-Prompt ensures the code generated is accurate and functional right out of the gate. Whether you’re verifying statements, generating embeddings, building a lightweight RAG system, or automating app creation, Meta-Prompt transforms natural language instructions into actionable, correct code, bypassing the typical back and forth with an LLM to get things that actually work.</p>

<p>Whether you’re copying Meta-Prompt into ChatGPT or using it with a custom LLM command, it offers a straightforward, reliable way to leverage Jina’s capabilities. Our experiments and insights show Meta-Prompt as a solid tool for robust integration into your projects.</p>

<p>If you’re ready to explore what Meta-Prompt can do, head to <a href="http://docs.jina.ai/">docs.jina.ai</a> for the latest documentation and resources.</p>]]></content><author><name></name></author><category term="AI&gt;LLM" /></entry><entry><title type="html">Troubleshooting Debian 11</title><link href="https://ib.bsb.br/troubleshooting-debian-11/" rel="alternate" type="text/html" title="Troubleshooting Debian 11" /><published>2024-11-16T00:00:00+00:00</published><updated>2024-11-21T19:13:19+00:00</updated><id>https://ib.bsb.br/troubleshooting-debian-11</id><content type="html" xml:base="https://ib.bsb.br/troubleshooting-debian-11/"><![CDATA[<p>Systematic approach to troubleshoot and resolve slow performance issues on a Debian 11</p>

<h3 id="1-immediate-actions">1. Immediate Actions</h3>

<p>If your system is extremely slow, try these first:</p>

<ul>
  <li><strong>Recovery Mode:</strong> Boot into recovery mode (usually by pressing Esc, Shift, or F2 during boot). This starts the system with minimal services, potentially bypassing the performance issue.</li>
  <li><strong>Kill Resource-Intensive Processes:</strong> If you can access a terminal, use <code class="language-plaintext highlighter-rouge">top</code> to identify and stop processes consuming excessive resources: <code class="language-plaintext highlighter-rouge">sudo pkill -STOP &lt;process_name&gt;</code>.</li>
  <li><strong>Clear System Cache:</strong>  <code class="language-plaintext highlighter-rouge">sudo sync &amp;&amp; sudo echo 3 &gt; /proc/sys/vm/drop_caches</code></li>
</ul>

<h3 id="2-basic-diagnostics">2. Basic Diagnostics</h3>

<ul>
  <li><strong>CPU Usage:</strong> <code class="language-plaintext highlighter-rouge">top</code> (or <code class="language-plaintext highlighter-rouge">htop</code> if installed) - Look for processes consistently using a high percentage of CPU.</li>
  <li><strong>Memory Usage:</strong> <code class="language-plaintext highlighter-rouge">free -h</code> - Check for low available memory, which could indicate excessive swapping.</li>
  <li><strong>Disk I/O:</strong> <code class="language-plaintext highlighter-rouge">iostat</code> - High <code class="language-plaintext highlighter-rouge">%util</code> values suggest disk bottlenecks.</li>
</ul>

<h3 id="3--rockchiparm64-specific-checks">3.  Rockchip/ARM64 Specific Checks</h3>

<ul>
  <li><strong>CPU Governor:</strong> <code class="language-plaintext highlighter-rouge">cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor</code> -  Should be <code class="language-plaintext highlighter-rouge">performance</code>. If not: <code class="language-plaintext highlighter-rouge">echo performance | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor</code></li>
  <li><strong>Thermal Throttling:</strong> <code class="language-plaintext highlighter-rouge">cat /sys/class/thermal/thermal_zone*/temp</code> - Check for overheating.</li>
</ul>

<h3 id="4-software-and-configuration-diagnostics">4. Software and Configuration Diagnostics</h3>

<ul>
  <li><strong>Boot Logs:</strong> <code class="language-plaintext highlighter-rouge">dmesg | less</code> - Look for errors or warnings during boot.</li>
  <li><strong>System Logs:</strong> <code class="language-plaintext highlighter-rouge">journalctl -p err -b</code> - Check for recent errors.  For specific services: <code class="language-plaintext highlighter-rouge">journalctl -u &lt;service_name&gt;</code>.</li>
  <li><strong>Package Management Logs:</strong>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">less /var/log/apt/history.log</code> - Review recent installations or updates.</li>
      <li><code class="language-plaintext highlighter-rouge">less /var/log/dpkg.log</code> - Check for package installation errors.</li>
    </ul>
  </li>
  <li><strong>Recently Modified Files:</strong> <code class="language-plaintext highlighter-rouge">sudo find /etc -type f -mtime -7 -ls</code> (lists files modified in the last 7 days).</li>
</ul>

<h3 id="5-advanced-troubleshooting">5. Advanced Troubleshooting</h3>

<ul>
  <li><strong>Hardware Checks:</strong>  <code class="language-plaintext highlighter-rouge">sensors</code> (if installed) to monitor hardware temperatures and voltages.  Consider running <code class="language-plaintext highlighter-rouge">memtester</code> to check for memory issues.</li>
  <li><strong>Detailed System Information:</strong> Install <code class="language-plaintext highlighter-rouge">sysstat</code>: <code class="language-plaintext highlighter-rouge">sudo apt install sysstat</code>.  Use <code class="language-plaintext highlighter-rouge">sar</code> to collect detailed system performance data.</li>
  <li><strong>Live Boot Environment:</strong> Boot from a Debian Live USB/SD card to test if the slowdown persists, which could indicate a hardware problem.</li>
</ul>

<h3 id="6-prevention">6. Prevention</h3>

<ul>
  <li><strong>Regular Backups:</strong> Use <code class="language-plaintext highlighter-rouge">timeshift</code> (or similar tools) to create system snapshots: <code class="language-plaintext highlighter-rouge">sudo timeshift --create --comments "Before making changes"</code>.</li>
  <li><strong>System Updates:</strong> Keep your system updated: <code class="language-plaintext highlighter-rouge">sudo apt update &amp;&amp; sudo apt upgrade -y</code>.</li>
  <li><strong>Configuration Management:</strong> Use version control (e.g., Git) or dedicated tools like <code class="language-plaintext highlighter-rouge">etckeeper</code> to track changes to configuration files.</li>
</ul>

<h3 id="7-reconstructing-changes-if-necessary">7. Reconstructing Changes (If Necessary)</h3>

<p>If the above steps don’t pinpoint the cause, you can try to reconstruct your recent changes:</p>

<ul>
  <li><strong>Command History:</strong> <code class="language-plaintext highlighter-rouge">history</code></li>
  <li><strong>Audit Logs (if configured):</strong> <code class="language-plaintext highlighter-rouge">ausearch -k &lt;event_key&gt;</code></li>
</ul>]]></content><author><name></name></author><category term="linux&gt;hardware" /></entry><entry><title type="html">Procedimento de Liberação Condicionada de Veículo Retido</title><link href="https://ib.bsb.br/procedimento-de-liberao-condicionada-de-veculo-retido/" rel="alternate" type="text/html" title="Procedimento de Liberação Condicionada de Veículo Retido" /><published>2024-11-13T00:00:00+00:00</published><updated>2024-11-13T14:15:48+00:00</updated><id>https://ib.bsb.br/procedimento-de-liberao-condicionada-de-veculo-retido</id><content type="html" xml:base="https://ib.bsb.br/procedimento-de-liberao-condicionada-de-veculo-retido/"><![CDATA[<p><strong>Procedimento de Liberação Condicionada de Veículo Retido</strong></p>

<p><strong>1 - Documentos Necessários:</strong></p>

<p>Para solicitar a liberação condicionada, é necessário apresentar a seguinte documentação:</p>

<p>1.1 CNH do condutor ou CPF do proprietário do veículo.
1.2 Comprovante de agendamento da vistoria veicular ou dos reparos necessários.
1.3 Placa do veículo que fará o transporte do automóvel.
1.4 CNH do condutor responsável pelo transporte do veículo.
1.5 Requerimento de liberação condicionada preenchido.
1.6 Procuração, caso um representante esteja solicitando a liberação em nome do proprietário.</p>

<p><strong>2 - Modelo de Requerimento de Liberação Condicionada (DLC):</strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>POLÍCIA RODOVIÁRIA FEDERAL
DOCUMENTO DE LIBERAÇÃO CONDICIONADA - DLC

DRV N°: __________

**1. DADOS DA LIBERAÇÃO CONDICIONADA**
- Regional: ___________
- Delegacia: __________
- Município: __________
- Hora: _______________
- Agente Responsável: ______________

**2. DADOS DO AUTORIZADO**
- Nome: ______________
- Endereço/Município/UF: ______________
- Telefone: ______________

**3. DADOS DO VEÍCULO**
- Placa: ______________
- Marca/Modelo: ______________
- Chassi (caso não registrado): ______________
- RENAVAM: ______________

**4. IRREGULARIDADE(S) A SANAR FORA DO PÁTIO**
4.1. ____________________________________
4.2. ____________________________________

- Data limite para apresentação do veículo regularizado: ______________

**5. TERMO DE RESPONSABILIDADE**
Declaro para todos os efeitos legais que assumo total responsabilidade pela circulação do veículo em vias públicas, estando ciente de que, se flagrado em situação irregular, o veículo será novamente removido ao depósito. Declaro, ainda, estar ciente de que o veículo deverá ser apresentado à PRF devidamente regularizado até a data limite, sob pena de inserção de restrição administrativa no cadastro do veículo.

- Assinatura do Autorizado: ______________

**6. VEÍCULO UTILIZADO NO TRANSPORTE**
- Placa: ______________
- CNH do condutor: ______________

</code></pre></div></div>]]></content><author><name></name></author><category term="trabalho" /></entry><entry><title type="html">Converting cURL to iOS Shortcut</title><link href="https://ib.bsb.br/converting-curl-to-ios-shortcut/" rel="alternate" type="text/html" title="Converting cURL to iOS Shortcut" /><published>2024-11-12T00:00:00+00:00</published><updated>2024-11-12T12:32:33+00:00</updated><id>https://ib.bsb.br/converting-curl-to-ios-shortcut</id><content type="html" xml:base="https://ib.bsb.br/converting-curl-to-ios-shortcut/"><![CDATA[<h2 id="converting-curl-to-ios-shortcut">Converting cURL to iOS Shortcut</h2>

<p>This guide provides a step-by-step approach to converting your <code class="language-plaintext highlighter-rouge">cURL</code> command into an iOS Shortcut, focusing on clarity and security.</p>

<h3 id="step-1-open-shortcuts-and-create-a-new-shortcut">Step 1: Open Shortcuts and Create a New Shortcut</h3>

<p>Launch the Shortcuts app and tap the <strong>”+”</strong> button to create a new shortcut.  Tap <strong>”Add Action”</strong>.</p>

<h3 id="step-2-add-get-contents-of-url">Step 2: Add “Get Contents of URL”</h3>

<p>Search for and add the <strong>”Get Contents of URL”</strong> action.</p>

<h3 id="step-3-configure-url-and-method">Step 3: Configure URL and Method</h3>

<ol>
  <li><strong>URL:</strong>  Enter the following URL:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://app.khoj.dev/api/chat/history?client=web&amp;conversation_id=b24b3a6b-0915-41a9-b540-643ed42b60ef
</code></pre></div>    </div>
  </li>
  <li><strong>Method:</strong> Select <strong>”GET”</strong>.</li>
</ol>

<h3 id="step-4-add-headers">Step 4: Add Headers</h3>

<p>Tap on <strong>”Headers”</strong> and add the following key-value pairs.  See the image below for a visual guide on adding headers:</p>

<p><img src="https://i.imgur.com/7F1t5bD.png" alt="Adding Headers in Shortcuts" /></p>

<table>
  <tbody>
    <tr>
      <td>Key</td>
      <td>Value</td>
    </tr>
    <tr>
      <td>——————</td>
      <td>————————————————————————————————————————————————————————————————————————————</td>
    </tr>
    <tr>
      <td>Host</td>
      <td><code class="language-plaintext highlighter-rouge">app.khoj.dev</code></td>
    </tr>
    <tr>
      <td>Sec-Fetch-Dest</td>
      <td><code class="language-plaintext highlighter-rouge">empty</code></td>
    </tr>
    <tr>
      <td>User-Agent</td>
      <td><code class="language-plaintext highlighter-rouge">Mozilla/5.0 (iPhone; CPU iPhone OS 18_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.1 Mobile/15E148 Safari/604.1</code></td>
    </tr>
    <tr>
      <td>Accept</td>
      <td><code class="language-plaintext highlighter-rouge">*/*</code></td>
    </tr>
    <tr>
      <td>Referer</td>
      <td><code class="language-plaintext highlighter-rouge">https://app.khoj.dev/chat?conversationId=b24b3a6b-0915-41a9-b540-643ed42b60ef</code></td>
    </tr>
    <tr>
      <td>Sec-Fetch-Site</td>
      <td><code class="language-plaintext highlighter-rouge">same-origin</code></td>
    </tr>
    <tr>
      <td>Sec-Fetch-Mode</td>
      <td><code class="language-plaintext highlighter-rouge">cors</code></td>
    </tr>
    <tr>
      <td>Accept-Language</td>
      <td><code class="language-plaintext highlighter-rouge">en-GB,en-US;q=0.9,en;q=0.8</code></td>
    </tr>
    <tr>
      <td>Priority</td>
      <td><code class="language-plaintext highlighter-rouge">u=3, i</code></td>
    </tr>
    <tr>
      <td>Accept-Encoding</td>
      <td><code class="language-plaintext highlighter-rouge">gzip, deflate, br</code></td>
    </tr>
    <tr>
      <td>Connection</td>
      <td><code class="language-plaintext highlighter-rouge">keep-alive</code></td>
    </tr>
    <tr>
      <td>Cookie</td>
      <td><em>(See Security Considerations below)</em>  Instead of directly embedding the cookie here, use a “Get Variable” action to retrieve it from a secure location (e.g., another shortcut dedicated to storing and refreshing it).</td>
    </tr>
  </tbody>
</table>

<h3 id="step-5-handling-the-response-json">Step 5: Handling the Response (JSON)</h3>

<ol>
  <li>Add a <strong>”Get Dictionary Value”</strong> action.</li>
  <li>Connect it to the “Get Contents of URL” action.</li>
  <li>In the “Key” field of “Get Dictionary Value”, enter the key you want to extract from the JSON response.  For example, if the JSON response is <code class="language-plaintext highlighter-rouge">{“message”: “Hello”}</code>, enter “message” to extract the value “Hello”.</li>
</ol>

<p><strong>Example JSON Output and Parsing:</strong></p>

<p>Let’s say the API returns:</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="err">“status”:</span><span class="w"> </span><span class="err">“success”</span><span class="p">,</span><span class="w"> </span><span class="err">“data”:</span><span class="w"> </span><span class="p">[{</span><span class="err">“id”:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="err">“name”:</span><span class="w"> </span><span class="err">“John”</span><span class="p">},</span><span class="w"> </span><span class="p">{</span><span class="err">“id”:</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span><span class="w"> </span><span class="err">“name”:</span><span class="w"> </span><span class="err">“Jane”</span><span class="p">}]}</span><span class="w">
</span></code></pre></div></div>

<p>To get the name of the first user, you would set the “Key” in “Get Dictionary Value” to “data”, then use another “Get Item from List” action to get the first item, and finally another “Get Dictionary Value” action with the key “name”.</p>

<h3 id="step-6-displaying-the-result">Step 6: Displaying the Result</h3>

<p>Add a <strong>”Show Result”</strong> action and connect it to the output of the “Get Dictionary Value” action (or any other action processing the response).</p>

<h3 id="step-7-security-considerations">Step 7: Security Considerations</h3>

<p><strong>Important:</strong> Directly embedding the <code class="language-plaintext highlighter-rouge">session</code> cookie in your shortcut is not recommended due to security risks and session expiration.  Instead, store the cookie securely and retrieve it dynamically.  Consider using a dedicated secrets management shortcut or iCloud Keychain.  This allows you to refresh the cookie periodically without modifying the main shortcut.</p>

<h3 id="step-8-save-and-run">Step 8: Save and Run</h3>

<p>Save your shortcut with a descriptive name (e.g., “Get Chat History”).  Run the shortcut to test its functionality.</p>]]></content><author><name></name></author><category term="scratchpad&gt;gemini" /></entry><entry><title type="html">/etc/init.d/performance_governors.sh</title><link href="https://ib.bsb.br/etcinitdperformance-governorssh/" rel="alternate" type="text/html" title="/etc/init.d/performance_governors.sh" /><published>2024-11-05T00:00:00+00:00</published><updated>2024-11-05T19:30:41+00:00</updated><id>https://ib.bsb.br/etcinitdperformance_governorssh</id><content type="html" xml:base="https://ib.bsb.br/etcinitdperformance-governorssh/"><![CDATA[<p>First, remove the init.d script registration: <code class="language-plaintext highlighter-rouge">sudo update-rc.d performance_governors.sh remove</code></p>

<p>Create a systemd service file: <code class="language-plaintext highlighter-rouge">sudo nano /etc/systemd/system/performance_governors.service</code></p>

<p>Add this content:</p>

<section data-filename="_code-block.txt" data-code="[Unit]
Description=Set CPU and GPU governor to performance
After=multi-user.target
[Service]
Type=oneshot
RemainAfterExit=yes
ExecStart=/etc/init.d/performance_governors.sh start
ExecStop=/etc/init.d/performance_governors.sh stop
[Install]
WantedBy=multi-user.target
Reload systemd to recognize the new service:
sudo systemctl daemon-reload" data-download-link="" data-download-link-label="Download "><code class="language-">[Unit]
Description=Set CPU and GPU governor to performance
After=multi-user.target
[Service]
Type=oneshot
RemainAfterExit=yes
ExecStart=/etc/init.d/performance_governors.sh start
ExecStop=/etc/init.d/performance_governors.sh stop
[Install]
WantedBy=multi-user.target
Reload systemd to recognize the new service:
sudo systemctl daemon-reload</code></section>

<p>Reload systemd to recognize the new service: <code class="language-plaintext highlighter-rouge">sudo systemctl daemon-reload</code></p>

<p>Enable and start the service:
<code class="language-plaintext highlighter-rouge">sudo systemctl enable performance_governors</code>
<code class="language-plaintext highlighter-rouge">sudo systemctl start performance_governors</code></p>

<p>Check the status: <code class="language-plaintext highlighter-rouge">sudo systemctl status performance_governors</code></p>

<section data-filename="bash_code-block.sh" data-code="#!/bin/bash
### BEGIN INIT INFO
# Provides:          performance_governors
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: CPU Performance Governors
# Description:       Script to manage CPU performance governor settings for RK3588
### END INIT INFO
# Source function library
. /lib/lsb/init-functions
# Path to the log file
LOG=&quot;/var/log/performance_governors.log&quot;
# Function to write to log
log_message() {
echo &quot;$(date '+%Y-%m-%d %H:%M:%S') $1&quot; &gt;&gt; &quot;$LOG&quot;
}
# Function to set governor
set_governor() {
local path=&quot;$1&quot;
if [ -f &quot;$path&quot; ]; then
echo performance &gt; &quot;$path&quot; 2&gt;/dev/null
if [ $? -eq 0 ]; then
log_message &quot;Successfully set performance governor for $path&quot;
return 0
else
log_message &quot;Failed to set performance governor for $path&quot;
return 1
fi
else
log_message &quot;Path does not exist: $path&quot;
return 1
fi
}
# Function to start the service
do_start() {
log_message &quot;Starting performance governors&quot;
local governors=(
&quot;/sys/class/devfreq/fb000000.gpu/governor&quot;
&quot;/sys/devices/system/cpu/cpufreq/policy0/scaling_governor&quot;
&quot;/sys/devices/system/cpu/cpufreq/policy4/scaling_governor&quot;
&quot;/sys/devices/system/cpu/cpufreq/policy6/scaling_governor&quot;
&quot;/sys/class/devfreq/dmc/governor&quot;
&quot;/sys/class/devfreq/fdab0000.npu/governor&quot;
)
local failed=0
for governor in &quot;${governors[@]}&quot;; do
set_governor &quot;$governor&quot; || failed=1
done
if [ $failed -eq 0 ]; then
log_message &quot;All performance governors set successfully&quot;
return 0
else
log_message &quot;Some governors failed to set&quot;
return 1
fi
}
# Function to stop the service (reset to default)
do_stop() {
log_message &quot;Stopping performance governors (resetting to default)&quot;
return 0
}
# Function to check status
do_status() {
local failed=0
for governor in /sys/devices/system/cpu/cpufreq/policy*/scaling_governor; do
if [ -f &quot;$governor&quot; ]; then
current=$(cat &quot;$governor&quot;)
echo &quot;Current governor for $governor: $current&quot;
[ &quot;$current&quot; != &quot;performance&quot; ] &amp;&amp; failed=1
fi
done
return $failed
}
# Main script logic
case &quot;$1&quot; in
start)
do_start
;;
stop)
do_stop
;;
restart)
do_stop
do_start
;;
status)
do_status
;;
*)
echo &quot;Usage: $0 {start|stop|restart|status}&quot;
exit 1
;;
esac
exit $?" data-download-link="" data-download-link-label="Download Bash"><code class="language-bash">#!/bin/bash
### BEGIN INIT INFO
# Provides:          performance_governors
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: CPU Performance Governors
# Description:       Script to manage CPU performance governor settings for RK3588
### END INIT INFO
# Source function library
. /lib/lsb/init-functions
# Path to the log file
LOG="/var/log/performance_governors.log"
# Function to write to log
log_message() {
echo "$(date '+%Y-%m-%d %H:%M:%S') $1" &gt;&gt; "$LOG"
}
# Function to set governor
set_governor() {
local path="$1"
if [ -f "$path" ]; then
echo performance &gt; "$path" 2&gt;/dev/null
if [ $? -eq 0 ]; then
log_message "Successfully set performance governor for $path"
return 0
else
log_message "Failed to set performance governor for $path"
return 1
fi
else
log_message "Path does not exist: $path"
return 1
fi
}
# Function to start the service
do_start() {
log_message "Starting performance governors"
local governors=(
"/sys/class/devfreq/fb000000.gpu/governor"
"/sys/devices/system/cpu/cpufreq/policy0/scaling_governor"
"/sys/devices/system/cpu/cpufreq/policy4/scaling_governor"
"/sys/devices/system/cpu/cpufreq/policy6/scaling_governor"
"/sys/class/devfreq/dmc/governor"
"/sys/class/devfreq/fdab0000.npu/governor"
)
local failed=0
for governor in "${governors[@]}"; do
set_governor "$governor" || failed=1
done
if [ $failed -eq 0 ]; then
log_message "All performance governors set successfully"
return 0
else
log_message "Some governors failed to set"
return 1
fi
}
# Function to stop the service (reset to default)
do_stop() {
log_message "Stopping performance governors (resetting to default)"
return 0
}
# Function to check status
do_status() {
local failed=0
for governor in /sys/devices/system/cpu/cpufreq/policy*/scaling_governor; do
if [ -f "$governor" ]; then
current=$(cat "$governor")
echo "Current governor for $governor: $current"
[ "$current" != "performance" ] &amp;&amp; failed=1
fi
done
return $failed
}
# Main script logic
case "$1" in
start)
do_start
;;
stop)
do_stop
;;
restart)
do_stop
do_start
;;
status)
do_status
;;
*)
echo "Usage: $0 {start|stop|restart|status}"
exit 1
;;
esac
exit $?</code></section>]]></content><author><name></name></author><category term="linux&gt;dotfile" /></entry><entry><title type="html">Gingko Python WebSocket script</title><link href="https://ib.bsb.br/gingko-python-websocket-script/" rel="alternate" type="text/html" title="Gingko Python WebSocket script" /><published>2024-11-03T00:00:00+00:00</published><updated>2024-11-04T10:05:37+00:00</updated><id>https://ib.bsb.br/gingko-python-websocket-script</id><content type="html" xml:base="https://ib.bsb.br/gingko-python-websocket-script/"><![CDATA[<p>A Python WebSocket client script was successfully developed to enable programmatic interaction with the Gingko Writer application. The project began with the goal of establishing a stable connection to <code class="language-plaintext highlighter-rouge">wss://app.gingkowriter.com/ws</code>, managing authentication through cookies, and handling various message types such as <code class="language-plaintext highlighter-rouge">'rt:join'</code>, <code class="language-plaintext highlighter-rouge">'trees'</code>, and <code class="language-plaintext highlighter-rouge">'user'</code>.  An initial script provided basic connection logic, logging, and message exchange capabilities.
The development process then encountered challenges related to using the established connection for specific tasks, like creating cards. This practical application focus required deeper investigation into message formatting, asynchronous handling of user input alongside incoming messages, and the implementation of a structured request mechanism.  The project required guidance on adding an interactive command interface, concurrent processing, improved logging, and robust error handling to ensure maintainability and extensibility.
A revised Python script was subsequently developed. This version incorporated credentials and authentication details from browser Developer Tools, ensuring proper formatting of the <code class="language-plaintext highlighter-rouge">'rt:join'</code> message with the correct <code class="language-plaintext highlighter-rouge">tr</code>, <code class="language-plaintext highlighter-rouge">uid</code>, and <code class="language-plaintext highlighter-rouge">m</code> parameters.  The script’s message handling was enhanced to process messages like <code class="language-plaintext highlighter-rouge">'rt:joinOk'</code> (join confirmation) and <code class="language-plaintext highlighter-rouge">'pushOk'</code> (push acknowledgment).  Securing credentials through environment variables and using valid, up-to-date system cookies was emphasized.
Initial testing revealed, via execution logs, that the <code class="language-plaintext highlighter-rouge">'rt:joinOk'</code> message was not being received, indicating a potential authentication problem.  Diagnostic steps and instructions for correctly extracting authentication details from Developer Tools were provided, prompting a script update.  This led to a successful connection and correct card creation within Gingko Writer, confirmed by subsequent logs showing push messages, <code class="language-plaintext highlighter-rouge">'pushOk'</code> acknowledgments, and seamless card hierarchy creation.
Throughout the project, issues with authentication parameter accuracy, session checkpoints, and real-time message exchange were addressed. Key milestones included accurate formatting of the <code class="language-plaintext highlighter-rouge">'rt:join'</code> message and correct interpretation of server acknowledgments. These achievements transformed the initial script into a functional tool for interacting with the Gingko Writer service.
The collaborative effort resulted in a robust Python WebSocket client capable of securely connecting to the Gingko Writer server and performing operations like creating structured card hierarchies. This was accomplished by meticulously resolving authentication problems, improving message handling, and ensuring adaptability through enhanced logging and error management. This foundation supports future extensions, such as adding interactive features or integrating more message types, increasing the script’s utility for programmatically managing Gingko Writer documents.</p>

<p>{% codeblock python %}
import asyncio
import json
import logging
import random
import string
import time
import websockets
from websockets.exceptions import ConnectionClosedError, WebSocketException</p>

<h1 id="configure-logging-for-detailed-debugging">Configure logging for detailed debugging</h1>
<p>logging.basicConfig(
    level=logging.DEBUG,  # Set to DEBUG for comprehensive logs
    format=’%(asctime)s - %(levelname)s - %(message)s’
)
logger = logging.getLogger(<strong>name</strong>)</p>

<p>class GingkoWebsocketClient:
    “””
    A client to interact with the Gingko Writer application via WebSocket.
    “””</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>def __init__(self, url: str, cookies: str, tree_id: str, user_id: str, auth_token: str):
    """
    Initializes the GingkoWebsocketClient with the necessary credentials and parameters.

    Args:
        url (str): The WebSocket URL for the Gingko Writer application.
        cookies (str): The authentication cookies.
        tree_id (str): The ID of the tree (document) to interact with.
        user_id (str): The user's Gingko Writer user ID.
        auth_token (str): The authentication token from the 'rt:join' message.
    """
    self.url = url
    self.cookies = cookies
    self.tree_id = tree_id
    self.user_id = user_id
    self.auth_token = auth_token
    self.session_id = None
    self.checkpoint = None
    self.push_ok_event = asyncio.Event()
    self.ws = None
    self.reconnect_attempts = 0
    self.max_reconnect_attempts = 5

async def generate_timestamp(self) -&gt; str:
    """
    Generates a unique timestamp for operations.

    Returns:
        str: A timestamp string in the format 'milliseconds:sequence:session_fragment'
    """
    millis = int(time.time() * 1000)
    sequence = random.randint(0, 9)
    session_fragment = ''.join(random.choices(string.ascii_lowercase + string.digits, k=8))
    return f"{millis}:{sequence}:{session_fragment}"

async def generate_card_id(self) -&gt; str:
    """
    Generates a unique card ID.

    Returns:
        str: A 24-character alphanumeric string.
    """
    return ''.join(random.choices(string.ascii_letters + string.digits, k=24))

async def send_message(self, message_type: str, data: dict):
    """
    Sends a formatted message over the WebSocket connection.

    Args:
        message_type (str): The type of the message (e.g., 'push', 'rt:join').
        data (dict): The message data payload.
    """
    if self.ws is None:
        logger.error("WebSocket connection is not established.")
        return
    message = {"t": message_type, "d": data}
    try:
        await self.ws.send(json.dumps(message))
        logger.debug(f"Sent {message_type} message: {json.dumps(data)}")
    except Exception as e:
        logger.error(f"Failed to send message '{message_type}': {e}")

async def handle_user_message(self, data: dict):
    logger.info(f"Received user data: {json.dumps(data, indent=2)}")

async def handle_trees_message(self, data: list):
    trees = data
    logger.info(f"Received trees data: {json.dumps(trees, indent=2)}")
    tree_ids = [tree['id'] for tree in trees]
    if self.tree_id in tree_ids:
        self.session_id = "SessionNotProvided"
        self.push_ok_event.set()
        logger.info(f"Tree '{self.tree_id}' is available. Proceeding with operations.")
    else:
        logger.error(f"Tree '{self.tree_id}' not found in your account.")

async def handle_rt_users_message(self, data: list):
    logger.info(f"Received rt:users data: {json.dumps(data, indent=2)}")

async def handle_push_ok_message(self, data: list):
    checkpoint_list = data
    if checkpoint_list:
        self.checkpoint = checkpoint_list[0]
        logger.debug(f"Updated checkpoint to: {self.checkpoint}")
        self.push_ok_event.set()
    else:
        logger.warning("Received pushOk without checkpoint data.")

async def handle_rt_join_ok_message(self, data: dict):
    self.session_id = data.get("sid")
    initial_checkpoint = data.get("chk")
    if initial_checkpoint:
        self.checkpoint = initial_checkpoint
    logger.info(f"Joined session: {self.session_id}, initial checkpoint: {self.checkpoint}")
    self.push_ok_event.set()

async def handle_error_message(self, data: dict):
    logger.error(f"Received error from server: {json.dumps(data, indent=2)}")

async def handle_message(self, message_data: dict):
    """
    Handles incoming messages from the WebSocket.

    Args:
        message_data (dict): The received message data.
    """
    logger.debug(f"Received message: {json.dumps(message_data, indent=2)}")
    message_type = message_data.get("t")
    data = message_data.get("d", {})

    handler = {
        "user": self.handle_user_message,
        "trees": self.handle_trees_message,
        "rt:users": self.handle_rt_users_message,
        "pushOk": self.handle_push_ok_message,
        "rt:joinOk": self.handle_rt_join_ok_message,
        "error": self.handle_error_message,
        "ping": lambda _: self.send_message("pong", {})
    }.get(message_type)

    if handler:
        await handler(data)
    else:
        logger.debug(f"Unhandled message type: {message_type}, data: {json.dumps(data, indent=2)}")

async def message_handler(self):
    """
    Continuously handles incoming messages from the WebSocket.
    """
    try:
        async for message in self.ws:
            try:
                message_data = json.loads(message)
                await self.handle_message(message_data)
            except json.JSONDecodeError as e:
                logger.error(f"Failed to decode JSON message: {e}")
    except (ConnectionClosedError, WebSocketException) as e:
        logger.error(f"Connection closed: {e}")
        await self.reconnect()
    except Exception as e:
        logger.error(f"Unexpected error in message handler: {e}")
        await self.reconnect()

def get_join_message(self) -&gt; dict:
    """
    Constructs the 'rt:join' message to join the Gingko session.

    Returns:
        dict: The 'rt:join' message data.
    """
    return {
        "tr": self.tree_id,
        "uid": self.user_id,
        "m": ["a", self.auth_token]
    }

async def create_card(self, content: str, parent_id: str = None, position: int = 0) -&gt; str:
    """
    Creates a new card in the Gingko tree.

    Args:
        content (str): The content of the card.
        parent_id (str, optional): The ID of the parent card. Defaults to None.
        position (int, optional): The position among siblings. Defaults to 0.

    Returns:
        str: The ID of the created card.
    """
    card_id = await self.generate_card_id()
    insert_ts = await self.generate_timestamp()
    update_ts = await self.generate_timestamp()

    # Insert operation
    insert_delta = {
        "id": card_id,
        "ts": insert_ts,
        "ops": [
            {"t": "i", "c": "", "p": parent_id, "pos": position}
        ]
    }

    # Update operation
    update_delta = {
        "id": card_id,
        "ts": update_ts,
        "ops": [
            {"t": "u", "c": content, "e": insert_ts}
        ]
    }

    push_data = {
        "dlts": [insert_delta, update_delta],
        "tr": self.tree_id,
        "chk": self.checkpoint or insert_ts
    }

    self.push_ok_event.clear()
    await self.send_message("push", push_data)
    logger.info(f"Sent push for card '{content}' with ID {card_id}")

    try:
        await asyncio.wait_for(self.push_ok_event.wait(), timeout=10)
        logger.info(f"Push acknowledgment received for card '{content}'")
    except asyncio.TimeoutError:
        logger.error("Did not receive pushOk acknowledgment in time.")
        raise Exception("pushOk timeout")

    return card_id

async def create_tree_structure(self, structure: list, parent_id: str = None):
    """
    Recursively creates a tree structure based on the provided data.

    Args:
        structure (list): A list of dicts representing the tree structure.
        parent_id (str, optional): The ID of the parent card. Defaults to None.
    """
    for position, node in enumerate(structure):
        content = node.get("content", "").strip()
        children = node.get("children", [])

        if not content:
            logger.warning("Encountered node without content. Skipping.")
            continue

        try:
            card_id = await self.create_card(content, parent_id, position)
            logger.info(f"Created card '{content}' with ID {card_id}")

            if children:
                await self.create_tree_structure(children, card_id)

            # Small delay to avoid overwhelming the server
            await asyncio.sleep(0.1)
        except Exception as e:
            logger.error(f"Failed to create card '{content}': {e}")

async def perform_operations(self):
    """
    Performs desired operations after establishing the WebSocket connection.
    This could be interacting with the tree, creating cards, etc.
    """
    logger.info("Starting operations...")

    # Example: Create a single card.
    example_structure = [
        {
            "content": "Automated Root Card",
            "children": [
                {"content": "Automated Child 1"},
                {"content": "Automated Child 2"}
            ]
        }
    ]

    await self.create_tree_structure(example_structure)
    logger.info("Completed creating example card structure.")

async def connect(self):
    """
    Establishes the WebSocket connection and handles reconnection logic.
    """
    while self.reconnect_attempts &lt; self.max_reconnect_attempts:
        try:
            async with websockets.connect(
                self.url,
                extra_headers={"Cookie": self.cookies}
            ) as ws:
                self.ws = ws
                self.reconnect_attempts = 0
                logger.info(f"Connected to {self.url}")

                # Send 'rt:join' message
                join_message = self.get_join_message()
                await self.send_message("rt:join", join_message)
                logger.debug(f"Sent 'rt:join' message: {json.dumps(join_message)}")
                logger.debug("Waiting for 'rt:joinOk' message...")

                # Start handling incoming messages
                message_task = asyncio.create_task(self.message_handler())

                # Wait until session ID is received
                try:
                    await asyncio.wait_for(self.push_ok_event.wait(), timeout=10)
                except asyncio.TimeoutError:
                    logger.error("Did not receive 'rt:joinOk' acknowledgment in time.")
                    await self.reconnect()
                    continue

                # Proceed with operations
                await self.perform_operations()

                # Keep the connection alive
                await message_task

        except Exception as e:
            logger.exception(f"Connection error: {e}")
            await self.reconnect()

async def reconnect(self):
    """
    Handles reconnection logic with exponential backoff.
    """
    self.reconnect_attempts += 1
    if self.reconnect_attempts &gt;= self.max_reconnect_attempts:
        logger.error("Maximum reconnection attempts reached. Exiting.")
        return
    wait_time = min(2 ** self.reconnect_attempts, 60)
    logger.info(f"Attempting to reconnect in {wait_time} seconds (Attempt {self.reconnect_attempts}/{self.max_reconnect_attempts})...")
    await asyncio.sleep(wait_time)
    logger.info("Reconnecting...")
    # Reset session-specific data
    self.session_id = None
    self.checkpoint = None
    self.push_ok_event.clear()

async def start(self):
    """
    Starts the client, connects to the server, and initiates operations.
    """
    try:
        await self.connect()
    except KeyboardInterrupt:
        logger.info("Interrupted by user.")
        if self.ws:
            await self.ws.close()
    except Exception as e:
        logger.exception(f"An unexpected error occurred: {e}")

@staticmethod
def load_credentials_from_env():
    """
    Loads credentials from environment variables.

    Returns:
        tuple: A tuple containing url, cookies, tree_id, user_id, auth_token
    """
    url = "wss://app.gingkowriter.com/ws"  # Fixed URL
    cookies = (
        "connect.sid=s%3AXkJFI98eqQGZr1RAGBIfYsYBVr-Uut3U.1km8qszBYRbt4y8Pt%2FrfFiJYiJxOanDTVmG5M1neBO8; "
        "_lr_uf_-jtqjrc=75363195-2f23-4367-a280-285f990f7e05; "
        "_BEAMER_USER_ID_mYJLRImY38547=25ddf751-0c59-4586-802b-363c9ae86222; "
        "_BEAMER_FIRST_VISIT_mYJLRImY38547=2024-10-12T23:25:51.320Z; "
        "__stripe_mid=cf6d738b-2f4f-4056-80c1-1c9c71add535b51abb; "
        "_BEAMER_LAST_POST_SHOWN_mYJLRImY38547=null; "
        "_BEAMER_DATE_mYJLRImY38547=2024-11-02T18:12:51.544Z; "
        "_BEAMER_FILTER_BY_URL_mYJLRImY38547=false; "
        "__stripe_sid=ff6a432e-a911-4aec-b705-f4d2ee20b821a790e3; "
        "_lr_tabs_-jtqjrc%2Fgingko-writer-production={%22sessionID%22:4%2C%22recordingID%22:%225-30ccf034-7be8-4a09-818c-d0bb25704c75%22%2C%22lastActivity%22:1730633141817%2C%22hasActivity%22:true}; "
        "_lr_hb_-jtqjrc%2Fgingko-writer-production={%22heartbeat%22:1730633141818}"
    )
    tree_id = "6oj4Rzb"  # As per your 'rt:join' message
    user_id = "h9ogoeh2o2u7"  # As per your 'rt:join' message
    auth_token = "TLOBcFHCOPU6oI6mYHKdpR5F"  # As per your 'rt:join' message
    return url, cookies, tree_id, user_id, auth_token
</code></pre></div></div>

<p>async def main():
    “””
    Main function to start the GingkoWebsocketClient.
    “””
    # Load credentials directly from provided data
    URL, COOKIES, TREE_ID, USER_ID, AUTH_TOKEN = GingkoWebsocketClient.load_credentials_from_env()</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>client = GingkoWebsocketClient(URL, COOKIES, TREE_ID, USER_ID, AUTH_TOKEN)
await client.start()
</code></pre></div></div>

<p>if <strong>name</strong> == “<strong>main</strong>”:
    asyncio.run(main())
{%22sessionID%22:4%2C%22recordingID%22:%225-30ccf034-7be8-4a09-818c-d0bb25704c75%22%2C%22lastActivity%22:1730633141817%2C%22hasActivity%22:true}; “
            “<em>lr_hb</em>-jtqjrc%2Fgingko-writer-production={%22heartbeat%22:1730633141818}”
        )
        tree_id = “6oj4Rzb”  # As per your ‘rt:join’ message
        user_id = “h9ogoeh2o2u7”  # As per your ‘rt:join’ message
        auth_token = “TLOBcFHCOPU6oI6mYHKdpR5F”  # As per your ‘rt:join’ message
        return url, cookies, tree_id, user_id, auth_token</p>

<p>async def main():
    “””
    Main function to start the GingkoWebsocketClient.
    “””
    # Load credentials directly from provided data
    URL, COOKIES, TREE_ID, USER_ID, AUTH_TOKEN = GingkoWebsocketClient.load_credentials_from_env()</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>client = GingkoWebsocketClient(URL, COOKIES, TREE_ID, USER_ID, AUTH_TOKEN)
await client.start()
</code></pre></div></div>

<p>if <strong>name</strong> == “<strong>main</strong>”:
    asyncio.run(main())
{% endcodeblock %}</p>]]></content><author><name></name></author><category term="scripts&gt;cloud" /></entry></feed>