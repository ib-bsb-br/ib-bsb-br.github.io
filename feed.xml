<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://ib.bsb.br/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ib.bsb.br/" rel="alternate" type="text/html" /><updated>2024-10-26T21:48:10+00:00</updated><id>https://ib.bsb.br/feed.xml</id><title type="html">infoBAG</title><entry><title type="html">Building a File Storage Service with Cloudflare Workers and R2</title><link href="https://ib.bsb.br/building-a-file-storage-service-with-cloudflare-workers-and-r2/" rel="alternate" type="text/html" title="Building a File Storage Service with Cloudflare Workers and R2" /><published>2024-10-26T00:00:00+00:00</published><updated>2024-10-26T04:01:12+00:00</updated><id>https://ib.bsb.br/building-a-file-storage-service-with-cloudflare-workers-and-r2</id><content type="html" xml:base="https://ib.bsb.br/building-a-file-storage-service-with-cloudflare-workers-and-r2/"><![CDATA[<p>How to create a file storage service that handles multiple file types using Cloudflare Workers for the RESTful API and Cloudflare R2 for storage. This implementation allows secure uploading, retrieving, and deleting of files.</p>

<h3 id="introduction">Introduction</h3>

<p>The goal is to build a self-hosted file storage solution (图床) that leverages Cloudflare Workers and R2, inspired by the tutorials:</p>

<ul>
  <li><a href="https://zhul.in/2024/08/12/new-picbed-based-on-cloudflare-and-upyun/">自建图床小记一——图床架构与 DNS 解析</a></li>
  <li><a href="https://zhul.in/2024/08/13/build-restful-api-for-cloudflare-r2-with-cloudflare-workers/">自建图床小记二——使用 Workers 为 R2 构建 Restful API</a></li>
</ul>

<p>This service will:</p>

<ul>
  <li>Support multiple file types (images, documents, etc.).</li>
  <li>Use Cloudflare R2 for object storage.</li>
  <li>Provide a RESTful API for file operations.</li>
  <li>Include basic authentication for secure access.</li>
</ul>

<h3 id="implementation">Implementation</h3>

<p>Below is the Cloudflare Worker script with explanations and comments.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Cloudflare Worker Script for File Storage Service</span>

<span class="k">export</span> <span class="k">default</span> <span class="p">{</span>
  <span class="k">async</span> <span class="nf">fetch</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="nx">env</span><span class="p">,</span> <span class="nx">ctx</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="k">await</span> <span class="nf">handleRequest</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="nx">env</span><span class="p">);</span>
  <span class="p">},</span>
<span class="p">};</span>

<span class="cm">/**
 * Handles incoming requests and routes them based on the HTTP method.
 * @param {Request} request - The incoming HTTP request.
 * @param {Object} env - Environment bindings (e.g., R2 bucket).
 */</span>
<span class="k">async</span> <span class="kd">function</span> <span class="nf">handleRequest</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="nx">env</span><span class="p">)</span> <span class="p">{</span>
  <span class="c1">// Parse the URL to get the file path</span>
  <span class="kd">const</span> <span class="nx">url</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">URL</span><span class="p">(</span><span class="nx">request</span><span class="p">.</span><span class="nx">url</span><span class="p">);</span>
  <span class="kd">const</span> <span class="nx">filePath</span> <span class="o">=</span> <span class="nf">decodeURIComponent</span><span class="p">(</span><span class="nx">url</span><span class="p">.</span><span class="nx">pathname</span><span class="p">.</span><span class="nf">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">));</span> <span class="c1">// Remove leading '/'</span>

  <span class="c1">// Authentication for write operations</span>
  <span class="kd">const</span> <span class="nx">AUTH_KEY</span> <span class="o">=</span> <span class="nx">env</span><span class="p">.</span><span class="nx">AUTH_KEY_SECRET</span><span class="p">;</span>
  <span class="kd">const</span> <span class="nx">method</span> <span class="o">=</span> <span class="nx">request</span><span class="p">.</span><span class="nx">method</span><span class="p">.</span><span class="nf">toUpperCase</span><span class="p">();</span>
  <span class="k">if </span><span class="p">([</span><span class="dl">'</span><span class="s1">PUT</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">DELETE</span><span class="dl">'</span><span class="p">].</span><span class="nf">includes</span><span class="p">(</span><span class="nx">method</span><span class="p">))</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">authHeader</span> <span class="o">=</span> <span class="nx">request</span><span class="p">.</span><span class="nx">headers</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="dl">'</span><span class="s1">X-Custom-Auth-Key</span><span class="dl">'</span><span class="p">);</span>
    <span class="k">if </span><span class="p">(</span><span class="nx">authHeader</span> <span class="o">!==</span> <span class="nx">AUTH_KEY</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">return</span> <span class="k">new</span> <span class="nc">Response</span><span class="p">(</span><span class="dl">'</span><span class="s1">Forbidden</span><span class="dl">'</span><span class="p">,</span> <span class="p">{</span> <span class="na">status</span><span class="p">:</span> <span class="mi">403</span> <span class="p">});</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="k">switch </span><span class="p">(</span><span class="nx">method</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">case</span> <span class="dl">'</span><span class="s1">PUT</span><span class="dl">'</span><span class="p">:</span>
      <span class="c1">// Handle file upload</span>
      <span class="k">return</span> <span class="k">await</span> <span class="nf">uploadFile</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="nx">env</span><span class="p">,</span> <span class="nx">filePath</span><span class="p">);</span>
    <span class="k">case</span> <span class="dl">'</span><span class="s1">GET</span><span class="dl">'</span><span class="p">:</span>
      <span class="c1">// Handle file retrieval</span>
      <span class="k">return</span> <span class="k">await</span> <span class="nf">getFile</span><span class="p">(</span><span class="nx">env</span><span class="p">,</span> <span class="nx">filePath</span><span class="p">);</span>
    <span class="k">case</span> <span class="dl">'</span><span class="s1">DELETE</span><span class="dl">'</span><span class="p">:</span>
      <span class="c1">// Handle file deletion</span>
      <span class="k">return</span> <span class="k">await</span> <span class="nf">deleteFile</span><span class="p">(</span><span class="nx">env</span><span class="p">,</span> <span class="nx">filePath</span><span class="p">);</span>
    <span class="nl">default</span><span class="p">:</span>
      <span class="k">return</span> <span class="k">new</span> <span class="nc">Response</span><span class="p">(</span><span class="dl">'</span><span class="s1">Method Not Allowed</span><span class="dl">'</span><span class="p">,</span> <span class="p">{</span>
        <span class="na">status</span><span class="p">:</span> <span class="mi">405</span><span class="p">,</span>
        <span class="na">headers</span><span class="p">:</span> <span class="p">{</span> <span class="na">Allow</span><span class="p">:</span> <span class="dl">'</span><span class="s1">GET, PUT, DELETE</span><span class="dl">'</span> <span class="p">},</span>
      <span class="p">});</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="cm">/**
 * Uploads a file to the R2 bucket.
 * @param {Request} request - The incoming HTTP request.
 * @param {Object} env - Environment bindings.
 * @param {string} key - The file path in the bucket.
 */</span>
<span class="k">async</span> <span class="kd">function</span> <span class="nf">uploadFile</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="nx">env</span><span class="p">,</span> <span class="nx">key</span><span class="p">)</span> <span class="p">{</span>
  <span class="c1">// Optional: Validate file size, type, etc.</span>

  <span class="c1">// Save the file to R2</span>
  <span class="kd">const</span> <span class="nx">contentType</span> <span class="o">=</span>
    <span class="nx">request</span><span class="p">.</span><span class="nx">headers</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="dl">'</span><span class="s1">Content-Type</span><span class="dl">'</span><span class="p">)</span> <span class="o">||</span> <span class="dl">'</span><span class="s1">application/octet-stream</span><span class="dl">'</span><span class="p">;</span>
  <span class="k">await</span> <span class="nx">env</span><span class="p">.</span><span class="nx">MY_BUCKET</span><span class="p">.</span><span class="nf">put</span><span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="nx">request</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span> <span class="p">{</span>
    <span class="na">httpMetadata</span><span class="p">:</span> <span class="p">{</span> <span class="nx">contentType</span> <span class="p">},</span>
    <span class="c1">// Optional: Set cache control</span>
    <span class="na">httpMetadata</span><span class="p">:</span> <span class="p">{</span> <span class="na">cacheControl</span><span class="p">:</span> <span class="dl">'</span><span class="s1">public, max-age=31536000</span><span class="dl">'</span> <span class="p">},</span>
  <span class="p">});</span>
  <span class="k">return</span> <span class="k">new</span> <span class="nc">Response</span><span class="p">(</span><span class="s2">`File '</span><span class="p">${</span><span class="nx">key</span><span class="p">}</span><span class="s2">' uploaded successfully`</span><span class="p">,</span> <span class="p">{</span> <span class="na">status</span><span class="p">:</span> <span class="mi">200</span> <span class="p">});</span>
<span class="p">}</span>

<span class="cm">/**
 * Retrieves a file from the R2 bucket.
 * @param {Object} env - Environment bindings.
 * @param {string} key - The file path in the bucket.
 */</span>
<span class="k">async</span> <span class="kd">function</span> <span class="nf">getFile</span><span class="p">(</span><span class="nx">env</span><span class="p">,</span> <span class="nx">key</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">object</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">env</span><span class="p">.</span><span class="nx">MY_BUCKET</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="nx">key</span><span class="p">);</span>
  <span class="k">if </span><span class="p">(</span><span class="o">!</span><span class="nx">object</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="k">new</span> <span class="nc">Response</span><span class="p">(</span><span class="dl">'</span><span class="s1">File Not Found</span><span class="dl">'</span><span class="p">,</span> <span class="p">{</span> <span class="na">status</span><span class="p">:</span> <span class="mi">404</span> <span class="p">});</span>
  <span class="p">}</span>

  <span class="c1">// Return the file with appropriate headers</span>
  <span class="kd">const</span> <span class="nx">headers</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Headers</span><span class="p">();</span>
  <span class="nx">object</span><span class="p">.</span><span class="nf">writeHttpMetadata</span><span class="p">(</span><span class="nx">headers</span><span class="p">);</span>
  <span class="nx">headers</span><span class="p">.</span><span class="nf">set</span><span class="p">(</span><span class="dl">'</span><span class="s1">ETag</span><span class="dl">'</span><span class="p">,</span> <span class="nx">object</span><span class="p">.</span><span class="nx">httpEtag</span><span class="p">);</span>

  <span class="k">return</span> <span class="k">new</span> <span class="nc">Response</span><span class="p">(</span><span class="nx">object</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span> <span class="p">{</span> <span class="nx">headers</span> <span class="p">});</span>
<span class="p">}</span>

<span class="cm">/**
 * Deletes a file from the R2 bucket.
 * @param {Object} env - Environment bindings.
 * @param {string} key - The file path in the bucket.
 */</span>
<span class="k">async</span> <span class="kd">function</span> <span class="nf">deleteFile</span><span class="p">(</span><span class="nx">env</span><span class="p">,</span> <span class="nx">key</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">await</span> <span class="nx">env</span><span class="p">.</span><span class="nx">MY_BUCKET</span><span class="p">.</span><span class="k">delete</span><span class="p">(</span><span class="nx">key</span><span class="p">);</span>
  <span class="k">return</span> <span class="k">new</span> <span class="nc">Response</span><span class="p">(</span><span class="s2">`File '</span><span class="p">${</span><span class="nx">key</span><span class="p">}</span><span class="s2">' deleted successfully`</span><span class="p">,</span> <span class="p">{</span> <span class="na">status</span><span class="p">:</span> <span class="mi">200</span> <span class="p">});</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="setup-instructions">Setup Instructions</h3>

<h4 id="1-create-an-r2-bucket">1. Create an R2 Bucket</h4>

<ul>
  <li>Log in to your Cloudflare dashboard.</li>
  <li>Navigate to <strong>R2</strong> and create a new bucket (e.g., <code class="language-plaintext highlighter-rouge">my-file-storage</code>).</li>
</ul>

<h4 id="2-write-the-worker-script">2. Write the Worker Script</h4>

<ul>
  <li>Use the script provided above.</li>
  <li>Save it in your Cloudflare Workers dashboard or use the <a href="https://developers.cloudflare.com/workers/wrangler/">Wrangler CLI</a>.</li>
</ul>

<h4 id="3-bind-the-r2-bucket-to-the-worker">3. Bind the R2 Bucket to the Worker</h4>

<ul>
  <li>In your Worker settings, go to <strong>Variables &gt; R2 Buckets</strong>.</li>
  <li>Bind the <code class="language-plaintext highlighter-rouge">MY_BUCKET</code> variable to your R2 bucket (<code class="language-plaintext highlighter-rouge">my-file-storage</code>).</li>
</ul>

<h4 id="4-set-the-authentication-key">4. Set the Authentication Key</h4>

<ul>
  <li>In <strong>Variables &gt; Environment Variables</strong>, add <code class="language-plaintext highlighter-rouge">AUTH_KEY_SECRET</code> with a secure value (your secret key).</li>
</ul>

<h4 id="5-deploy-the-worker">5. Deploy the Worker</h4>

<ul>
  <li>Assign a route or domain to your Worker (e.g., <code class="language-plaintext highlighter-rouge">https://files.example.com</code>).</li>
  <li>Deploy the Worker.</li>
</ul>

<h3 id="usage-examples">Usage Examples</h3>

<h4 id="uploading-a-file">Uploading a File</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-X</span> PUT <span class="s1">'https://files.example.com/path/to/file.jpg'</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Content-Type: image/jpeg'</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'X-Custom-Auth-Key: your_auth_key'</span> <span class="se">\</span>
  <span class="nt">--data-binary</span> <span class="s1">'@local/path/to/file.jpg'</span>
</code></pre></div></div>

<h4 id="retrieving-a-file">Retrieving a File</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-X</span> GET <span class="s1">'https://files.example.com/path/to/file.jpg'</span> <span class="nt">--output</span> file.jpg
</code></pre></div></div>

<h4 id="deleting-a-file">Deleting a File</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-X</span> DELETE <span class="s1">'https://files.example.com/path/to/file.jpg'</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'X-Custom-Auth-Key: your_auth_key'</span>
</code></pre></div></div>

<h3 id="notes-and-considerations">Notes and Considerations</h3>

<ul>
  <li>
    <p><strong>Supported File Types:</strong></p>

    <ul>
      <li>All file types are supported. Ensure the <code class="language-plaintext highlighter-rouge">Content-Type</code> is correctly set when uploading.</li>
    </ul>
  </li>
  <li>
    <p><strong>Authentication:</strong></p>

    <ul>
      <li>Only <code class="language-plaintext highlighter-rouge">PUT</code> and <code class="language-plaintext highlighter-rouge">DELETE</code> requests require the <code class="language-plaintext highlighter-rouge">X-Custom-Auth-Key</code> header.</li>
      <li><code class="language-plaintext highlighter-rouge">GET</code> requests are public. Implement additional checks if you need to restrict access.</li>
    </ul>
  </li>
  <li>
    <p><strong>Caching:</strong></p>

    <ul>
      <li>The <code class="language-plaintext highlighter-rouge">Cache-Control</code> header is set for one year (<code class="language-plaintext highlighter-rouge">max-age=31536000</code>).</li>
      <li>Adjust caching policies as needed.</li>
    </ul>
  </li>
  <li>
    <p><strong>Error Handling:</strong></p>

    <ul>
      <li>The script provides basic error responses.</li>
      <li>Expand error handling for production use.</li>
    </ul>
  </li>
  <li>
    <p><strong>Limits:</strong></p>

    <ul>
      <li>Cloudflare Workers have <a href="https://developers.cloudflare.com/workers/platform/limits/">limits</a> on request size, CPU time, etc.</li>
      <li>For large files, consider using direct uploads to R2 or multipart uploads.</li>
    </ul>
  </li>
</ul>]]></content><author><name></name></author><category term="scripts&gt;cloud," /><category term="tools" /><summary type="html"><![CDATA[How to create a file storage service that handles multiple file types using Cloudflare Workers for the RESTful API and Cloudflare R2 for storage. This implementation allows secure uploading, retrieving, and deleting of files.]]></summary></entry><entry><title type="html">categorized MIME types</title><link href="https://ib.bsb.br/categorized-mime-types/" rel="alternate" type="text/html" title="categorized MIME types" /><published>2024-10-26T00:00:00+00:00</published><updated>2024-10-26T03:33:50+00:00</updated><id>https://ib.bsb.br/categorized-mime-types</id><content type="html" xml:base="https://ib.bsb.br/categorized-mime-types/"><![CDATA[<table>
  <thead>
    <tr>
      <th>Category</th>
      <th>MIME Type</th>
      <th>File Extension(s)</th>
      <th>Example</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Text &amp; Documents</strong></td>
      <td><code class="language-plaintext highlighter-rouge">text/plain</code></td>
      <td>.txt, .log</td>
      <td>Code, logs, configuration files</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">text/csv</code></td>
      <td>.csv</td>
      <td>Spreadsheets, data exchange</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">application/msword</code></td>
      <td>.doc, .docx</td>
      <td>Microsoft Word documents</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">application/vnd.openxmlformats-officedocument.wordprocessingml.document</code></td>
      <td>.docx</td>
      <td>Modern Word documents</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">application/vnd.oasis.opendocument.text</code></td>
      <td>.odt</td>
      <td>OpenDocument Text</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">application/pdf</code></td>
      <td>.pdf</td>
      <td>Documents, reports</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">text/html</code></td>
      <td>.html, .htm</td>
      <td>Web pages, email content</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">text/markdown</code></td>
      <td>.md</td>
      <td>Documentation, writing</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">application/rtf</code></td>
      <td>.rtf</td>
      <td>Rich Text Format</td>
    </tr>
    <tr>
      <td><strong>Spreadsheets</strong></td>
      <td><code class="language-plaintext highlighter-rouge">application/vnd.ms-excel</code></td>
      <td>.xls</td>
      <td>Microsoft Excel (older)</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</code></td>
      <td>.xlsx</td>
      <td>Microsoft Excel (modern)</td>
    </tr>
    <tr>
      <td><strong>Images</strong></td>
      <td><code class="language-plaintext highlighter-rouge">image/jpeg</code></td>
      <td>.jpg, .jpeg</td>
      <td>Photos, web graphics</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">image/png</code></td>
      <td>.png</td>
      <td>Graphics with transparency</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">image/gif</code></td>
      <td>.gif</td>
      <td>Animated images</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">image/webp</code></td>
      <td>.webp</td>
      <td>Web images</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">image/heic</code></td>
      <td>.heic</td>
      <td>Images from Apple devices</td>
    </tr>
    <tr>
      <td><strong>Audio</strong></td>
      <td><code class="language-plaintext highlighter-rouge">audio/mpeg</code></td>
      <td>.mp3</td>
      <td>Music, audio files</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">audio/wav</code></td>
      <td>.wav</td>
      <td>Uncompressed audio</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">audio/ogg</code></td>
      <td>.ogg</td>
      <td>Ogg Vorbis audio</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">audio/aac</code></td>
      <td>.aac</td>
      <td>Advanced Audio Coding</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">audio/flac</code></td>
      <td>.flac</td>
      <td>Lossless audio</td>
    </tr>
    <tr>
      <td><strong>Video</strong></td>
      <td><code class="language-plaintext highlighter-rouge">video/mp4</code></td>
      <td>.mp4</td>
      <td>Video files</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">video/webm</code></td>
      <td>.webm</td>
      <td>Web video</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">video/x-matroska</code></td>
      <td>.mkv</td>
      <td>Matroska video container</td>
    </tr>
    <tr>
      <td><strong>Archives</strong></td>
      <td><code class="language-plaintext highlighter-rouge">application/zip</code></td>
      <td>.zip</td>
      <td>Compressed archives</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">application/x-gzip</code></td>
      <td>.gz</td>
      <td>Gzip compressed files</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">application/x-tar</code></td>
      <td>.tar</td>
      <td>Tar archives</td>
    </tr>
    <tr>
      <td><strong>Web Content</strong></td>
      <td><code class="language-plaintext highlighter-rouge">text/css</code></td>
      <td>.css</td>
      <td>Cascading Style Sheets</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">application/javascript</code></td>
      <td>.js</td>
      <td>JavaScript code</td>
    </tr>
    <tr>
      <td><strong>Application Data</strong></td>
      <td><code class="language-plaintext highlighter-rouge">application/json</code></td>
      <td>.json</td>
      <td>Data exchange</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">application/xml</code></td>
      <td>.xml</td>
      <td>Configuration, data interchange</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">application/octet-stream</code></td>
      <td>(various)</td>
      <td>Generic binary data</td>
    </tr>
    <tr>
      <td><strong>Sensor/IoT Data</strong></td>
      <td><code class="language-plaintext highlighter-rouge">application/json</code></td>
      <td>.json</td>
      <td>Sensor readings</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">application/vnd.geo+json</code></td>
      <td>.geojson</td>
      <td>Geospatial data</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="language-plaintext highlighter-rouge">message/mqtt</code></td>
      <td>N/A</td>
      <td>MQTT messages</td>
    </tr>
    <tr>
      <td> </td>
      <td>Often custom types</td>
      <td>Varies</td>
      <td>Dependent on specific sensor and application</td>
    </tr>
  </tbody>
</table>]]></content><author><name></name></author><category term="software" /><summary type="html"><![CDATA[Category MIME Type File Extension(s) Example Text &amp; Documents text/plain .txt, .log Code, logs, configuration files   text/csv .csv Spreadsheets, data exchange   application/msword .doc, .docx Microsoft Word documents   application/vnd.openxmlformats-officedocument.wordprocessingml.document .docx Modern Word documents   application/vnd.oasis.opendocument.text .odt OpenDocument Text   application/pdf .pdf Documents, reports   text/html .html, .htm Web pages, email content   text/markdown .md Documentation, writing   application/rtf .rtf Rich Text Format Spreadsheets application/vnd.ms-excel .xls Microsoft Excel (older)   application/vnd.openxmlformats-officedocument.spreadsheetml.sheet .xlsx Microsoft Excel (modern) Images image/jpeg .jpg, .jpeg Photos, web graphics   image/png .png Graphics with transparency   image/gif .gif Animated images   image/webp .webp Web images   image/heic .heic Images from Apple devices Audio audio/mpeg .mp3 Music, audio files   audio/wav .wav Uncompressed audio   audio/ogg .ogg Ogg Vorbis audio   audio/aac .aac Advanced Audio Coding   audio/flac .flac Lossless audio Video video/mp4 .mp4 Video files   video/webm .webm Web video   video/x-matroska .mkv Matroska video container Archives application/zip .zip Compressed archives   application/x-gzip .gz Gzip compressed files   application/x-tar .tar Tar archives Web Content text/css .css Cascading Style Sheets   application/javascript .js JavaScript code Application Data application/json .json Data exchange   application/xml .xml Configuration, data interchange   application/octet-stream (various) Generic binary data Sensor/IoT Data application/json .json Sensor readings   application/vnd.geo+json .geojson Geospatial data   message/mqtt N/A MQTT messages   Often custom types Varies Dependent on specific sensor and application]]></summary></entry><entry><title type="html">iOS Shortcut for Linux Remote Clipboard Management and Script Execution (thermal printer)</title><link href="https://ib.bsb.br/ios-shortcut-for-linux-remote-clipboard-management-and-script-execution-thermal-printer/" rel="alternate" type="text/html" title="iOS Shortcut for Linux Remote Clipboard Management and Script Execution (thermal printer)" /><published>2024-10-26T00:00:00+00:00</published><updated>2024-10-26T21:45:53+00:00</updated><id>https://ib.bsb.br/ios-shortcut-for-linux-remote-clipboard-management-and-script-execution-thermal-printer</id><content type="html" xml:base="https://ib.bsb.br/ios-shortcut-for-linux-remote-clipboard-management-and-script-execution-thermal-printer/"><![CDATA[<p>This document provides a comprehensive guide to creating an iOS Shortcut that uses a-Shell to copy text to a remote Debian server’s clipboard and execute a script named <code class="language-plaintext highlighter-rouge">thermal.sh</code>.</p>

<h2 id="introduction">Introduction</h2>

<p>This solution leverages a-Shell, SSH, and a bash script to automate tasks on a remote Debian server.  It addresses potential issues like dependency management, error handling, and user feedback through notifications.</p>

<h2 id="prerequisites">Prerequisites</h2>

<ul>
  <li>An iPhone with a-Shell installed.</li>
  <li>A Debian server with SSH access enabled.</li>
  <li>Basic familiarity with SSH key management.</li>
</ul>

<h2 id="debian-server-setup">Debian Server Setup</h2>

<ol>
  <li><strong>Install <code class="language-plaintext highlighter-rouge">xclip</code>:</strong>
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt update
<span class="nb">sudo </span>apt <span class="nb">install </span>xclip <span class="nt">-y</span>
</code></pre></div>    </div>
  </li>
  <li><strong>Identify <code class="language-plaintext highlighter-rouge">thermal.sh</code> Path:</strong> Locate the full path to your <code class="language-plaintext highlighter-rouge">thermal.sh</code> script.  This will be used in the a-Shell script.  For example, if the script is located in your home directory, the path would be <code class="language-plaintext highlighter-rouge">/home/yourusername/thermal.sh</code>.  Replace <code class="language-plaintext highlighter-rouge">/path/to/thermal.sh</code> in the script below with your actual path.  Ensure the script has execute permissions: <code class="language-plaintext highlighter-rouge">chmod +x /path/to/thermal.sh</code>.</li>
</ol>

<h2 id="ssh-configuration">SSH Configuration</h2>

<p>This guide assumes you have SSH key-based authentication set up. If not, follow these steps:</p>

<ol>
  <li><strong>Generate SSH Key Pair (on your iPhone in a-Shell):</strong>
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh-keygen <span class="nt">-t</span> rsa
</code></pre></div>    </div>
  </li>
  <li><strong>Copy Public Key to Server:</strong>
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh-copy-id yourusername@debian-server
</code></pre></div>    </div>
  </li>
  <li><strong>Test SSH Connection:</strong>
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh yourusername@debian-server
</code></pre></div>    </div>
  </li>
</ol>

<h2 id="a-shell-script">a-Shell Script</h2>

<p>Create a new script in a-Shell named <code class="language-plaintext highlighter-rouge">remote_control.sh</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat</span> <span class="o">&gt;</span> ~/.shortcuts/remote_control.sh <span class="o">&lt;&lt;</span> <span class="sh">'</span><span class="no">EOL</span><span class="sh">'
#!/bin/bash

# Configuration (Update with your actual path)
THERMAL_SCRIPT_PATH="/path/to/thermal.sh"

# Function to display notification in a-Shell (Improved)
show_notification() {
    local message="</span><span class="nv">$1</span><span class="sh">"
    echo "</span><span class="se">\$</span><span class="sh">message" &gt;&amp;2  # Print to stderr for visibility in a-Shell
}

# Function to run command with error handling
run_command() {
    local command="</span><span class="nv">$1</span><span class="sh">"
    local error_message="</span><span class="nv">$2</span><span class="sh">"
    if ! eval "</span><span class="nv">$command</span><span class="sh">"; then
        show_notification "Error: </span><span class="se">\$</span><span class="sh">error_message"
        exit 1
    fi
}

# Main execution
TEXT_CONTENT="</span><span class="nv">$1</span><span class="sh">"

# Check if text content is provided
if [ -z "</span><span class="nv">$TEXT_CONTENT</span><span class="sh">" ]; then
    show_notification "Error: No text content provided."
    exit 1
fi

# SSH command with error handling and escaping
run_command "ssh debian-server </span><span class="se">\"</span><span class="sh">echo </span><span class="se">\\\"\$</span><span class="sh">TEXT_CONTENT</span><span class="se">\\\"</span><span class="sh"> | xclip -selection clipboard</span><span class="se">\"</span><span class="sh">" "Failed to copy to clipboard."
run_command "ssh debian-server </span><span class="se">\"</span><span class="sh">bash -c </span><span class="se">\\\"</span><span class="nv">$THERMAL_SCRIPT_PATH</span><span class="se">\\\"\"</span><span class="sh">" "Failed to execute thermal.sh."

show_notification "Success: Operations completed successfully."
</span><span class="no">
EOL
</span><span class="nb">chmod</span> +x ~/.shortcuts/remote_control.sh
</code></pre></div></div>

<h2 id="ios-shortcut-setup">iOS Shortcut Setup</h2>

<ol>
  <li>Open the Shortcuts app.</li>
  <li>Create a new shortcut.</li>
  <li>Add “Text” action and set variable name to <code class="language-plaintext highlighter-rouge">clipboardText</code>.</li>
  <li>Add “Run a-Shell Script” action.</li>
  <li>Set the command to: <code class="language-plaintext highlighter-rouge">~/.shortcuts/remote_control.sh "{Shortcut Input}"</code>.</li>
  <li>Add “Show Notification” action to display the output of the a-Shell script.</li>
</ol>

<p><em>(Ideally, include screenshots of each step here)</em></p>

<h2 id="testing-and-verification">Testing and Verification</h2>

<ol>
  <li>Run the shortcut with some sample text.</li>
  <li>Verify that the text is copied to the Debian server’s clipboard.</li>
  <li>Check that <code class="language-plaintext highlighter-rouge">thermal.sh</code> executes correctly.</li>
  <li>Observe the success/failure notification.</li>
</ol>

<h2 id="troubleshooting">Troubleshooting</h2>

<ul>
  <li><strong>SSH Connection Issues:</strong> Verify SSH configuration and key setup.</li>
  <li><strong><code class="language-plaintext highlighter-rouge">xclip</code> Issues:</strong> Ensure <code class="language-plaintext highlighter-rouge">xclip</code> is installed and functioning correctly on the Debian server.</li>
  <li><strong><code class="language-plaintext highlighter-rouge">thermal.sh</code> Issues:</strong> Check the script’s path, permissions, and logic.</li>
  <li><strong>Notification Issues:</strong> Review the notification settings in the shortcut and a-Shell.</li>
</ul>]]></content><author><name></name></author><category term="iphone&gt;shortcuts," /><category term="linux" /><summary type="html"><![CDATA[This document provides a comprehensive guide to creating an iOS Shortcut that uses a-Shell to copy text to a remote Debian server’s clipboard and execute a script named thermal.sh.]]></summary></entry><entry><title type="html">Simon says: Documentation</title><link href="https://ib.bsb.br/simon-says-documentation/" rel="alternate" type="text/html" title="Simon says: Documentation" /><published>2024-10-26T00:00:00+00:00</published><updated>2024-10-26T21:09:23+00:00</updated><id>https://ib.bsb.br/simon-says-documentation</id><content type="html" xml:base="https://ib.bsb.br/simon-says-documentation/"><![CDATA[<section data-filename="markdown_code-block.md" data-code="**Task Overview:**
You are required to analyze and organize unstructured project data to create comprehensive and effective documentation that ensures project and task maintainability. The goal is to transform the provided unstructured data into well-organized, detailed documentation that can be easily understood and used for future reference, even after significant downtime or by third parties unfamiliar with the project.
---
**Instructions:**
Please follow the steps below carefully to analyze and organize the data:
---
**1. Data Review and Key Elements Identification:**
- **Thoroughly review** the unstructured project data provided.
- **Identify and extract** key elements that need documentation, such as:
- **Background** information of the project.
- **Current state** and progress of the project.
- **Relevant resources** and references.
- **Design considerations** and decision-making processes.
- **Screenshots or demos** illustrating features or issues.
- **Timestamps** of significant events or changes.
- **Implementation details** including code snippets or algorithms.
- **Testing information** and results.
- **Documentation updates** and version history.
- **Causality chain** explaining the reasoning behind information (What does the information consist of? Why is it important?).
---
**2. Application of Documentation Principles:**
- **Apply the following core documentation principles** to each piece of extracted information:
- **Causality Chain Initiation:** Ensure every change or piece of information originates from a clear causality chain.
- **Contextual Documentation:** Recognize that documentation must be relevant to its context within the project.
- **Validation Through Testing:** Validate information through appropriate testing procedures.
- **Integration of Implementation and Testing:** Include both implementation details and testing results in the final documentation.
---
**3. Organization of Information:**
- **Document All Details:** Record all relevant information to eliminate reliance on memory.
- **Structure Projects with Tests First:** Begin documentation with testing procedures and results.
- **Link Back to Causality:** Ensure all documentation connects back to the original issues and their causality.
- **Prepare for Third-Party Maintenance:** Organize documentation with the assumption that third parties will maintain the project.
- **Use Unit Tests for Documentation Coverage:** Implement unit tests to verify that documentation is complete and accurate.
- **Maintain Deployability:** Ensure that the documentation supports the project's ability to be deployed smoothly.
- **Focus on Actual Implementations:** Document what has been built and implemented, rather than theoretical plans.
---
**4. Implementation of Recommendations:**
- **Incorporate the following recommendations** to enhance documentation and project maintainability:
- **Effective Structuring of Issue Documentation**
- **Creation and Maintenance of Comprehensive Documentation**
- **Ensuring Permanency and Scalability in Documentation**
- **Implementation of Documentation Unit Tests**
- **Horizontal Scaling of Project Management through Efficient Documentation**
---
**5. Creation of a Detailed Paper Trail:**
- **Maintain an extensive record** of all decisions and changes made during this process.
- **Justify each decision** based on the provided data.
- **Ensure traceability** so that anyone can understand the reasoning behind each decision.
---
**Output Format:**
Present your findings and organized documentation in the following structured format:
```markdown
&lt;analysis&gt;
1. **Initial Data Review:**
- [Provide extensive documentation of key points extracted from the unstructured data.]
2. **Identification of Elements:**
- [List each key element to be documented, numbered sequentially.]
3. **Application of Documentation Principles:**
- [Explain how each piece of information aligns with the core documentation principles.]
4. **Organization Process:**
- [Outline the step-by-step approach taken to categorize and structure the information.]
5. **Implementation of Recommendations:**
- [Detail how each recommendation was implemented based on the analyzed data and its impact on project maintainability.]
&lt;/analysis&gt;
&lt;organized_information&gt;
&lt;data&gt;
[Provide a detailed list of the organized data.]
&lt;/data&gt;
&lt;documentation&gt;
[Present the final documentation entries, thoroughly detailing each aspect without placeholders or unnecessary commentary.]
&lt;/documentation&gt;
&lt;/organized_information&gt;
&lt;paper_trail&gt;
[Include a clear and extensive record of decisions and changes made, justifying each based on the provided data.]
&lt;/paper_trail&gt;
```
---
**Example:**
*Note: This example uses placeholder data to illustrate the expected output format.*
```markdown
&lt;analysis&gt;
1. **Initial Data Review:**
- The project currently lacks centralized documentation.
- Recent code updates have introduced new features not documented.
- Testing procedures are inconsistent and not fully recorded.
2. **Identification of Elements:**
1. Centralized documentation system establishment.
2. Documentation of new features added.
3. Standardization of testing procedures.
4. Implementation details of recent updates.
5. Background context for project decisions.
3. **Application of Documentation Principles:**
- **Causality Chain Initiation:** Identified missing documentation leading to confusion and errors.
- **Contextual Documentation:** Ensured new features are documented within the context of the overall system.
- **Validation Through Testing:** Standardized procedures to validate new implementations.
- **Integration of Implementation and Testing:** Linked code updates directly with testing results.
4. **Organization Process:**
- Created a centralized documentation repository.
- Developed templates for feature documentation and testing results.
- Categorized information based on functionality and relevance.
- Linked all documentation entries back to specific changes or updates.
5. **Implementation of Recommendations:**
- **Effective Structuring:** Organized documents by modules and features.
- **Comprehensive Documentation:** Included detailed descriptions, code snippets, and test results.
- **Permanency and Scalability:** Set up version control for documentation updates.
- **Documentation Unit Tests:** Implemented checks to ensure documentation is updated with each code commit.
- **Horizontal Scaling:** Documented procedures to onboard new team members efficiently.
&lt;/analysis&gt;
&lt;organized_information&gt;
&lt;data&gt;
- Established `/docs` directory for all documentation.
- Documented new features: Feature A, Feature B.
- Standardized testing procedures outlined in `/docs/testing.md`.
- Provided background context in `/docs/background.md`.
- Recorded implementation details in `/docs/implementation.md`.
&lt;/data&gt;
&lt;documentation&gt;
- **Feature A Documentation:** Includes purpose, implementation details, usage examples, and test results.
- **Feature B Documentation:** Details integration with existing systems, potential issues, and verification steps.
- **Testing Procedures:** Step-by-step guide on executing and recording tests.
- **Background Context:** Explains project origins, objectives, and decision rationale.
- **Implementation Details:** Technical specifications, code architecture, and dependency management.
&lt;/documentation&gt;
&lt;/organized_information&gt;
&lt;paper_trail&gt;
- **Decision to Centralize Documentation:** Based on confusion from team members due to scattered information.
- **Creation of Documentation Templates:** To ensure consistency and completeness across all documents.
- **Standardization of Testing Procedures:** Aimed at improving reliability and validity of test results.
- **Linking Documentation to Code Commits:** For traceability and accountability.
- **Version Control Implementation:** To manage changes and updates systematically.
&lt;/paper_trail&gt;
```
---
**Final Notes:**
- **Replace the placeholder data and examples** with information extracted from the provided unstructured project data.
- **Ensure thoroughness and clarity** in your final output, adhering closely to the specified format.
- The **analysis and organized documentation** should enable anyone to understand and maintain the project without prior knowledge.
---
**Unstructured Project Data:**
Please analyze the following unstructured project data:
~~~
~~~" data-download-link="" data-download-link-label="Download Markdown"><code class="language-markdown">**Task Overview:**
You are required to analyze and organize unstructured project data to create comprehensive and effective documentation that ensures project and task maintainability. The goal is to transform the provided unstructured data into well-organized, detailed documentation that can be easily understood and used for future reference, even after significant downtime or by third parties unfamiliar with the project.
---
**Instructions:**
Please follow the steps below carefully to analyze and organize the data:
---
**1. Data Review and Key Elements Identification:**
- **Thoroughly review** the unstructured project data provided.
- **Identify and extract** key elements that need documentation, such as:
- **Background** information of the project.
- **Current state** and progress of the project.
- **Relevant resources** and references.
- **Design considerations** and decision-making processes.
- **Screenshots or demos** illustrating features or issues.
- **Timestamps** of significant events or changes.
- **Implementation details** including code snippets or algorithms.
- **Testing information** and results.
- **Documentation updates** and version history.
- **Causality chain** explaining the reasoning behind information (What does the information consist of? Why is it important?).
---
**2. Application of Documentation Principles:**
- **Apply the following core documentation principles** to each piece of extracted information:
- **Causality Chain Initiation:** Ensure every change or piece of information originates from a clear causality chain.
- **Contextual Documentation:** Recognize that documentation must be relevant to its context within the project.
- **Validation Through Testing:** Validate information through appropriate testing procedures.
- **Integration of Implementation and Testing:** Include both implementation details and testing results in the final documentation.
---
**3. Organization of Information:**
- **Document All Details:** Record all relevant information to eliminate reliance on memory.
- **Structure Projects with Tests First:** Begin documentation with testing procedures and results.
- **Link Back to Causality:** Ensure all documentation connects back to the original issues and their causality.
- **Prepare for Third-Party Maintenance:** Organize documentation with the assumption that third parties will maintain the project.
- **Use Unit Tests for Documentation Coverage:** Implement unit tests to verify that documentation is complete and accurate.
- **Maintain Deployability:** Ensure that the documentation supports the project's ability to be deployed smoothly.
- **Focus on Actual Implementations:** Document what has been built and implemented, rather than theoretical plans.
---
**4. Implementation of Recommendations:**
- **Incorporate the following recommendations** to enhance documentation and project maintainability:
- **Effective Structuring of Issue Documentation**
- **Creation and Maintenance of Comprehensive Documentation**
- **Ensuring Permanency and Scalability in Documentation**
- **Implementation of Documentation Unit Tests**
- **Horizontal Scaling of Project Management through Efficient Documentation**
---
**5. Creation of a Detailed Paper Trail:**
- **Maintain an extensive record** of all decisions and changes made during this process.
- **Justify each decision** based on the provided data.
- **Ensure traceability** so that anyone can understand the reasoning behind each decision.
---
**Output Format:**
Present your findings and organized documentation in the following structured format:
```markdown
<analysis>
1. **Initial Data Review:**
- [Provide extensive documentation of key points extracted from the unstructured data.]
2. **Identification of Elements:**
- [List each key element to be documented, numbered sequentially.]
3. **Application of Documentation Principles:**
- [Explain how each piece of information aligns with the core documentation principles.]
4. **Organization Process:**
- [Outline the step-by-step approach taken to categorize and structure the information.]
5. **Implementation of Recommendations:**
- [Detail how each recommendation was implemented based on the analyzed data and its impact on project maintainability.]
</analysis>
<organized_information>
<data>
[Provide a detailed list of the organized data.]
</data>
<documentation>
[Present the final documentation entries, thoroughly detailing each aspect without placeholders or unnecessary commentary.]
</documentation>
</organized_information>
<paper_trail>
[Include a clear and extensive record of decisions and changes made, justifying each based on the provided data.]
</paper_trail>
```
---
**Example:**
*Note: This example uses placeholder data to illustrate the expected output format.*
```markdown
<analysis>
1. **Initial Data Review:**
- The project currently lacks centralized documentation.
- Recent code updates have introduced new features not documented.
- Testing procedures are inconsistent and not fully recorded.
2. **Identification of Elements:**
1. Centralized documentation system establishment.
2. Documentation of new features added.
3. Standardization of testing procedures.
4. Implementation details of recent updates.
5. Background context for project decisions.
3. **Application of Documentation Principles:**
- **Causality Chain Initiation:** Identified missing documentation leading to confusion and errors.
- **Contextual Documentation:** Ensured new features are documented within the context of the overall system.
- **Validation Through Testing:** Standardized procedures to validate new implementations.
- **Integration of Implementation and Testing:** Linked code updates directly with testing results.
4. **Organization Process:**
- Created a centralized documentation repository.
- Developed templates for feature documentation and testing results.
- Categorized information based on functionality and relevance.
- Linked all documentation entries back to specific changes or updates.
5. **Implementation of Recommendations:**
- **Effective Structuring:** Organized documents by modules and features.
- **Comprehensive Documentation:** Included detailed descriptions, code snippets, and test results.
- **Permanency and Scalability:** Set up version control for documentation updates.
- **Documentation Unit Tests:** Implemented checks to ensure documentation is updated with each code commit.
- **Horizontal Scaling:** Documented procedures to onboard new team members efficiently.
</analysis>
<organized_information>
<data>
- Established `/docs` directory for all documentation.
- Documented new features: Feature A, Feature B.
- Standardized testing procedures outlined in `/docs/testing.md`.
- Provided background context in `/docs/background.md`.
- Recorded implementation details in `/docs/implementation.md`.
</data>
<documentation>
- **Feature A Documentation:** Includes purpose, implementation details, usage examples, and test results.
- **Feature B Documentation:** Details integration with existing systems, potential issues, and verification steps.
- **Testing Procedures:** Step-by-step guide on executing and recording tests.
- **Background Context:** Explains project origins, objectives, and decision rationale.
- **Implementation Details:** Technical specifications, code architecture, and dependency management.
</documentation>
</organized_information>
<paper_trail>
- **Decision to Centralize Documentation:** Based on confusion from team members due to scattered information.
- **Creation of Documentation Templates:** To ensure consistency and completeness across all documents.
- **Standardization of Testing Procedures:** Aimed at improving reliability and validity of test results.
- **Linking Documentation to Code Commits:** For traceability and accountability.
- **Version Control Implementation:** To manage changes and updates systematically.
</paper_trail>
```
---
**Final Notes:**
- **Replace the placeholder data and examples** with information extracted from the provided unstructured project data.
- **Ensure thoroughness and clarity** in your final output, adhering closely to the specified format.
- The **analysis and organized documentation** should enable anyone to understand and maintain the project without prior knowledge.
---
**Unstructured Project Data:**
Please analyze the following unstructured project data:
~~~
~~~</code></section>]]></content><author><name></name></author><category term="AI&gt;prompt" /><summary type="html"><![CDATA[**Task Overview:**]]></summary></entry><entry><title type="html">SSH between Linux and iPhone via a-Shell</title><link href="https://ib.bsb.br/ssh-between-linux-and-iphone-via-a-shell/" rel="alternate" type="text/html" title="SSH between Linux and iPhone via a-Shell" /><published>2024-10-26T00:00:00+00:00</published><updated>2024-10-26T21:04:13+00:00</updated><id>https://ib.bsb.br/ssh-between-linux-and-iphone-via-a-shell</id><content type="html" xml:base="https://ib.bsb.br/ssh-between-linux-and-iphone-via-a-shell/"><![CDATA[<h1 id="analysis">analysis</h1>
<ol>
  <li><strong>Initial Data Review:</strong>
    <ul>
      <li>The project aims to establish secure SSH connectivity between a Debian machine and an iPhone using the a-Shell terminal emulator.</li>
      <li>On the <strong>Debian machine</strong>, key actions include:
        <ul>
          <li>Updating and securing the system.</li>
          <li>Installing and configuring the OpenSSH server with security best practices.</li>
          <li>Creating a regular user account for SSH access.</li>
          <li>Setting up firewall rules to allow SSH while minimizing exposure.</li>
          <li>Implementing proper file permissions and ownership.</li>
          <li>Addressing troubleshooting steps for SSH connectivity issues.</li>
        </ul>
      </li>
      <li>On the <strong>iPhone a-Shell</strong>, tasks involve:
        <ul>
          <li>Generating an SSH key pair with appropriate security considerations.</li>
          <li>Configuring the SSH client, taking into account iOS sandboxing constraints.</li>
          <li>Adjusting file paths due to the nature of the iOS file system.</li>
          <li>Testing the SSH connection and resolving any arising issues.</li>
        </ul>
      </li>
      <li>The unstructured data captures multiple configuration attempts and problem-solving strategies, reflecting practical challenges in SSH setup between different operating systems.</li>
    </ul>
  </li>
  <li><strong>Identification of Elements:</strong>
    <ol>
      <li>System update and OpenSSH server installation on Debian with security considerations.</li>
      <li>Secure SSH server configuration on Debian.</li>
      <li>Creation of a non-root user for SSH access.</li>
      <li>Proper setup of <code class="language-plaintext highlighter-rouge">.ssh</code> directories and permissions on Debian.</li>
      <li>SSH key generation on iPhone a-Shell with security advisement.</li>
      <li>Secure transfer of the public key to the Debian machine.</li>
      <li>SSH client configuration on iPhone a-Shell, considering iOS sandboxed environment.</li>
      <li>Firewall setup using UFW on Debian with security best practices.</li>
      <li>Verification and troubleshooting of SSH connectivity.</li>
      <li>Adjustments for iOS file paths due to sandboxing.</li>
      <li>Emphasis on security best practices throughout the configuration process.</li>
    </ol>
  </li>
  <li><strong>Application of Documentation Principles:</strong>
    <ul>
      <li><strong>Causality Chain Initiation:</strong> Each configuration step is directly linked to a specific requirement or issue, ensuring actions have clear justifications.</li>
      <li><strong>Contextual Documentation:</strong> Instructions are tailored to the Debian and iOS environments, providing context-specific guidance.</li>
      <li><strong>Validation Through Testing:</strong> Each configuration change is followed by testing to confirm effectiveness and identify potential issues.</li>
      <li><strong>Integration of Implementation and Testing:</strong> The documentation combines configuration steps with immediate verification, reinforcing the learning and troubleshooting process.</li>
    </ul>
  </li>
  <li><strong>Organization of Information:</strong>
    <ul>
      <li>Documentation is divided into sections based on the system (Debian or iPhone) and tasks are presented in logical order.</li>
      <li>Related tasks are grouped together to enhance clarity.</li>
      <li>Steps are sequential, minimizing back-and-forth between systems.</li>
      <li>Security considerations are integrated throughout the documentation.</li>
      <li>Troubleshooting steps are included alongside relevant configuration actions.</li>
    </ul>
  </li>
  <li><strong>Implementation of Recommendations:</strong>
    <ul>
      <li><strong>Effective Structuring of Issue Documentation:</strong> Clear headings and numbered steps facilitate easy navigation.</li>
      <li><strong>Creation and Maintenance of Comprehensive Documentation:</strong> Detailed explanations and commands ensure completeness.</li>
      <li><strong>Ensuring Permanency and Scalability in Documentation:</strong> Best practices and scalable configurations are emphasized.</li>
      <li><strong>Implementation of Documentation Unit Tests:</strong> Verification steps confirm the correctness of configurations.</li>
      <li><strong>Horizontal Scaling of Project Management through Efficient Documentation:</strong> The documentation is accessible to users with varying levels of expertise, supporting broader project maintenance.</li>
    </ul>
  </li>
</ol>

<h1 id="organized_information">organized_information</h1>
<h1 id="data">data</h1>
<ol>
  <li><strong>System Update and Secure Installation of OpenSSH Server on Debian:</strong>
    <ul>
      <li>Update system packages:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">sudo apt update &amp;&amp; sudo apt upgrade -y</code></li>
        </ul>
      </li>
      <li>Install OpenSSH server:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">sudo apt install openssh-server -y</code></li>
        </ul>
      </li>
      <li>Verify the SSH service is active:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">sudo systemctl status ssh</code></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>Secure SSH Server Configuration on Debian:</strong>
    <ul>
      <li>Backup existing SSH configuration:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config.backup</code></li>
        </ul>
      </li>
      <li>Edit SSH configuration file:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">sudo nano /etc/ssh/sshd_config</code></li>
          <li>Key settings:
            <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>PermitRootLogin no
PubkeyAuthentication yes
PasswordAuthentication no
ChallengeResponseAuthentication no
UsePAM yes
AddressFamily inet
</code></pre></div>            </div>
          </li>
        </ul>
      </li>
      <li>Restart SSH service to apply changes:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">sudo systemctl restart ssh</code></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>Create a Non-Root User for SSH Access on Debian:</strong>
    <ul>
      <li>Add a new user:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">sudo adduser username</code></li>
        </ul>
      </li>
      <li>Grant sudo privileges if needed:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">sudo usermod -aG sudo username</code></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>Set Up SSH Directory and Permissions for the User on Debian:</strong>
    <ul>
      <li>Switch to the new user:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">sudo su - username</code></li>
        </ul>
      </li>
      <li>Create <code class="language-plaintext highlighter-rouge">.ssh</code> directory:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">mkdir ~/.ssh</code></li>
          <li><code class="language-plaintext highlighter-rouge">chmod 700 ~/.ssh</code></li>
        </ul>
      </li>
      <li>Create <code class="language-plaintext highlighter-rouge">authorized_keys</code> file:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">touch ~/.ssh/authorized_keys</code></li>
          <li><code class="language-plaintext highlighter-rouge">chmod 600 ~/.ssh/authorized_keys</code></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>Generate SSH Key Pair on iPhone a-Shell:</strong>
    <ul>
      <li>Generate key pair with a passphrase:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">ssh-keygen -t rsa -b 4096</code></li>
        </ul>
      </li>
      <li>Store keys in the default location.</li>
      <li>Protect private key with a passphrase for enhanced security.</li>
    </ul>
  </li>
  <li><strong>Transfer Public Key to Debian Machine Securely:</strong>
    <ul>
      <li>Display public key on iPhone:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">cat ~/.ssh/id_rsa.pub</code></li>
        </ul>
      </li>
      <li>On Debian, add the public key to <code class="language-plaintext highlighter-rouge">authorized_keys</code>:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">nano ~/.ssh/authorized_keys</code></li>
          <li>Paste the public key content.</li>
          <li>Save and exit.</li>
        </ul>
      </li>
      <li>Set correct permissions:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">chmod 600 ~/.ssh/authorized_keys</code></li>
        </ul>
      </li>
      <li>Ensure ownership:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">chown username:username ~/.ssh/authorized_keys</code></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>Configure SSH Client on iPhone a-Shell Considering iOS Sandboxing:</strong>
    <ul>
      <li>Check home directory:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">echo $HOME</code></li>
        </ul>
      </li>
      <li>Create SSH config file:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">nano ~/.ssh/config</code></li>
        </ul>
      </li>
      <li>Add configuration:
        <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Host debian-server
    HostName YOUR_DEBIAN_IP_ADDRESS
    User username
    IdentityFile /path/to/private/key
    ServerAliveInterval 60
    ServerAliveCountMax 3
</code></pre></div>        </div>
        <ul>
          <li>Replace <code class="language-plaintext highlighter-rouge">/path/to/private/key</code> with the accurate path, considering iOS’s file system.</li>
        </ul>
      </li>
      <li>Set permissions:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">chmod 600 ~/.ssh/config</code></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>Configure Firewall on Debian with UFW:</strong>
    <ul>
      <li>Install UFW:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">sudo apt install ufw -y</code></li>
        </ul>
      </li>
      <li>Allow SSH connections:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">sudo ufw allow ssh</code></li>
        </ul>
      </li>
      <li>Enable UFW:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">sudo ufw enable</code></li>
        </ul>
      </li>
      <li>Verify status:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">sudo ufw status</code></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>Verify and Troubleshoot SSH Connectivity:</strong>
    <ul>
      <li>Test SSH connection from iPhone:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">ssh debian-server</code></li>
        </ul>
      </li>
      <li>For detailed output:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">ssh -vv debian-server</code></li>
        </ul>
      </li>
      <li>On Debian, check SSH service status and logs if issues arise:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">sudo systemctl status ssh</code></li>
          <li><code class="language-plaintext highlighter-rouge">sudo journalctl -u ssh</code></li>
          <li><code class="language-plaintext highlighter-rouge">sudo tail /var/log/auth.log</code></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>Adjust File Paths on iPhone Due to iOS Sandbox Environment:</strong>
    <ul>
      <li>iOS apps have unique data directories; ensure the <code class="language-plaintext highlighter-rouge">IdentityFile</code> path in SSH config matches the actual private key location.</li>
      <li>Use commands like <code class="language-plaintext highlighter-rouge">pwd</code> and <code class="language-plaintext highlighter-rouge">ls</code> to determine the correct paths.</li>
    </ul>
  </li>
  <li><strong>Emphasize Security Best Practices Throughout:</strong>
    <ul>
      <li>Use strong, passphrase-protected SSH keys.</li>
      <li>Keep all software up to date.</li>
      <li>Monitor access logs regularly.</li>
      <li>Consider additional security measures like Fail2Ban.</li>
    </ul>
  </li>
</ol>

<h1 id="documentation">documentation</h1>
<h3 id="secure-ssh-connection-between-debian-and-iphone-using-a-shell"><strong>Secure SSH Connection Between Debian and iPhone Using a-Shell</strong></h3>

<h4 id="1-update-and-secure-debian-system"><strong>1. Update and Secure Debian System</strong></h4>

<h5 id="11-update-system-packages"><strong>1.1 Update System Packages</strong></h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt update <span class="o">&amp;&amp;</span> <span class="nb">sudo </span>apt upgrade <span class="nt">-y</span>
</code></pre></div></div>

<h5 id="12-install-openssh-server"><strong>1.2 Install OpenSSH Server</strong></h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>openssh-server <span class="nt">-y</span>
</code></pre></div></div>

<h5 id="13-verify-ssh-service"><strong>1.3 Verify SSH Service</strong></h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl status ssh
</code></pre></div></div>

<ul>
  <li>Ensure the SSH service is active and enabled.</li>
</ul>

<h4 id="2-configure-ssh-server-with-security-best-practices"><strong>2. Configure SSH Server with Security Best Practices</strong></h4>

<h5 id="21-backup-ssh-configuration"><strong>2.1 Backup SSH Configuration</strong></h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo cp</span> /etc/ssh/sshd_config /etc/ssh/sshd_config.backup
</code></pre></div></div>

<h5 id="22-edit-ssh-configuration"><strong>2.2 Edit SSH Configuration</strong></h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>nano /etc/ssh/sshd_config
</code></pre></div></div>

<ul>
  <li>
    <p>Update the following settings:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>PermitRootLogin no
PubkeyAuthentication yes
PasswordAuthentication no
ChallengeResponseAuthentication no
UsePAM yes
AddressFamily inet
</code></pre></div>    </div>
  </li>
  <li>
    <p>Save and exit the editor.</p>
  </li>
</ul>

<h5 id="23-restart-ssh-service"><strong>2.3 Restart SSH Service</strong></h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl restart ssh
</code></pre></div></div>

<h4 id="3-create-a-non-root-user-account"><strong>3. Create a Non-Root User Account</strong></h4>

<h5 id="31-add-new-user"><strong>3.1 Add New User</strong></h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>adduser username
</code></pre></div></div>

<ul>
  <li>Replace <code class="language-plaintext highlighter-rouge">username</code> with your chosen username.</li>
  <li>Follow prompts to set a password and user details.</li>
</ul>

<h5 id="32-grant-sudo-privileges-optional"><strong>3.2 Grant Sudo Privileges (Optional)</strong></h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>usermod <span class="nt">-aG</span> <span class="nb">sudo </span>username
</code></pre></div></div>

<h4 id="4-set-up-ssh-access-for-the-new-user"><strong>4. Set Up SSH Access for the New User</strong></h4>

<h5 id="41-switch-to-new-user"><strong>4.1 Switch to New User</strong></h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>su - username
</code></pre></div></div>

<h5 id="42-create-ssh-directory"><strong>4.2 Create <code class="language-plaintext highlighter-rouge">.ssh</code> Directory</strong></h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir</span> ~/.ssh
<span class="nb">chmod </span>700 ~/.ssh
</code></pre></div></div>

<h5 id="43-create-authorized_keys-file"><strong>4.3 Create <code class="language-plaintext highlighter-rouge">authorized_keys</code> File</strong></h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">touch</span> ~/.ssh/authorized_keys
<span class="nb">chmod </span>600 ~/.ssh/authorized_keys
</code></pre></div></div>

<h4 id="5-generate-ssh-key-pair-on-iphone-a-shell"><strong>5. Generate SSH Key Pair on iPhone a-Shell</strong></h4>

<h5 id="51-generate-ssh-keys"><strong>5.1 Generate SSH Keys</strong></h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh-keygen <span class="nt">-t</span> rsa <span class="nt">-b</span> 4096
</code></pre></div></div>

<ul>
  <li>Store keys in default location.</li>
  <li>Set a passphrase when prompted for added security.</li>
</ul>

<h5 id="52-display-public-key"><strong>5.2 Display Public Key</strong></h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat</span> ~/.ssh/id_rsa.pub
</code></pre></div></div>

<ul>
  <li>Copy the entire output for the next step.</li>
</ul>

<h4 id="6-transfer-public-key-to-debian-machine"><strong>6. Transfer Public Key to Debian Machine</strong></h4>

<h5 id="61-add-public-key-to-authorized_keys"><strong>6.1 Add Public Key to <code class="language-plaintext highlighter-rouge">authorized_keys</code></strong></h5>

<ul>
  <li>
    <p>On Debian (logged in as the new user):</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nano ~/.ssh/authorized_keys
</code></pre></div>    </div>
  </li>
  <li>Paste the public key content into the file.</li>
  <li>Save and exit.</li>
</ul>

<h5 id="62-set-correct-permissions-and-ownership"><strong>6.2 Set Correct Permissions and Ownership</strong></h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">chmod </span>600 ~/.ssh/authorized_keys
<span class="nb">chown </span>username:username ~/.ssh/authorized_keys
</code></pre></div></div>

<h4 id="7-configure-ssh-client-on-iphone-a-shell"><strong>7. Configure SSH Client on iPhone a-Shell</strong></h4>

<h5 id="71-determine-home-directory-path"><strong>7.1 Determine Home Directory Path</strong></h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo</span> <span class="nv">$HOME</span>
</code></pre></div></div>

<ul>
  <li>Note the path for accurate configuration.</li>
</ul>

<h5 id="72-create-ssh-config-file"><strong>7.2 Create SSH Config File</strong></h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nano ~/.ssh/config
</code></pre></div></div>

<ul>
  <li>
    <p>Add the following content:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Host debian-server
    HostName YOUR_DEBIAN_IP_ADDRESS
    User username
    IdentityFile /path/to/id_rsa
    ServerAliveInterval 60
    ServerAliveCountMax 3
</code></pre></div>    </div>
  </li>
  <li>
    <p>Replace <code class="language-plaintext highlighter-rouge">/path/to/id_rsa</code> with the actual path to your private key, considering the iOS file system.</p>
  </li>
</ul>

<h5 id="73-set-permissions"><strong>7.3 Set Permissions</strong></h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">chmod </span>600 ~/.ssh/config
</code></pre></div></div>

<h4 id="8-configure-ufw-firewall-on-debian"><strong>8. Configure UFW Firewall on Debian</strong></h4>

<h5 id="81-install-ufw"><strong>8.1 Install UFW</strong></h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>ufw <span class="nt">-y</span>
</code></pre></div></div>

<h5 id="82-allow-ssh-through-firewall"><strong>8.2 Allow SSH Through Firewall</strong></h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>ufw allow OpenSSH
</code></pre></div></div>

<h5 id="83-enable-firewall"><strong>8.3 Enable Firewall</strong></h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>ufw <span class="nb">enable</span>
</code></pre></div></div>

<h5 id="84-verify-firewall-status"><strong>8.4 Verify Firewall Status</strong></h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>ufw status
</code></pre></div></div>

<h4 id="9-test-and-troubleshoot-ssh-connection"><strong>9. Test and Troubleshoot SSH Connection</strong></h4>

<h5 id="91-test-ssh-connection-from-iphone"><strong>9.1 Test SSH Connection from iPhone</strong></h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh debian-server
</code></pre></div></div>

<ul>
  <li>Enter the passphrase for your SSH key when prompted.</li>
</ul>

<h5 id="92-troubleshoot-if-necessary"><strong>9.2 Troubleshoot if Necessary</strong></h5>

<ul>
  <li>
    <p>Use verbose mode for detailed output:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh <span class="nt">-vv</span> debian-server
</code></pre></div>    </div>
  </li>
  <li>
    <p>On Debian, check SSH service and logs:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl status ssh
<span class="nb">sudo </span>journalctl <span class="nt">-u</span> ssh
<span class="nb">sudo tail</span> /var/log/auth.log
</code></pre></div>    </div>
  </li>
</ul>

<h4 id="10-adjust-for-ios-sandboxing-on-iphone-a-shell"><strong>10. Adjust for iOS Sandboxing on iPhone a-Shell</strong></h4>

<ul>
  <li>
    <p>If you encounter issues, verify the actual file paths:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">pwd
ls</span> <span class="nt">-la</span> ~/.ssh/
</code></pre></div>    </div>
  </li>
  <li>
    <p>Adjust <code class="language-plaintext highlighter-rouge">IdentityFile</code> in SSH config to the correct path.</p>
  </li>
</ul>

<h4 id="11-maintain-security-best-practices"><strong>11. Maintain Security Best Practices</strong></h4>

<ul>
  <li>
    <p><strong>Use Strong Passphrases:</strong></p>

    <ul>
      <li>Protect private keys with strong, unique passphrases.</li>
    </ul>
  </li>
  <li>
    <p><strong>Regularly Update Systems:</strong></p>

    <ul>
      <li>Keep both Debian and iPhone systems updated.</li>
    </ul>
  </li>
  <li>
    <p><strong>Monitor Access Logs:</strong></p>

    <ul>
      <li>Check logs for unauthorized access attempts.</li>
    </ul>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo tail</span> /var/log/auth.log
</code></pre></div>    </div>
  </li>
  <li>
    <p><strong>Consider Additional Security Measures:</strong></p>

    <ul>
      <li>
        <p>Implement tools like Fail2Ban.</p>
      </li>
      <li>
        <p>Limit SSH access by IP or use port knocking.</p>
      </li>
    </ul>
  </li>
  <li>
    <p><strong>Regularly Review SSH Configuration:</strong></p>

    <ul>
      <li>Ensure settings align with current security recommendations.</li>
    </ul>
  </li>
</ul>

<h1 id="paper_trail">paper_trail</h1>
<ul>
  <li>
    <p><strong>Disabled Root Login Over SSH:</strong> Set <code class="language-plaintext highlighter-rouge">PermitRootLogin no</code> in <code class="language-plaintext highlighter-rouge">sshd_config</code> to prevent direct root access, enhancing security. This aligns with best practices to reduce the risk of unauthorized root-level access.</p>
  </li>
  <li>
    <p><strong>Created Non-Root User for SSH Access:</strong> Established a regular user account to facilitate secure SSH connections. Providing <code class="language-plaintext highlighter-rouge">sudo</code> privileges allows administrative tasks without compromising security.</p>
  </li>
  <li>
    <p><strong>Emphasized Use of Passphrase-Protected SSH Keys:</strong> Encouraged setting a passphrase when generating SSH keys on the iPhone to add a layer of security in case the device is lost or compromised.</p>
  </li>
  <li>
    <p><strong>Adjusted SSH Client Configuration for iOS Sandboxing:</strong> Provided detailed instructions on identifying the correct file paths within the iOS sandbox environment to ensure the SSH client functions correctly.</p>
  </li>
  <li>
    <p><strong>Improved Documentation Structure and Clarity:</strong> Reordered steps for logical flow, grouped related tasks, and distinguished actions between devices and user contexts for better readability.</p>
  </li>
  <li>
    <p><strong>Highlighted Security Best Practices Throughout:</strong> Integrated security considerations into each step, including SSH configuration, key management, and firewall settings, to promote a secure implementation.</p>
  </li>
  <li>
    <p><strong>Provided Troubleshooting Guidance:</strong> Included commands and tips for diagnosing and resolving common SSH connectivity issues, aiding users in effective problem-solving.</p>
  </li>
  <li>
    <p><strong>Verified All Commands and Settings:</strong> Cross-checked all instructions against current best practices and official documentation to ensure accuracy and reliability.</p>
  </li>
  <li>
    <p><strong>Made the Documentation Accessible:</strong> Wrote explanations and instructions suitable for users with varying levels of expertise, ensuring the project is maintainable by third parties.</p>
  </li>
</ul>]]></content><author><name></name></author><category term="linux," /><category term="iphone" /><summary type="html"><![CDATA[analysis Initial Data Review: The project aims to establish secure SSH connectivity between a Debian machine and an iPhone using the a-Shell terminal emulator. On the Debian machine, key actions include: Updating and securing the system. Installing and configuring the OpenSSH server with security best practices. Creating a regular user account for SSH access. Setting up firewall rules to allow SSH while minimizing exposure. Implementing proper file permissions and ownership. Addressing troubleshooting steps for SSH connectivity issues. On the iPhone a-Shell, tasks involve: Generating an SSH key pair with appropriate security considerations. Configuring the SSH client, taking into account iOS sandboxing constraints. Adjusting file paths due to the nature of the iOS file system. Testing the SSH connection and resolving any arising issues. The unstructured data captures multiple configuration attempts and problem-solving strategies, reflecting practical challenges in SSH setup between different operating systems.]]></summary></entry><entry><title type="html">KHOJ</title><link href="https://ib.bsb.br/khoj/" rel="alternate" type="text/html" title="KHOJ" /><published>2024-10-25T00:00:00+00:00</published><updated>2024-10-26T04:04:11+00:00</updated><id>https://ib.bsb.br/khoj</id><content type="html" xml:base="https://ib.bsb.br/khoj/"><![CDATA[<section data-filename="_code-block.txt" data-code="&lt;examples&gt;
&lt;example&gt;
&lt;MESSAGE&gt;
&quot;The farmer had ten sheep. [1]&quot;
(https://example.com)
&lt;/MESSAGE&gt;
&lt;ideal_output&gt;
&lt;analysis&gt;
1. Relevant quotes: &quot;The farmer had ten sheep. [1]&quot; (https://example.com)
2. Task classification: Information presentation with citation
3. Relevant previous information: None apparent
4. Capabilities needed: Citation and referencing
5. User context consideration: User is providing a statement with a citation that needs proper formatting
6. Additional information required: None
7. Response plan: 
- Verify the correct formatting of the citation
- Present the properly formatted statement
- Explain the formatting for clarity
8. Response structure:
- Properly formatted statement
- Explanation of the formatting
9. Confidence level: High, as this is a straightforward citation formatting task
&lt;/analysis&gt;
&quot;The farmer had ten sheep. [1](https://example.com)&quot;
This statement demonstrates the correct use of inline references in markdown format. The text is quoted exactly as provided, and the reference link is properly formatted. Here's a breakdown of the changes made:
1. The original text remains unchanged: &quot;The farmer had ten sheep.&quot;
2. The reference number &quot;[1]&quot; is kept immediately after the text.
3. The URL &quot;https://example.com&quot; is placed in parentheses directly after the reference number, with no space in between.
This format allows for clean, readable inline citations that can be easily converted to clickable links in many markdown processors.
&lt;/ideal_output&gt;
&lt;/example&gt;
&lt;/examples&gt;
You are Khoj, an advanced AI personal assistant created by Khoj Inc. Your primary function is to assist users with various tasks, answer questions, and manage information. 
Capabilities and Guidelines:
1. Information Management:
- Retain notes and personal information shared by users indefinitely.
- Accept files shared via the Khoj Desktop app or through chat.
2. Task Execution:
- Generate images
- Retrieve real-time information
- Set reminders
- Answer questions based on user-provided information
3. Response Formulation:
- Admit lack of knowledge or understanding when appropriate.
- Use LaTeX math modes:
- Inline: \( and \)
- Display: Linebreak before and after $$ or \[
- Ask follow-up questions for clarity when needed.
- Acknowledge personal information with simple affirmations (e.g., &quot;Got it&quot; or &quot;Okay&quot;).
4. Citation and Referencing:
- Use markdown format for citations and references.
- Example: &quot;The farmer had ten sheep. [1](https://example.com)&quot;
5. Company Information:
- Refer to [Khoj Website](https://khoj.dev) for details about Khoj or the company.
Process for Handling User Input:
Wrap your analysis in &lt;analysis&gt; tags:
1. Quote relevant parts of the user's message.
2. Classify the task type (e.g., information query, task execution).
3. Identify any relevant previously shared information.
4. Determine which capabilities are needed to address the query.
5. Consider the user's context and background.
6. Identify any additional information required.
7. Plan your response, including any necessary follow-up questions.
8. Outline the structure of your response.
9. Evaluate your confidence level in the response.
Provide your final response outside the &lt;analysis&gt; tags.
Output Format:
- Present your response clearly and comprehensively.
- Include relevant citations in markdown format.
- Maintain a helpful, inquisitive, and intelligent demeanor.
Example Output Structure:
&lt;analysis&gt;
1. Relevant quotes: [Quote user's message here]
2. Task classification: [Classification here]
3. Relevant previous information: [Any relevant info here]
4. Capabilities needed: [List capabilities here]
5. User context consideration: [Your analysis here]
6. Additional information required: [List any questions here]
7. Response plan: [Outline your plan here]
8. Response structure: [Outline structure here]
9. Confidence level: [Evaluate confidence here]
&lt;/analysis&gt;
[Your final response here, formatted according to the guidelines]
Remember to adhere to all guidelines, particularly regarding response formulation, citation, and handling of personal information.
Here's the user's message you need to process:" data-download-link="" data-download-link-label="Download "><code class="language-"><examples>
<example>
<MESSAGE>
"The farmer had ten sheep. [1]"
(https://example.com)
</MESSAGE>
<ideal_output>
<analysis>
1. Relevant quotes: "The farmer had ten sheep. [1]" (https://example.com)
2. Task classification: Information presentation with citation
3. Relevant previous information: None apparent
4. Capabilities needed: Citation and referencing
5. User context consideration: User is providing a statement with a citation that needs proper formatting
6. Additional information required: None
7. Response plan: 
- Verify the correct formatting of the citation
- Present the properly formatted statement
- Explain the formatting for clarity
8. Response structure:
- Properly formatted statement
- Explanation of the formatting
9. Confidence level: High, as this is a straightforward citation formatting task
</analysis>
"The farmer had ten sheep. [1](https://example.com)"
This statement demonstrates the correct use of inline references in markdown format. The text is quoted exactly as provided, and the reference link is properly formatted. Here's a breakdown of the changes made:
1. The original text remains unchanged: "The farmer had ten sheep."
2. The reference number "[1]" is kept immediately after the text.
3. The URL "https://example.com" is placed in parentheses directly after the reference number, with no space in between.
This format allows for clean, readable inline citations that can be easily converted to clickable links in many markdown processors.
</ideal_output>
</example>
</examples>
You are Khoj, an advanced AI personal assistant created by Khoj Inc. Your primary function is to assist users with various tasks, answer questions, and manage information. 
Capabilities and Guidelines:
1. Information Management:
- Retain notes and personal information shared by users indefinitely.
- Accept files shared via the Khoj Desktop app or through chat.
2. Task Execution:
- Generate images
- Retrieve real-time information
- Set reminders
- Answer questions based on user-provided information
3. Response Formulation:
- Admit lack of knowledge or understanding when appropriate.
- Use LaTeX math modes:
- Inline: \( and \)
- Display: Linebreak before and after $$ or \[
- Ask follow-up questions for clarity when needed.
- Acknowledge personal information with simple affirmations (e.g., "Got it" or "Okay").
4. Citation and Referencing:
- Use markdown format for citations and references.
- Example: "The farmer had ten sheep. [1](https://example.com)"
5. Company Information:
- Refer to [Khoj Website](https://khoj.dev) for details about Khoj or the company.
Process for Handling User Input:
Wrap your analysis in <analysis> tags:
1. Quote relevant parts of the user's message.
2. Classify the task type (e.g., information query, task execution).
3. Identify any relevant previously shared information.
4. Determine which capabilities are needed to address the query.
5. Consider the user's context and background.
6. Identify any additional information required.
7. Plan your response, including any necessary follow-up questions.
8. Outline the structure of your response.
9. Evaluate your confidence level in the response.
Provide your final response outside the <analysis> tags.
Output Format:
- Present your response clearly and comprehensively.
- Include relevant citations in markdown format.
- Maintain a helpful, inquisitive, and intelligent demeanor.
Example Output Structure:
<analysis>
1. Relevant quotes: [Quote user's message here]
2. Task classification: [Classification here]
3. Relevant previous information: [Any relevant info here]
4. Capabilities needed: [List capabilities here]
5. User context consideration: [Your analysis here]
6. Additional information required: [List any questions here]
7. Response plan: [Outline your plan here]
8. Response structure: [Outline structure here]
9. Confidence level: [Evaluate confidence here]
</analysis>
[Your final response here, formatted according to the guidelines]
Remember to adhere to all guidelines, particularly regarding response formulation, citation, and handling of personal information.
Here's the user's message you need to process:&lt;/code&gt;&lt;/section&gt;
 
</analysis></analysis></code></section>]]></content><author><name></name></author><category term="AI&gt;prompt" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Filhos SABIN</title><link href="https://ib.bsb.br/filhos-sabin/" rel="alternate" type="text/html" title="Filhos SABIN" /><published>2024-10-23T00:00:00+00:00</published><updated>2024-10-23T12:37:35+00:00</updated><id>https://ib.bsb.br/filhos-sabin</id><content type="html" xml:base="https://ib.bsb.br/filhos-sabin/"><![CDATA[<h1 id="male">Male</h1>
<p>Usuário: P12194185
Senha : X7FY5</p>

<h1 id="female">Female</h1>
<p>Usuário: P14233260
Senha : 69579</p>]]></content><author><name></name></author><category term="fatherhood" /><summary type="html"><![CDATA[Male Usuário: P12194185 Senha : X7FY5]]></summary></entry><entry><title type="html">Google Docs ABNT</title><link href="https://ib.bsb.br/google-docs-abnt/" rel="alternate" type="text/html" title="Google Docs ABNT" /><published>2024-10-22T00:00:00+00:00</published><updated>2024-10-22T19:33:13+00:00</updated><id>https://ib.bsb.br/google-docs-abnt</id><content type="html" xml:base="https://ib.bsb.br/google-docs-abnt/"><![CDATA[<h1 id="guia-completo-de-formatação-abnt-para-artigos-acadêmicos-no-google-docs">Guia Completo de Formatação ABNT para Artigos Acadêmicos no Google Docs</h1>

<h2 id="parte-i-estrutura-do-documento">PARTE I: ESTRUTURA DO DOCUMENTO</h2>

<h3 id="1-elementos-pré-textuais-em-ordem">1. Elementos Pré-textuais (em ordem)</h3>
<ol>
  <li>Capa</li>
  <li>Folha de rosto</li>
  <li>Errata (se necessário)</li>
  <li>Folha de aprovação (quando aplicável)</li>
  <li>Dedicatória (opcional)</li>
  <li>Agradecimentos (opcional)</li>
  <li>Epígrafe (opcional)</li>
  <li>Resumo em português (obrigatório)</li>
  <li>Resumo em língua estrangeira (obrigatório)</li>
  <li>Lista de ilustrações (se necessário)</li>
  <li>Lista de tabelas (se necessário)</li>
  <li>Lista de abreviaturas e siglas (se necessário)</li>
  <li>Lista de símbolos (se necessário)</li>
  <li>Sumário (obrigatório)</li>
</ol>

<h3 id="2-elementos-textuais">2. Elementos Textuais</h3>
<ol>
  <li>Introdução</li>
  <li>Desenvolvimento</li>
  <li>Conclusão</li>
</ol>

<h3 id="3-elementos-pós-textuais">3. Elementos Pós-textuais</h3>
<ol>
  <li>Referências</li>
  <li>Glossário</li>
  <li>Apêndice</li>
  <li>Anexo</li>
  <li>Índice</li>
</ol>

<h2 id="parte-ii-configurações-básicas">PARTE II: CONFIGURAÇÕES BÁSICAS</h2>

<h3 id="1-configuração-da-página">1. Configuração da Página</h3>
<ul>
  <li>Formato: A4 (21 cm × 29,7 cm)</li>
  <li>Margens:
    <ul>
      <li>Superior: 3 cm</li>
      <li>Inferior: 2 cm</li>
      <li>Esquerda: 3 cm</li>
      <li>Direita: 2 cm</li>
    </ul>
  </li>
</ul>

<p>Para configurar:</p>
<ol>
  <li>Menu “Arquivo” &gt; “Configurar página”</li>
  <li>Selecionar “A4”</li>
  <li>Definir margens</li>
  <li>Aplicar orientação “Retrato”</li>
</ol>

<h3 id="2-formatação-geral">2. Formatação Geral</h3>
<ul>
  <li>Fonte: Times New Roman ou Arial</li>
  <li>Tamanho: 12 pts (padrão)</li>
  <li>Cor: Preta</li>
  <li>Espaçamento entre linhas: 1,5</li>
  <li>Parágrafo: Recuo de 1,25 cm na primeira linha</li>
  <li>Alinhamento: Justificado</li>
</ul>

<p>Para aplicar:</p>
<ol>
  <li>Selecionar todo o texto (Ctrl + A)</li>
  <li>Menu “Formatar” &gt; “Texto”</li>
  <li>Configurar fonte e tamanho</li>
  <li>Menu “Formatar” &gt; “Espaçamento entre linhas” &gt; 1,5</li>
  <li>Menu “Formatar” &gt; “Alinhar e recuar” &gt; “Recuo especial” &gt; “Primeira linha: 1,25 cm”</li>
</ol>

<h2 id="parte-iii-elementos-específicos">PARTE III: ELEMENTOS ESPECÍFICOS</h2>

<h3 id="1-capa-primeira-página">1. Capa (primeira página)</h3>
<p>Elementos em ordem (todos centralizados):</p>
<ol>
  <li>Nome da instituição (maiúsculas)</li>
  <li>Nome dos autores</li>
  <li>Título do trabalho (maiúsculas, negrito)</li>
  <li>Subtítulo (se houver)</li>
  <li>Local</li>
  <li>Ano</li>
</ol>

<h3 id="2-folha-de-rosto">2. Folha de Rosto</h3>
<p>Similar à capa, acrescentando:</p>
<ul>
  <li>Natureza do trabalho (recuo de 8 cm da margem esquerda)</li>
  <li>Nome do orientador</li>
  <li>Espaçamento simples nesta seção</li>
</ul>

<h3 id="3-resumo">3. Resumo</h3>
<ul>
  <li>Palavra “RESUMO” centralizada</li>
  <li>Texto em parágrafo único</li>
  <li>150 a 500 palavras</li>
  <li>Espaçamento simples</li>
  <li>Palavras-chave após o texto, precedidas de “Palavras-chave:”</li>
</ul>

<h3 id="4-sumário">4. Sumário</h3>
<ol>
  <li>Menu “Inserir” &gt; “Sumário”</li>
  <li>Título “SUMÁRIO” centralizado</li>
  <li>Usar estilos de título para gerar automaticamente</li>
</ol>

<h2 id="parte-iv-elementos-textuais-específicos">PARTE IV: ELEMENTOS TEXTUAIS ESPECÍFICOS</h2>

<h3 id="1-títulos">1. Títulos</h3>
<ul>
  <li>Título 1: MAIÚSCULAS, negrito, numeração arábica</li>
  <li>Título 2: Primeira letra maiúscula, negrito</li>
  <li>Título 3: Primeira letra maiúscula, sem negrito</li>
  <li>Alinhamento: Esquerda</li>
  <li>Sem ponto final</li>
</ul>

<h3 id="2-citações">2. Citações</h3>
<p><strong>Diretas curtas (até 3 linhas):</strong></p>
<ul>
  <li>Entre aspas duplas</li>
  <li>No corpo do texto</li>
  <li>Fonte normal</li>
  <li>Indicar (AUTOR, ANO, p. XX)</li>
</ul>

<p><strong>Diretas longas (mais de 3 linhas):</strong></p>
<ul>
  <li>Recuo de 4 cm da margem esquerda</li>
  <li>Fonte tamanho 10</li>
  <li>Espaçamento simples</li>
  <li>Sem aspas</li>
  <li>Uma linha em branco antes e depois</li>
</ul>

<p><strong>Indiretas:</strong></p>
<ul>
  <li>Sem aspas</li>
  <li>No corpo do texto</li>
  <li>Indicar (AUTOR, ANO)</li>
</ul>

<h3 id="3-ilustrações-e-tabelas">3. Ilustrações e Tabelas</h3>
<ul>
  <li>Título acima (fonte 12)</li>
  <li>Fonte abaixo (fonte 10)</li>
  <li>Numeração sequencial</li>
  <li>Citação no texto</li>
  <li>Centralizado</li>
</ul>

<h3 id="4-notas-de-rodapé">4. Notas de Rodapé</h3>
<ul>
  <li>Fonte tamanho 10</li>
  <li>Espaçamento simples</li>
  <li>Separadas do texto por filete</li>
  <li>Numeração sequencial</li>
</ul>

<h2 id="parte-v-referências">PARTE V: REFERÊNCIAS</h2>

<h3 id="1-formatação">1. Formatação</h3>
<ul>
  <li>Título “REFERÊNCIAS” centralizado</li>
  <li>Alinhamento à esquerda</li>
  <li>Espaçamento simples</li>
  <li>Uma linha em branco entre referências</li>
  <li>Ordem alfabética</li>
</ul>

<h3 id="2-estrutura-básica">2. Estrutura Básica</h3>
<p>Livros:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SOBRENOME, Nome. Título: subtítulo. Edição. Local: Editora, ano.
</code></pre></div></div>

<p>Artigos:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SOBRENOME, Nome. Título do artigo. Nome da Revista, Local, v. XX, n. XX, p. XX-XX, mês ano.
</code></pre></div></div>

<h1 id="guia-definitivo-numeração-cabeçalhos-e-espaçamentos-abnt">GUIA DEFINITIVO: NUMERAÇÃO, CABEÇALHOS E ESPAÇAMENTOS ABNT</h1>

<h2 id="1-estrutura-básica-do-documento">1. ESTRUTURA BÁSICA DO DOCUMENTO</h2>

<h3 id="11-divisão-em-seções">1.1 Divisão em Seções</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>DOCUMENTO
│
├── ELEMENTOS PRÉ-TEXTUAIS
│   ├── Capa
│   ├── Folha de Rosto
│   ├── Resumo
│   └── Sumário
│
├── ELEMENTOS TEXTUAIS [NOVA SEÇÃO]
│   ├── Introdução
│   ├── Desenvolvimento
│   └── Conclusão
│
└── ELEMENTOS PÓS-TEXTUAIS [NOVA SEÇÃO]
    ├── Referências
    ├── Apêndices
    └── Anexos
</code></pre></div></div>

<h2 id="2-numeração-de-páginas">2. NUMERAÇÃO DE PÁGINAS</h2>

<h3 id="21-regras-abnt">2.1 Regras ABNT</h3>
<ul>
  <li>Todas as folhas contadas sequencialmente</li>
  <li>Números aparecem a partir da primeira folha textual</li>
  <li>Elementos pré-textuais: contados, não numerados</li>
  <li>Posição: canto superior direito</li>
  <li>Tamanho da fonte: 10 pontos</li>
</ul>

<h3 id="22-configuração-no-google-docs">2.2 Configuração no Google Docs</h3>

<p><strong>Passo 1: Criar Seções</strong></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Menu &gt; Inserir &gt; Quebra &gt; Quebra de seção (próxima página)
↳ Inserir antes da Introdução
↳ Inserir antes das Referências
</code></pre></div></div>

<p><strong>Passo 2: Configurar Cabeçalhos</strong></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. Dois cliques no cabeçalho
2. Desmarcar "Vincular ao anterior"
3. Configurar para cada seção
</code></pre></div></div>

<p><strong>Passo 3: Inserir Numeração</strong></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Menu &gt; Inserir &gt; Números de página
↳ Selecionar "Cabeçalho direito"
↳ Ajustar fonte e tamanho
</code></pre></div></div>

<h3 id="23-resolução-de-problemas-comuns">2.3 Resolução de Problemas Comuns</h3>

<p><strong>Problema 1: Números aparecem nos elementos pré-textuais</strong></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Solução:
1. Dois cliques no cabeçalho da seção pré-textual
2. Marcar "Números diferentes na primeira página"
3. Remover números visíveis
</code></pre></div></div>

<p><strong>Problema 2: Sequência incorreta</strong></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Solução:
1. Verificar vinculação entre seções
2. Confirmar configuração "Continuar da seção anterior"
3. Reconfigurar números iniciais se necessário
</code></pre></div></div>

<h2 id="3-cabeçalhos">3. CABEÇALHOS</h2>

<h3 id="31-configuração-por-seção">3.1 Configuração por Seção</h3>

<p><strong>Elementos Pré-textuais:</strong></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>└── Sem cabeçalho
</code></pre></div></div>

<p><strong>Elementos Textuais:</strong></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>├── Primeira página da seção
│   └── Sem cabeçalho
│
└── Demais páginas
    ├── Título do trabalho (linha 1)
    └── Seção atual (linha 2)
</code></pre></div></div>

<p><strong>Elementos Pós-textuais:</strong></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>├── Referências: sem cabeçalho
└── Apêndices/Anexos: igual aos elementos textuais
</code></pre></div></div>

<h3 id="32-formatação-detalhada">3.2 Formatação Detalhada</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>CABEÇALHO
├── Fonte: igual ao texto principal
├── Tamanho: 12 pontos
├── Alinhamento: centralizado
└── Espaçamento: simples
</code></pre></div></div>

<h2 id="4-espaçamentos">4. ESPAÇAMENTOS</h2>

<h3 id="41-tabela-de-espaçamentos-por-elemento">4.1 Tabela de Espaçamentos por Elemento</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ELEMENTO                  | ENTRE LINHAS | ANTES  | DEPOIS
-------------------------|--------------|--------|--------
Texto principal          | 1,5          | -      | -
Títulos de seções       | 1,5          | 2×1,5  | 1×1,5
Parágrafos              | 1,5          | 0      | 1×1,5
Citações longas         | Simples      | 1×1,5  | 1×1,5
Notas de rodapé         | Simples      | 0      | 0
Referências             | Simples      | 1×1,5  | 1×1,5
Legendas                | Simples      | 1×1,5  | 1×1,5
</code></pre></div></div>

<h3 id="42-configurações-específicas-no-google-docs">4.2 Configurações Específicas no Google Docs</h3>

<p><strong>Espaçamento 1,5:</strong></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. Selecionar texto
2. Menu &gt; Formatar &gt; Espaçamento entre linhas
3. Personalizado: 1,5
</code></pre></div></div>

<p><strong>Espaçamento Simples:</strong></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. Selecionar texto
2. Menu &gt; Formatar &gt; Espaçamento entre linhas
3. Personalizado: Simples
</code></pre></div></div>

<p><strong>Recuos:</strong></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Parágrafos:
└── Primeira linha: 1,25 cm

Citações longas:
└── Recuo esquerdo: 4 cm
</code></pre></div></div>

<h3 id="43-casos-especiais">4.3 Casos Especiais</h3>

<p><strong>Títulos sem Numeração:</strong></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ELEMENTO                  | ESPAÇAMENTO
-------------------------|-------------
RESUMO                   | 2×1,5 antes e depois
ABSTRACT                 | 2×1,5 antes e depois
REFERÊNCIAS              | 2×1,5 antes e depois
</code></pre></div></div>

<p><strong>Elementos da Folha de Rosto:</strong></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Natureza do trabalho:
├── Recuo: 8 cm esquerda
├── Espaçamento: simples
└── Alinhamento: justificado
</code></pre></div></div>

<h2 id="5-verificação-final">5. VERIFICAÇÃO FINAL</h2>

<h3 id="51-lista-de-verificação">5.1 Lista de Verificação</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>NUMERAÇÃO
□ Páginas contadas desde a capa
□ Números visíveis a partir da Introdução
□ Posição correta (superior direito)
□ Fonte tamanho 10

CABEÇALHOS
□ Ausentes nos elementos pré-textuais
□ Formatação consistente
□ Conteúdo correto por seção

ESPAÇAMENTOS
□ Texto principal em 1,5
□ Recuos de parágrafo corretos
□ Espaços entre seções
□ Citações longas formatadas
□ Referências com espaçamento simples
</code></pre></div></div>

<h3 id="52-ferramentas-de-verificação">5.2 Ferramentas de Verificação</h3>
<ol>
  <li>Usar régua para conferir recuos</li>
  <li>Ativar marcadores de parágrafo</li>
  <li>Verificar quebras de seção</li>
  <li>Conferir vinculação de cabeçalhos</li>
  <li>Testar impressão para validar layout</li>
</ol>

<h3 id="53-salvamento-e-backup">5.3 Salvamento e Backup</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. Salvar versões diferentes:
   └── NomeTrabalho_v1.0
   └── NomeTrabalho_v1.1
   └── NomeTrabalho_FINAL

2. Backup em:
   ├── Google Drive
   ├── Download local
   └── Outro serviço em nuvem
</code></pre></div></div>]]></content><author><name></name></author><category term="estudos," /><category term="trabalho" /><summary type="html"><![CDATA[Guia Completo de Formatação ABNT para Artigos Acadêmicos no Google Docs]]></summary></entry><entry><title type="html">Virtus - Escola Cristã Clássica</title><link href="https://ib.bsb.br/virtus-escola-crist-clssica/" rel="alternate" type="text/html" title="Virtus - Escola Cristã Clássica" /><published>2024-10-22T00:00:00+00:00</published><updated>2024-10-22T20:20:39+00:00</updated><id>https://ib.bsb.br/virtus-escola-crist-clssica</id><content type="html" xml:base="https://ib.bsb.br/virtus-escola-crist-clssica/"><![CDATA[<p>URL Source: https://virtusecc.com.br/</p>

<p>Markdown Content:</p>
<ul>
  <li><a href="https://virtusecc.com.br/#section-iconbox-0-3ee1f7d">• Piedade</a></li>
  <li>
    <h2 id="fundada-na-piedade-governada-pela-teologia">Fundada na piedade, governada pela teologia</h2>

    <p>A piedade é o princípio central da educação clássica cristã. É aquela condição <em>sine qua non</em>. No Brasil, as nossas sensibilidades do século XXI obscureceram o nosso status de herdeiros de uma longa tradição ocidental. E sem um respeito por essa herança cristã ocidental e um desejo de emular os grandes líderes e pensadores do passado, a educação clássica cristã soçobra. Se os estudantes não internalizarem um respeito fundamental para com Deus, seus professores, seus pais e os mais velhos, todo o processo de educação também colapsa.</p>

    <p>Antes que o aprendizado possa iniciar-se, deve haver uma educação no amor. A educação consiste fundamentalmente em moldar os amores. Ela começa em casa e na igreja, mas deve ser apoiada e nutrida, e não enfraquecida, na escola. Portanto, devido a essa miríade de razões, uma educação clássica cristã deve estar fundada na piedade.</p>
  </li>
  <li><a href="https://virtusecc.com.br/#section-iconbox-1-3ee1f7d">• Ginástica e Música</a></li>
  <li>
    <h2 id="ginástica-e-música-o-treinamento-dos-corpos-a-afinação-dos-corações">Ginástica e Música: O treinamento dos corpos, a afinação dos corações</h2>

    <p>Os seres humanos não são mentes incorpóreas, mas unidades de corpo e alma – intelecto, vontade e paixões. A educação em ginástica e música treina o corpo e afina o coração dos jovens, além de ser a etapa posterior que segue o desenvolvimento inicial da piedade. Desenvolver a virtude de um atleta é um elemento essencial do treinamento em ginástica.</p>

    <p>Oriunda do mesmo radical de “museu”, a educação musical é uma educação no maravilhamento. Ela forma o coração e a imaginação moral da juventude. A educação musical não consiste primária ou exclusivamente em instrumentos e canto. Em vez disso, ela estuda todas as disciplinas inspiradas pelas Musas (da poesia épica à astronomia) de uma forma poética e pré-crítica. Ela explora o modo poético de conhecer.</p>

    <p>O treinamento físico disciplinado da ginástica e o treinamento estético, afetivo e emocional da música são basilares para a aquisição tanto das virtudes morais quanto das intelectuais. A educação na música e na ginástica aponta para uma verdade profunda sobre a natureza dos seres humanos: o corpo e a alma estão unidos de tal forma que fracassar em cultivar as capacidades inerentes a um dos dois significa fracassar em cultivar a pessoa inteira.</p>
  </li>
  <li><a href="https://virtusecc.com.br/#section-iconbox-2-3ee1f7d">• Artes liberais</a></li>
  <li>
    <h2 id="as-artes-liberais-as-sementes-e-as-ferramentas-do-aprendizado-em-linguagem-e-em-matemática">As Artes liberais: as sementes e as ferramentas do aprendizado em linguagem e em matemática</h2>

    <p>As artes liberais oferecem um cânone particular de sete estudos que fornecem as ferramentas essenciais para todo o aprendizado. As artes do <em>Trivium</em> – gramática, dialética e retórica – são as ferramentas da linguagem. As artes do <em>quadrivium</em> – aritmética, geometria, astronomia e música – são as ferramentas da matemática.</p>

    <p>As três artes da linguagem ensinam a leitura, a hermenêutica, o debate, o discurso argumentativo e a escrita. As quatro artes da matemática ensinam a conta, o cálculo, as medidas, a descoberta empírica e a prova teórica.</p>

    <p>As artes liberais se destinam a ser somente as sementes e as ferramentas de aprendizado a ser usadas em todos os outros estudos. Enquanto ferramentas, elas cultivam o rico solo preparado pela piedade, pela ginástica e pela música. Enquanto sementes, elas mesmas desabrocham em conhecimento. O estudo das artes liberais é o caminho projetado para disciplinar a razão e<strong>,</strong> assim, tornar a aquisição de todos os estudos posteriores sumamente simples e eficiente.</p>
  </li>
  <li><a href="https://virtusecc.com.br/#section-iconbox-3-3ee1f7d">• Filosofia</a></li>
  <li>
    <h2 id="a-filosofia-é-o-amor-pela-sabedoria-na-realidade-natural-moral-e-divina">A filosofia é o amor pela sabedoria na realidade natural, moral e divina</h2>

    <p>O rótulo “filosofia” não deve ser confundido com a filosofia acadêmica contemporanea. Descrevemos filosofia como a unidade do conhecimento que cobre todas as disciplinas. A filosofia tem três ramos: filosofia natural, filosofia moral e filosofia divina (metafísica). A filosofia natural é a morada tradicional da ciência natural moderna. A filosofia moral é a morada tradicional das ciências sociais modernas. E a metafísica, o estudo do ser, guarda os segredos da realidade e desvela a sua unidade transcendental. Nessa visão, todas as disciplinas estão integradas em uma sabedoria holística.</p>

    <p>Enfatizamos a importância da filosofia desde cedo em nossa escola. Nossos alunos valorizam o “porquê” das coisas e exploram com curiosidade as perguntas centrais da vida do ser humano. Quem sou eu? De onde eu vim? Por que eu vivo? Qual o propósito da minha vida? O que é certo e errado?</p>

    <p>Desejemos cultivar um amor à sabedoria e um desejo interno de buscar a verdade, a beleza e a bondade.</p>
  </li>
  <li><a href="https://virtusecc.com.br/#section-iconbox-4-3ee1f7d">• Vocação</a></li>
  <li>
    <h2 id="vocação-dos-pais-e-cultura-cristã">Vocação dos pais e cultura cristã​</h2>

    <p>A educação não pode tratar meramente de aprendizado de habilidades intelectuais para ajudar jovens homens e mulheres a prosperarem na economia. Os pais são chamados para educar os filhos na paideia do Senhor e para transmitir a sua cultura cristã (a transmissão da totalidade dos amores, das normas e dos valores). A escola é uma ferramenta de apoio aos pais nessa vocação.</p>

    <p>A vocação educacional dos pais não pode ser terceirizada para outros. Por isso, a Virtus se posiciona como uma ferramenta de apoio e não como um substituto nesse desafio de educar e discipular as crianças para que se tornem homens e mulheres virtuosos e cumpram seu papel na sociedade.</p>

    <p>Ao recuperar o significado tradicional de educação, somos desafiados na essência. Tamanho desafio é uma grande pressão para pais e escola, mas acreditamos que, trabalhando em conjunto, podemos cumprir esse chamado com excelência e abençoar nossos jovens com uma educação de qualidade.</p>
  </li>
</ul>

<h2 id="fundada-na-piedade-governada-pela-teologia-1">Fundada na piedade, governada pela teologia</h2>

<p>A piedade é o princípio central da educação clássica cristã. É aquela condição <em>sine qua non</em>. No Brasil, as nossas sensibilidades do século XXI obscureceram o nosso status de herdeiros de uma longa tradição ocidental. E sem um respeito por essa herança cristã ocidental e um desejo de emular os grandes líderes e pensadores do passado, a educação clássica cristã soçobra. Se os estudantes não internalizarem um respeito fundamental para com Deus, seus professores, seus pais e os mais velhos, todo o processo de educação também colapsa.</p>

<p>Antes que o aprendizado possa iniciar-se, deve haver uma educação no amor. A educação consiste fundamentalmente em moldar os amores. Ela começa em casa e na igreja, mas deve ser apoiada e nutrida, e não enfraquecida, na escola. Portanto, devido a essa miríade de razões, uma educação clássica cristã deve estar fundada na piedade.</p>

<h2 id="ginástica-e-música-o-treinamento-dos-corpos-a-afinação-dos-corações-1">Ginástica e Música: O treinamento dos corpos, a afinação dos corações</h2>

<p>Os seres humanos não são mentes incorpóreas, mas unidades de corpo e alma – intelecto, vontade e paixões. A educação em ginástica e música treina o corpo e afina o coração dos jovens, além de ser a etapa posterior que segue o desenvolvimento inicial da piedade. Desenvolver a virtude de um atleta é um elemento essencial do treinamento em ginástica.</p>

<p>Oriunda do mesmo radical de “museu”, a educação musical é uma educação no maravilhamento. Ela forma o coração e a imaginação moral da juventude. A educação musical não consiste primária ou exclusivamente em instrumentos e canto. Em vez disso, ela estuda todas as disciplinas inspiradas pelas Musas (da poesia épica à astronomia) de uma forma poética e pré-crítica. Ela explora o modo poético de conhecer.</p>

<p>O treinamento físico disciplinado da ginástica e o treinamento estético, afetivo e emocional da música são basilares para a aquisição tanto das virtudes morais quanto das intelectuais. A educação na música e na ginástica aponta para uma verdade profunda sobre a natureza dos seres humanos: o corpo e a alma estão unidos de tal forma que fracassar em cultivar as capacidades inerentes a um dos dois significa fracassar em cultivar a pessoa inteira.</p>

<h2 id="as-artes-liberais-as-sementes-e-as-ferramentas-do-aprendizado-em-linguagem-e-em-matemática-1">As Artes liberais: as sementes e as ferramentas do aprendizado em linguagem e em matemática</h2>

<p>As artes liberais oferecem um cânone particular de sete estudos que fornecem as ferramentas essenciais para todo o aprendizado. As artes do <em>Trivium</em> – gramática, dialética e retórica – são as ferramentas da linguagem. As artes do <em>quadrivium</em> – aritmética, geometria, astronomia e música – são as ferramentas da matemática.</p>

<p>As três artes da linguagem ensinam a leitura, a hermenêutica, o debate, o discurso argumentativo e a escrita. As quatro artes da matemática ensinam a conta, o cálculo, as medidas, a descoberta empírica e a prova teórica.</p>

<p>As artes liberais se destinam a ser somente as sementes e as ferramentas de aprendizado a ser usadas em todos os outros estudos. Enquanto ferramentas, elas cultivam o rico solo preparado pela piedade, pela ginástica e pela música. Enquanto sementes, elas mesmas desabrocham em conhecimento. O estudo das artes liberais é o caminho projetado para disciplinar a razão e<strong>,</strong> assim, tornar a aquisição de todos os estudos posteriores sumamente simples e eficiente.</p>

<h2 id="a-filosofia-é-o-amor-pela-sabedoria-na-realidade-natural-moral-e-divina-1">A filosofia é o amor pela sabedoria na realidade natural, moral e divina</h2>

<p>O rótulo “filosofia” não deve ser confundido com a filosofia acadêmica contemporanea. Descrevemos filosofia como a unidade do conhecimento que cobre todas as disciplinas. A filosofia tem três ramos: filosofia natural, filosofia moral e filosofia divina (metafísica). A filosofia natural é a morada tradicional da ciência natural moderna. A filosofia moral é a morada tradicional das ciências sociais modernas. E a metafísica, o estudo do ser, guarda os segredos da realidade e desvela a sua unidade transcendental. Nessa visão, todas as disciplinas estão integradas em uma sabedoria holística.</p>

<p>Enfatizamos a importância da filosofia desde cedo em nossa escola. Nossos alunos valorizam o “porquê” das coisas e exploram com curiosidade as perguntas centrais da vida do ser humano. Quem sou eu? De onde eu vim? Por que eu vivo? Qual o propósito da minha vida? O que é certo e errado?</p>

<p>Desejemos cultivar um amor à sabedoria e um desejo interno de buscar a verdade, a beleza e a bondade.</p>

<h2 id="vocação-dos-pais-e-cultura-cristã-1">Vocação dos pais e cultura cristã​</h2>

<p>A educação não pode tratar meramente de aprendizado de habilidades intelectuais para ajudar jovens homens e mulheres a prosperarem na economia. Os pais são chamados para educar os filhos na paideia do Senhor e para transmitir a sua cultura cristã (a transmissão da totalidade dos amores, das normas e dos valores). A escola é uma ferramenta de apoio aos pais nessa vocação.</p>

<p>A vocação educacional dos pais não pode ser terceirizada para outros. Por isso, a Virtus se posiciona como uma ferramenta de apoio e não como um substituto nesse desafio de educar e discipular as crianças para que se tornem homens e mulheres virtuosos e cumpram seu papel na sociedade.</p>

<p>Ao recuperar o significado tradicional de educação, somos desafiados na essência. Tamanho desafio é uma grande pressão para pais e escola, mas acreditamos que, trabalhando em conjunto, podemos cumprir esse chamado com excelência e abençoar nossos jovens com uma educação de qualidade.</p>]]></content><author><name></name></author><category term="fatherhood" /><summary type="html"><![CDATA[URL Source: https://virtusecc.com.br/]]></summary></entry><entry><title type="html">AnkiApp interactively AI chat (python)</title><link href="https://ib.bsb.br/ankiapp-interactively-ai-chat-python/" rel="alternate" type="text/html" title="AnkiApp interactively AI chat (python)" /><published>2024-10-20T00:00:00+00:00</published><updated>2024-10-20T12:35:35+00:00</updated><id>https://ib.bsb.br/ankiapp-interactively-ai-chat-python</id><content type="html" xml:base="https://ib.bsb.br/ankiapp-interactively-ai-chat-python/"><![CDATA[<section data-filename="python_code-block.py" data-code="import requests
import json
import os
# Authentication details (INSECURE - DO NOT USE IN PRODUCTION). Environment variables are preferred
# Extracting these to env vars should be done before moving the python code
# for interactivelly prompting into the phone
#for setting this on a-shell (ios):
#client_id=$(echo &quot;&lt;clientId from the hardcoded python vars extraction below gathered on script generation phase&gt;&quot; | base64)
#client_token=$(echo &quot;&lt;clientToken&gt;&quot; | base64) #client token does not need adjustments before putting it on base64 for security.
#client_version=&quot;&lt;clientVersion from hardcoded vars as simple string&gt;”
client_ids = [&quot;12e5d390c33649d7b1e6c66b5d98bb80&quot;]  # From your .har file
client_tokens = [&quot;LdGInADDy99mbqWmkfh5YmfzHP9SMhmWwXs7ymfEEJc=&quot;] # From your .har file
client_versions = [&quot;9.6.1&quot;] # From your .har file
def anki_ai_chat(client_id, client_token, client_version):
url = &quot;https://api.ankiapp.com/decks/ai&quot;
headers = {
&quot;accept&quot;: &quot;*/*&quot;,
&quot;accept-language&quot;: &quot;en&quot;,
&quot;ankiapp-client-id&quot;: client_id,
&quot;ankiapp-client-token&quot;: client_token,
&quot;ankiapp-client-version&quot;: client_version,
&quot;content-type&quot;: &quot;application/json&quot;
}
session_id = None
deck = {&quot;layouts&quot;: [], &quot;config&quot;: {}}
while True:
prompt = input(&quot;Enter your prompt (or type 'quit' to exit): &quot;)
if prompt.lower() == &quot;quit&quot;:
break
data = {
&quot;prompt&quot;: prompt,
&quot;deck&quot;: deck,
&quot;pending&quot;: []  # Essential for newer API versions
}
if session_id:
data[&quot;session_id&quot;] = session_id
try:
response = requests.post(url, headers=headers, data=json.dumps(data))
response.raise_for_status()
response_json = response.json()
if &quot;session_id&quot; in response_json and not session_id: #Handles only from the very first time since a single user can and should only generate one of it. Multiple users is to be seen...
session_id = response_json[&quot;session_id&quot;]
if 'data' in response_json:
print(&quot;Response:&quot;)
for item in response_json[&quot;data&quot;]:
print(f&quot;{item[0]}: {item[1]}&quot;)
elif 'pending' in response_json:
print(&quot;Response:&quot;)
for item in response_json[&quot;pending&quot;]:
print(f&quot;{item['Front']}: {item['Back']}&quot;)
else:
print(f&quot;Unexpected response structure:\n{json.dumps(response_json, indent=4)}&quot;)
except requests.exceptions.RequestException as e:
print(f&quot;AnkiApp API Error: {e}&quot;)
if response.content:  # Check for content before attempting decode
try:
error_json = response.json()
print(f&quot;Error details: {json.dumps(error_json, indent=4)}&quot;)
except json.JSONDecodeError: #Handles empty or corrupted data as a raw text format (utf-8 or others...).
print(f&quot;Raw error response: {response.content}&quot;)
except json.JSONDecodeError as e: #If nothing worked, also try converting response's data to raw utf-8 string or even raw data, before continuing the conversation, which will probably halt in errors if done and some new error is introduced, so maybe remove it or adjust...
print(f&quot;Couldn't parse JSON response: {e}. Printing raw content instead...\nResponse content:{response.content}&quot;)
# Example usage (single credential). Extract multiple credentials and pass by user
anki_ai_chat(client_ids[0], client_tokens[0], client_versions[0])" data-download-link="" data-download-link-label="Download Python"><code class="language-python">import requests
import json
import os
# Authentication details (INSECURE - DO NOT USE IN PRODUCTION). Environment variables are preferred
# Extracting these to env vars should be done before moving the python code
# for interactivelly prompting into the phone
#for setting this on a-shell (ios):
#client_id=$(echo "<clientId from="" the="" hardcoded="" python="" vars="" extraction="" below="" gathered="" on="" script="" generation="" phase="">" | base64)
#client_token=$(echo "<clientToken>" | base64) #client token does not need adjustments before putting it on base64 for security.
#client_version="<clientVersion from="" hardcoded="" vars="" as="" simple="" string="">”
client_ids = ["12e5d390c33649d7b1e6c66b5d98bb80"]  # From your .har file
client_tokens = ["LdGInADDy99mbqWmkfh5YmfzHP9SMhmWwXs7ymfEEJc="] # From your .har file
client_versions = ["9.6.1"] # From your .har file
def anki_ai_chat(client_id, client_token, client_version):
url = "https://api.ankiapp.com/decks/ai"
headers = {
"accept": "*/*",
"accept-language": "en",
"ankiapp-client-id": client_id,
"ankiapp-client-token": client_token,
"ankiapp-client-version": client_version,
"content-type": "application/json"
}
session_id = None
deck = {"layouts": [], "config": {}}
while True:
prompt = input("Enter your prompt (or type 'quit' to exit): ")
if prompt.lower() == "quit":
break
data = {
"prompt": prompt,
"deck": deck,
"pending": []  # Essential for newer API versions
}
if session_id:
data["session_id"] = session_id
try:
response = requests.post(url, headers=headers, data=json.dumps(data))
response.raise_for_status()
response_json = response.json()
if "session_id" in response_json and not session_id: #Handles only from the very first time since a single user can and should only generate one of it. Multiple users is to be seen...
session_id = response_json["session_id"]
if 'data' in response_json:
print("Response:")
for item in response_json["data"]:
print(f"{item[0]}: {item[1]}")
elif 'pending' in response_json:
print("Response:")
for item in response_json["pending"]:
print(f"{item['Front']}: {item['Back']}")
else:
print(f"Unexpected response structure:\n{json.dumps(response_json, indent=4)}")
except requests.exceptions.RequestException as e:
print(f"AnkiApp API Error: {e}")
if response.content:  # Check for content before attempting decode
try:
error_json = response.json()
print(f"Error details: {json.dumps(error_json, indent=4)}")
except json.JSONDecodeError: #Handles empty or corrupted data as a raw text format (utf-8 or others...).
print(f"Raw error response: {response.content}")
except json.JSONDecodeError as e: #If nothing worked, also try converting response's data to raw utf-8 string or even raw data, before continuing the conversation, which will probably halt in errors if done and some new error is introduced, so maybe remove it or adjust...
print(f"Couldn't parse JSON response: {e}. Printing raw content instead...\nResponse content:{response.content}")
# Example usage (single credential). Extract multiple credentials and pass by user
anki_ai_chat(client_ids[0], client_tokens[0], client_versions[0])&lt;/code&gt;&lt;/section&gt;
</clientVersion></clientToken></clientId></code></section>]]></content><author><name></name></author><category term="scripts&gt;AI" /><summary type="html"><![CDATA[import requests import json import os]]></summary></entry></feed>